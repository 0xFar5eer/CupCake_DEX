{
	"id": "14ced296602ae425b8b09ff1c9cccf7c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"CupCake_DEX_contracts/cupexERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"./openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\n\nabstract contract cupexERC1155 is ERC1155Supply {\n  string contractName = \"CupCake_DEX\";\n  string contractSymbol = \"CUPEX\";\n  string urlPrefix;\n\n  constructor() ERC1155(\"\") {}\n\n  function name() external view returns (string memory) {\n    return contractName;\n  }\n\n  function symbol() external view returns (string memory) {\n    return contractSymbol;\n  }\n\n  function decimals() external pure returns (uint256) {\n    return 18;\n  }\n}\n"
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1155.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    mapping(uint256 => uint256) private _totalSupply;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return ERC1155Supply.totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                _totalSupply[ids[i]] += amounts[i];\n            }\n        }\n\n        if (to == address(0)) {\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 id = ids[i];\n                uint256 amount = amounts[i];\n                uint256 supply = _totalSupply[id];\n                require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\");\n                unchecked {\n                    _totalSupply[id] = supply - amount;\n                }\n            }\n        }\n    }\n}\n"
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"CupCake_DEX_contracts/cupexERC1155.sol": {
				"cupexERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"decimals()": "313ce567",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/cupexERC1155.sol\":\"cupexERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/cupexERC1155.sol\":{\"keccak256\":\"0xb9f443d3594785a152f1b8a19e2b1213ddf25dcc082546351a95370c592ad420\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b2bd7ea72a9ab99d2870a27545a2b7039347f4a3d7eea220748c13eb2c96fb\",\"dweb:/ipfs/Qmf5iNVYvvrFxM2TgpG4HX7oM9ghe635L6vvtj5FvgjbDU\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8\",\"dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "CupCake_DEX_contracts/cupexERC1155.sol:cupexERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 76,
								"contract": "CupCake_DEX_contracts/cupexERC1155.sol:cupexERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 78,
								"contract": "CupCake_DEX_contracts/cupexERC1155.sol:cupexERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1440,
								"contract": "CupCake_DEX_contracts/cupexERC1155.sol:cupexERC1155",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 7,
								"contract": "CupCake_DEX_contracts/cupexERC1155.sol:cupexERC1155",
								"label": "contractName",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 10,
								"contract": "CupCake_DEX_contracts/cupexERC1155.sol:cupexERC1155",
								"label": "contractSymbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 12,
								"contract": "CupCake_DEX_contracts/cupexERC1155.sol:cupexERC1155",
								"label": "urlPrefix",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  shl(0x20, tag_7)\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_8)\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8244:8250  newuri */\n  dup1\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8237:8241  _uri */\n  0x02\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8237:8250  _uri = newuri */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":8171:8257  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_22:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_64:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_23:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_68\n    /* \"#utility.yul\":1992:2041   */\n  tag_69\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1976:2042   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_71\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2229   */\ntag_70:\n    /* \"#utility.yul\":2238:2290   */\n  tag_72\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_24:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_75\n  tag_15\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2399:2521   */\ntag_74:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_76\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3201   */\ntag_3:\n    /* \"#utility.yul\":2757:2763   */\n  0x00\n    /* \"#utility.yul\":2806:2808   */\n  0x20\n    /* \"#utility.yul\":2794:2803   */\n  dup3\n    /* \"#utility.yul\":2785:2792   */\n  dup5\n    /* \"#utility.yul\":2781:2804   */\n  sub\n    /* \"#utility.yul\":2777:2809   */\n  slt\n    /* \"#utility.yul\":2774:2893   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2812:2891   */\n  tag_79\n  tag_13\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2774:2893   */\ntag_78:\n    /* \"#utility.yul\":2953:2954   */\n  0x00\n    /* \"#utility.yul\":2942:2951   */\n  dup3\n    /* \"#utility.yul\":2938:2955   */\n  add\n    /* \"#utility.yul\":2932:2956   */\n  mload\n    /* \"#utility.yul\":2983:3001   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2975:2981   */\n  dup2\n    /* \"#utility.yul\":2972:3002   */\n  gt\n    /* \"#utility.yul\":2969:3086   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3005:3084   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2969:3086   */\ntag_80:\n    /* \"#utility.yul\":3110:3184   */\n  tag_82\n    /* \"#utility.yul\":3176:3183   */\n  dup5\n    /* \"#utility.yul\":3167:3173   */\n  dup3\n    /* \"#utility.yul\":3156:3165   */\n  dup6\n    /* \"#utility.yul\":3152:3174   */\n  add\n    /* \"#utility.yul\":3110:3184   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3100:3184   */\n  swap2\n  pop\n    /* \"#utility.yul\":2903:3194   */\n  pop\n    /* \"#utility.yul\":2677:3201   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3207:3306   */\ntag_25:\n    /* \"#utility.yul\":3259:3265   */\n  0x00\n    /* \"#utility.yul\":3293:3298   */\n  dup2\n    /* \"#utility.yul\":3287:3299   */\n  mload\n    /* \"#utility.yul\":3277:3299   */\n  swap1\n  pop\n    /* \"#utility.yul\":3207:3306   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3312:3492   */\ntag_26:\n    /* \"#utility.yul\":3360:3437   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3357:3358   */\n  0x00\n    /* \"#utility.yul\":3350:3438   */\n  mstore\n    /* \"#utility.yul\":3457:3461   */\n  0x22\n    /* \"#utility.yul\":3454:3455   */\n  0x04\n    /* \"#utility.yul\":3447:3462   */\n  mstore\n    /* \"#utility.yul\":3481:3485   */\n  0x24\n    /* \"#utility.yul\":3478:3479   */\n  0x00\n    /* \"#utility.yul\":3471:3486   */\n  revert\n    /* \"#utility.yul\":3498:3818   */\ntag_27:\n    /* \"#utility.yul\":3542:3548   */\n  0x00\n    /* \"#utility.yul\":3579:3580   */\n  0x02\n    /* \"#utility.yul\":3573:3577   */\n  dup3\n    /* \"#utility.yul\":3569:3581   */\n  div\n    /* \"#utility.yul\":3559:3581   */\n  swap1\n  pop\n    /* \"#utility.yul\":3626:3627   */\n  0x01\n    /* \"#utility.yul\":3620:3624   */\n  dup3\n    /* \"#utility.yul\":3616:3628   */\n  and\n    /* \"#utility.yul\":3647:3665   */\n  dup1\n    /* \"#utility.yul\":3637:3718   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3703:3707   */\n  0x7f\n    /* \"#utility.yul\":3695:3701   */\n  dup3\n    /* \"#utility.yul\":3691:3708   */\n  and\n    /* \"#utility.yul\":3681:3708   */\n  swap2\n  pop\n    /* \"#utility.yul\":3637:3718   */\ntag_86:\n    /* \"#utility.yul\":3765:3767   */\n  0x20\n    /* \"#utility.yul\":3757:3763   */\n  dup3\n    /* \"#utility.yul\":3754:3768   */\n  lt\n    /* \"#utility.yul\":3734:3752   */\n  dup2\n    /* \"#utility.yul\":3731:3769   */\n  sub\n    /* \"#utility.yul\":3728:3812   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3784:3802   */\n  tag_88\n  tag_26\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3728:3812   */\ntag_87:\n    /* \"#utility.yul\":3549:3818   */\n  pop\n    /* \"#utility.yul\":3498:3818   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3824:3965   */\ntag_28:\n    /* \"#utility.yul\":3873:3877   */\n  0x00\n    /* \"#utility.yul\":3896:3899   */\n  dup2\n    /* \"#utility.yul\":3888:3899   */\n  swap1\n  pop\n    /* \"#utility.yul\":3919:3922   */\n  dup2\n    /* \"#utility.yul\":3916:3917   */\n  0x00\n    /* \"#utility.yul\":3909:3923   */\n  mstore\n    /* \"#utility.yul\":3953:3957   */\n  0x20\n    /* \"#utility.yul\":3950:3951   */\n  0x00\n    /* \"#utility.yul\":3940:3958   */\n  keccak256\n    /* \"#utility.yul\":3932:3958   */\n  swap1\n  pop\n    /* \"#utility.yul\":3824:3965   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3971:4064   */\ntag_29:\n    /* \"#utility.yul\":4008:4014   */\n  0x00\n    /* \"#utility.yul\":4055:4057   */\n  0x20\n    /* \"#utility.yul\":4050:4052   */\n  0x1f\n    /* \"#utility.yul\":4043:4048   */\n  dup4\n    /* \"#utility.yul\":4039:4053   */\n  add\n    /* \"#utility.yul\":4035:4058   */\n  div\n    /* \"#utility.yul\":4025:4058   */\n  swap1\n  pop\n    /* \"#utility.yul\":3971:4064   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4070:4177   */\ntag_30:\n    /* \"#utility.yul\":4114:4122   */\n  0x00\n    /* \"#utility.yul\":4164:4169   */\n  dup3\n    /* \"#utility.yul\":4158:4162   */\n  dup3\n    /* \"#utility.yul\":4154:4170   */\n  shl\n    /* \"#utility.yul\":4133:4170   */\n  swap1\n  pop\n    /* \"#utility.yul\":4070:4177   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4183:4576   */\ntag_31:\n    /* \"#utility.yul\":4252:4258   */\n  0x00\n    /* \"#utility.yul\":4302:4303   */\n  0x08\n    /* \"#utility.yul\":4290:4300   */\n  dup4\n    /* \"#utility.yul\":4286:4304   */\n  mul\n    /* \"#utility.yul\":4325:4422   */\n  tag_93\n    /* \"#utility.yul\":4355:4421   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4344:4353   */\n  dup3\n    /* \"#utility.yul\":4325:4422   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4443:4482   */\n  tag_94\n    /* \"#utility.yul\":4473:4481   */\n  dup7\n    /* \"#utility.yul\":4462:4471   */\n  dup4\n    /* \"#utility.yul\":4443:4482   */\n  tag_30\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4431:4482   */\n  swap6\n  pop\n    /* \"#utility.yul\":4515:4519   */\n  dup1\n    /* \"#utility.yul\":4511:4520   */\n  not\n    /* \"#utility.yul\":4504:4509   */\n  dup5\n    /* \"#utility.yul\":4500:4521   */\n  and\n    /* \"#utility.yul\":4491:4521   */\n  swap4\n  pop\n    /* \"#utility.yul\":4564:4568   */\n  dup1\n    /* \"#utility.yul\":4554:4562   */\n  dup7\n    /* \"#utility.yul\":4550:4569   */\n  and\n    /* \"#utility.yul\":4543:4548   */\n  dup5\n    /* \"#utility.yul\":4540:4570   */\n  or\n    /* \"#utility.yul\":4530:4570   */\n  swap3\n  pop\n    /* \"#utility.yul\":4259:4576   */\n  pop\n  pop\n    /* \"#utility.yul\":4183:4576   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4582:4659   */\ntag_32:\n    /* \"#utility.yul\":4619:4626   */\n  0x00\n    /* \"#utility.yul\":4648:4653   */\n  dup2\n    /* \"#utility.yul\":4637:4653   */\n  swap1\n  pop\n    /* \"#utility.yul\":4582:4659   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4665:4725   */\ntag_33:\n    /* \"#utility.yul\":4693:4696   */\n  0x00\n    /* \"#utility.yul\":4714:4719   */\n  dup2\n    /* \"#utility.yul\":4707:4719   */\n  swap1\n  pop\n    /* \"#utility.yul\":4665:4725   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4731:4873   */\ntag_34:\n    /* \"#utility.yul\":4781:4790   */\n  0x00\n    /* \"#utility.yul\":4814:4867   */\n  tag_98\n    /* \"#utility.yul\":4832:4866   */\n  tag_99\n    /* \"#utility.yul\":4841:4865   */\n  tag_100\n    /* \"#utility.yul\":4859:4864   */\n  dup5\n    /* \"#utility.yul\":4841:4865   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4832:4866   */\n  tag_33\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4814:4867   */\n  tag_32\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4801:4867   */\n  swap1\n  pop\n    /* \"#utility.yul\":4731:4873   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4879:4954   */\ntag_35:\n    /* \"#utility.yul\":4922:4925   */\n  0x00\n    /* \"#utility.yul\":4943:4948   */\n  dup2\n    /* \"#utility.yul\":4936:4948   */\n  swap1\n  pop\n    /* \"#utility.yul\":4879:4954   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4960:5229   */\ntag_36:\n    /* \"#utility.yul\":5070:5109   */\n  tag_103\n    /* \"#utility.yul\":5101:5108   */\n  dup4\n    /* \"#utility.yul\":5070:5109   */\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5131:5222   */\n  tag_104\n    /* \"#utility.yul\":5180:5221   */\n  tag_105\n    /* \"#utility.yul\":5204:5220   */\n  dup3\n    /* \"#utility.yul\":5180:5221   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5172:5178   */\n  dup5\n    /* \"#utility.yul\":5165:5169   */\n  dup5\n    /* \"#utility.yul\":5159:5170   */\n  sload\n    /* \"#utility.yul\":5131:5222   */\n  tag_31\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5125:5129   */\n  dup3\n    /* \"#utility.yul\":5118:5223   */\n  sstore\n    /* \"#utility.yul\":5036:5229   */\n  pop\n    /* \"#utility.yul\":4960:5229   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5235:5308   */\ntag_37:\n    /* \"#utility.yul\":5280:5283   */\n  0x00\n    /* \"#utility.yul\":5235:5308   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5314:5503   */\ntag_38:\n    /* \"#utility.yul\":5391:5423   */\n  tag_108\n  tag_37\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5432:5497   */\n  tag_109\n    /* \"#utility.yul\":5490:5496   */\n  dup2\n    /* \"#utility.yul\":5482:5488   */\n  dup5\n    /* \"#utility.yul\":5476:5480   */\n  dup5\n    /* \"#utility.yul\":5432:5497   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5367:5503   */\n  pop\n    /* \"#utility.yul\":5314:5503   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5509:5695   */\ntag_39:\n    /* \"#utility.yul\":5569:5689   */\ntag_111:\n    /* \"#utility.yul\":5586:5589   */\n  dup2\n    /* \"#utility.yul\":5579:5584   */\n  dup2\n    /* \"#utility.yul\":5576:5590   */\n  lt\n    /* \"#utility.yul\":5569:5689   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5640:5679   */\n  tag_114\n    /* \"#utility.yul\":5677:5678   */\n  0x00\n    /* \"#utility.yul\":5670:5675   */\n  dup3\n    /* \"#utility.yul\":5640:5679   */\n  tag_38\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5613:5614   */\n  0x01\n    /* \"#utility.yul\":5606:5611   */\n  dup2\n    /* \"#utility.yul\":5602:5615   */\n  add\n    /* \"#utility.yul\":5593:5615   */\n  swap1\n  pop\n    /* \"#utility.yul\":5569:5689   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":5509:5695   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5701:6244   */\ntag_40:\n    /* \"#utility.yul\":5802:5804   */\n  0x1f\n    /* \"#utility.yul\":5797:5800   */\n  dup3\n    /* \"#utility.yul\":5794:5805   */\n  gt\n    /* \"#utility.yul\":5791:6237   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5836:5874   */\n  tag_117\n    /* \"#utility.yul\":5868:5873   */\n  dup2\n    /* \"#utility.yul\":5836:5874   */\n  tag_28\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5920:5949   */\n  tag_118\n    /* \"#utility.yul\":5938:5948   */\n  dup5\n    /* \"#utility.yul\":5920:5949   */\n  tag_29\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5910:5918   */\n  dup2\n    /* \"#utility.yul\":5906:5950   */\n  add\n    /* \"#utility.yul\":6103:6105   */\n  0x20\n    /* \"#utility.yul\":6091:6101   */\n  dup6\n    /* \"#utility.yul\":6088:6106   */\n  lt\n    /* \"#utility.yul\":6085:6134   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6124:6132   */\n  dup2\n    /* \"#utility.yul\":6109:6132   */\n  swap1\n  pop\n    /* \"#utility.yul\":6085:6134   */\ntag_119:\n    /* \"#utility.yul\":6147:6227   */\n  tag_120\n    /* \"#utility.yul\":6203:6225   */\n  tag_121\n    /* \"#utility.yul\":6221:6224   */\n  dup6\n    /* \"#utility.yul\":6203:6225   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6193:6201   */\n  dup4\n    /* \"#utility.yul\":6189:6226   */\n  add\n    /* \"#utility.yul\":6176:6187   */\n  dup3\n    /* \"#utility.yul\":6147:6227   */\n  tag_39\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5806:6237   */\n  pop\n  pop\n    /* \"#utility.yul\":5791:6237   */\ntag_116:\n    /* \"#utility.yul\":5701:6244   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6250:6367   */\ntag_41:\n    /* \"#utility.yul\":6304:6312   */\n  0x00\n    /* \"#utility.yul\":6354:6359   */\n  dup3\n    /* \"#utility.yul\":6348:6352   */\n  dup3\n    /* \"#utility.yul\":6344:6360   */\n  shr\n    /* \"#utility.yul\":6323:6360   */\n  swap1\n  pop\n    /* \"#utility.yul\":6250:6367   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6373:6542   */\ntag_42:\n    /* \"#utility.yul\":6417:6423   */\n  0x00\n    /* \"#utility.yul\":6450:6501   */\n  tag_124\n    /* \"#utility.yul\":6498:6499   */\n  0x00\n    /* \"#utility.yul\":6494:6500   */\n  not\n    /* \"#utility.yul\":6486:6491   */\n  dup5\n    /* \"#utility.yul\":6483:6484   */\n  0x08\n    /* \"#utility.yul\":6479:6492   */\n  mul\n    /* \"#utility.yul\":6450:6501   */\n  tag_41\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6446:6502   */\n  not\n    /* \"#utility.yul\":6531:6535   */\n  dup1\n    /* \"#utility.yul\":6525:6529   */\n  dup4\n    /* \"#utility.yul\":6521:6536   */\n  and\n    /* \"#utility.yul\":6511:6536   */\n  swap2\n  pop\n    /* \"#utility.yul\":6424:6542   */\n  pop\n    /* \"#utility.yul\":6373:6542   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6547:6842   */\ntag_43:\n    /* \"#utility.yul\":6623:6627   */\n  0x00\n    /* \"#utility.yul\":6769:6798   */\n  tag_126\n    /* \"#utility.yul\":6794:6797   */\n  dup4\n    /* \"#utility.yul\":6788:6792   */\n  dup4\n    /* \"#utility.yul\":6769:6798   */\n  tag_42\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6761:6798   */\n  swap2\n  pop\n    /* \"#utility.yul\":6831:6834   */\n  dup3\n    /* \"#utility.yul\":6828:6829   */\n  0x02\n    /* \"#utility.yul\":6824:6835   */\n  mul\n    /* \"#utility.yul\":6818:6822   */\n  dup3\n    /* \"#utility.yul\":6815:6836   */\n  or\n    /* \"#utility.yul\":6807:6836   */\n  swap1\n  pop\n    /* \"#utility.yul\":6547:6842   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6847:8242   */\ntag_11:\n    /* \"#utility.yul\":6964:7001   */\n  tag_128\n    /* \"#utility.yul\":6997:7000   */\n  dup3\n    /* \"#utility.yul\":6964:7001   */\n  tag_25\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7066:7084   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7058:7064   */\n  dup2\n    /* \"#utility.yul\":7055:7085   */\n  gt\n    /* \"#utility.yul\":7052:7108   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":7088:7106   */\n  tag_130\n  tag_18\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7052:7108   */\ntag_129:\n    /* \"#utility.yul\":7132:7170   */\n  tag_131\n    /* \"#utility.yul\":7164:7168   */\n  dup3\n    /* \"#utility.yul\":7158:7169   */\n  sload\n    /* \"#utility.yul\":7132:7170   */\n  tag_27\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7217:7284   */\n  tag_132\n    /* \"#utility.yul\":7277:7283   */\n  dup3\n    /* \"#utility.yul\":7269:7275   */\n  dup3\n    /* \"#utility.yul\":7263:7267   */\n  dup6\n    /* \"#utility.yul\":7217:7284   */\n  tag_40\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7311:7312   */\n  0x00\n    /* \"#utility.yul\":7335:7339   */\n  0x20\n    /* \"#utility.yul\":7322:7339   */\n  swap1\n  pop\n    /* \"#utility.yul\":7367:7369   */\n  0x1f\n    /* \"#utility.yul\":7359:7365   */\n  dup4\n    /* \"#utility.yul\":7356:7370   */\n  gt\n    /* \"#utility.yul\":7384:7385   */\n  0x01\n    /* \"#utility.yul\":7379:7997   */\n  dup2\n  eq\n  tag_134\n  jumpi\n    /* \"#utility.yul\":8041:8042   */\n  0x00\n    /* \"#utility.yul\":8058:8064   */\n  dup5\n    /* \"#utility.yul\":8055:8132   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8107:8116   */\n  dup3\n    /* \"#utility.yul\":8102:8105   */\n  dup8\n    /* \"#utility.yul\":8098:8117   */\n  add\n    /* \"#utility.yul\":8092:8118   */\n  mload\n    /* \"#utility.yul\":8083:8118   */\n  swap1\n  pop\n    /* \"#utility.yul\":8055:8132   */\ntag_135:\n    /* \"#utility.yul\":8158:8225   */\n  tag_136\n    /* \"#utility.yul\":8218:8224   */\n  dup6\n    /* \"#utility.yul\":8211:8216   */\n  dup3\n    /* \"#utility.yul\":8158:8225   */\n  tag_43\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":8152:8156   */\n  dup7\n    /* \"#utility.yul\":8145:8226   */\n  sstore\n    /* \"#utility.yul\":8014:8236   */\n  pop\n    /* \"#utility.yul\":7349:8236   */\n  jump(tag_133)\n    /* \"#utility.yul\":7379:7997   */\ntag_134:\n    /* \"#utility.yul\":7431:7435   */\n  0x1f\n    /* \"#utility.yul\":7427:7436   */\n  not\n    /* \"#utility.yul\":7419:7425   */\n  dup5\n    /* \"#utility.yul\":7415:7437   */\n  and\n    /* \"#utility.yul\":7465:7502   */\n  tag_137\n    /* \"#utility.yul\":7497:7501   */\n  dup7\n    /* \"#utility.yul\":7465:7502   */\n  tag_28\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7524:7525   */\n  0x00\n    /* \"#utility.yul\":7538:7746   */\ntag_138:\n    /* \"#utility.yul\":7552:7559   */\n  dup3\n    /* \"#utility.yul\":7549:7550   */\n  dup2\n    /* \"#utility.yul\":7546:7560   */\n  lt\n    /* \"#utility.yul\":7538:7746   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":7631:7640   */\n  dup5\n    /* \"#utility.yul\":7626:7629   */\n  dup10\n    /* \"#utility.yul\":7622:7641   */\n  add\n    /* \"#utility.yul\":7616:7642   */\n  mload\n    /* \"#utility.yul\":7608:7614   */\n  dup3\n    /* \"#utility.yul\":7601:7643   */\n  sstore\n    /* \"#utility.yul\":7682:7683   */\n  0x01\n    /* \"#utility.yul\":7674:7680   */\n  dup3\n    /* \"#utility.yul\":7670:7684   */\n  add\n    /* \"#utility.yul\":7660:7684   */\n  swap2\n  pop\n    /* \"#utility.yul\":7729:7731   */\n  0x20\n    /* \"#utility.yul\":7718:7727   */\n  dup6\n    /* \"#utility.yul\":7714:7732   */\n  add\n    /* \"#utility.yul\":7701:7732   */\n  swap5\n  pop\n    /* \"#utility.yul\":7575:7579   */\n  0x20\n    /* \"#utility.yul\":7572:7573   */\n  dup2\n    /* \"#utility.yul\":7568:7580   */\n  add\n    /* \"#utility.yul\":7563:7580   */\n  swap1\n  pop\n    /* \"#utility.yul\":7538:7746   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":7774:7780   */\n  dup7\n    /* \"#utility.yul\":7765:7772   */\n  dup4\n    /* \"#utility.yul\":7762:7781   */\n  lt\n    /* \"#utility.yul\":7759:7938   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7832:7841   */\n  dup5\n    /* \"#utility.yul\":7827:7830   */\n  dup10\n    /* \"#utility.yul\":7823:7842   */\n  add\n    /* \"#utility.yul\":7817:7843   */\n  mload\n    /* \"#utility.yul\":7875:7923   */\n  tag_142\n    /* \"#utility.yul\":7917:7921   */\n  0x1f\n    /* \"#utility.yul\":7909:7915   */\n  dup10\n    /* \"#utility.yul\":7905:7922   */\n  and\n    /* \"#utility.yul\":7894:7903   */\n  dup3\n    /* \"#utility.yul\":7875:7923   */\n  tag_42\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7867:7873   */\n  dup4\n    /* \"#utility.yul\":7860:7924   */\n  sstore\n    /* \"#utility.yul\":7782:7938   */\n  pop\n    /* \"#utility.yul\":7759:7938   */\ntag_141:\n    /* \"#utility.yul\":7984:7985   */\n  0x01\n    /* \"#utility.yul\":7980:7981   */\n  0x02\n    /* \"#utility.yul\":7972:7978   */\n  dup9\n    /* \"#utility.yul\":7968:7982   */\n  mul\n    /* \"#utility.yul\":7964:7986   */\n  add\n    /* \"#utility.yul\":7958:7962   */\n  dup9\n    /* \"#utility.yul\":7951:7987   */\n  sstore\n    /* \"#utility.yul\":7386:7997   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7349:8236   */\ntag_133:\n  pop\n    /* \"#utility.yul\":6939:8242   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6847:8242   */\n  pop\n  pop\n  jump\t// out\n    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":570:17120  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2317:2318  0 */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2298:2305  account */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2290:2367  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2393  _balances */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2394:2396  id */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2397  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2398:2405  account */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2384:2406  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2377:2406  return _balances[id][account] */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2185:2413  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1388:1414  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1384  interfaceId */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1445:1482  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1430:1441  interfaceId */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1522:1533  interfaceId */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1498:1521  super.supportsInterface */\n      tag_61\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_59:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4293:4305  _msgSender() */\n      tag_70\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4293:4303  _msgSender */\n      tag_71\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4293:4305  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4289  from */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4305  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4326:4330  from */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4332:4344  _msgSender() */\n      tag_74\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4332:4342  _msgSender */\n      tag_71\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4332:4344  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4309:4325  isApprovedForAll */\n      tag_47\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4309:4345  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4285:4345  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4264:4421  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4454:4458  from */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4460:4462  to */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4464:4467  ids */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4469:4476  amounts */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4478:4482  data */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4431:4453  _safeBatchTransferFrom */\n      tag_79\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4431:4483  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4060:4490  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2721:2737  uint256[] memory */\n      0x60\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2780:2783  ids */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2780:2790  ids.length */\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2761:2769  accounts */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2761:2776  accounts.length */\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2761:2790  accounts.length == ids.length */\n      eq\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2753:2836  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2847:2877  uint256[] memory batchBalances */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2894:2902  accounts */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2894:2909  accounts.length */\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2880:2910  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2847:2910  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2926:2935  uint256 i */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2945:2953  accounts */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2945:2960  accounts.length */\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2941:2942  i */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2941:2960  i < accounts.length */\n      lt\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3010:3018  accounts */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3019:3020  i */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3010:3021  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3023:3026  ids */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3027:3028  i */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3023:3029  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_95\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3000:3009  balanceOf */\n      tag_15\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3000:3030  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2981:2994  batchBalances */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2995:2996  i */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2981:2997  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2981:3030  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2962:2965  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2921:3041  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3058:3071  batchBalances */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3051:3071  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":2570:3078  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3259:3271  _msgSender() */\n      tag_103\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3259:3269  _msgSender */\n      tag_71\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3259:3271  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3273:3281  operator */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3283:3291  approved */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3240:3258  _setApprovalForAll */\n      tag_104\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3240:3292  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3146:3299  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3465:3469  bool */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3506  _operatorApprovals */\n      0x01\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3507:3514  account */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3515  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3516:3524  operator */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3488:3525  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3481:3525  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3366:3532  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n    tag_52:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3807:3819  _msgSender() */\n      tag_107\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3807:3817  _msgSender */\n      tag_71\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3807:3819  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3803  from */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3819  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3840:3844  from */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3846:3858  _msgSender() */\n      tag_110\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3846:3856  _msgSender */\n      tag_71\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3846:3858  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3823:3839  isApprovedForAll */\n      tag_47\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3823:3859  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3799:3859  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_108:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3778:3926  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      tag_114\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3954:3958  from */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3960:3962  to */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3964:3966  id */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3968:3974  amount */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3976:3980  data */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3936:3953  _safeTransferFrom */\n      tag_115\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3936:3981  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_114:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":3599:3988  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_71:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6453:6460  amounts */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6453:6467  amounts.length */\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6439:6442  ids */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6439:6449  ids.length */\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6439:6467  ids.length == amounts.length */\n      eq\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6431:6512  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6544:6545  0 */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6530:6532  to */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6530:6546  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6522:6588  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6599:6615  address operator */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6618:6630  _msgSender() */\n      tag_125\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6618:6628  _msgSender */\n      tag_71\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6618:6630  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6599:6630  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_126\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6662:6670  operator */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6672:6676  from */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6678:6680  to */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6682:6685  ids */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6687:6694  amounts */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6696:6700  data */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6641:6661  _beforeTokenTransfer */\n      tag_127\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6641:6701  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_126:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6717:6726  uint256 i */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6736:6739  ids */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6736:6746  ids.length */\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6732:6733  i */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6732:6746  i < ids.length */\n      lt\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6767:6777  uint256 id */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6780:6783  ids */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6784:6785  i */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6780:6786  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6767:6786  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6800:6814  uint256 amount */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6817:6824  amounts */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6825:6826  i */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6817:6827  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6800:6827  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6842:6861  uint256 fromBalance */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6864:6873  _balances */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6874:6876  id */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6864:6877  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6878:6882  from */\n      dup12\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6864:6883  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6842:6883  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6920:6926  amount */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6905:6916  fromBalance */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6905:6926  fromBalance >= amount */\n      lt\n      iszero\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6897:6973  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7051:7057  amount */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7037:7048  fromBalance */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7037:7057  fromBalance - amount */\n      sub\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7024  _balances */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7025:7027  id */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7028  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7029:7033  from */\n      dup13\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7034  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7015:7057  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7106:7112  amount */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7094  _balances */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7098  _balances[id] */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7095:7097  id */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7098  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7099:7101  to */\n      dup12\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7102  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7085:7112  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6753:7123  {... */\n      pop\n      pop\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6748:6751  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6712:7123  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7168:7170  to */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7162:7166  from */\n      dup7\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7152:7160  operator */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7172:7175  ids */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7177:7184  amounts */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7138:7185  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7196:7255  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7216:7224  operator */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7226:7230  from */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7232:7234  to */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7236:7239  ids */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7241:7248  amounts */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7250:7254  data */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7196:7215  _afterTokenTransfer */\n      tag_144\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7196:7255  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_145\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7302:7310  operator */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7312:7316  from */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7318:7320  to */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7322:7325  ids */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7327:7334  amounts */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7336:7340  data */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7266:7301  _doSafeBatchTransferAcceptanceCheck */\n      tag_146\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":7266:7341  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_145:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6421:7348  {... */\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":6233:7348  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n    tag_104:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12923:12931  operator */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12914:12919  owner */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12914:12931  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12906:12977  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13025:13033  approved */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13005  _operatorApprovals */\n      0x01\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13006:13011  owner */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13012  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13013:13021  operator */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13022  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12987:13033  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13070:13078  operator */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13063:13068  owner */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13080:13088  approved */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":13048:13089  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":12773:13096  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n    tag_115:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5135:5136  0 */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5121:5123  to */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5121:5137  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5113:5179  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_124\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5190:5206  address operator */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5209:5221  _msgSender() */\n      tag_155\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5209:5219  _msgSender */\n      tag_71\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5209:5221  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5190:5221  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5231:5251  uint256[] memory ids */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      tag_156\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5272:5274  id */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5254:5271  _asSingletonArray */\n      tag_157\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5254:5275  _asSingletonArray(id) */\n      jump\t// in\n    tag_156:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5231:5275  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5285:5309  uint256[] memory amounts */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      tag_158\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5330:5336  amount */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5312:5329  _asSingletonArray */\n      tag_157\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5312:5337  _asSingletonArray(amount) */\n      jump\t// in\n    tag_158:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5285:5337  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_159\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5369:5377  operator */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5379:5383  from */\n      dup10\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5385:5387  to */\n      dup10\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5389:5392  ids */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5394:5401  amounts */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5403:5407  data */\n      dup10\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5348:5368  _beforeTokenTransfer */\n      tag_127\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5348:5408  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_159:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5419:5438  uint256 fromBalance */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5441:5450  _balances */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5451:5453  id */\n      dup9\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5441:5454  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5455:5459  from */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5441:5460  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5419:5460  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5493:5499  amount */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5478:5489  fromBalance */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5478:5499  fromBalance >= amount */\n      lt\n      iszero\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5470:5546  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_137\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5616:5622  amount */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5602:5613  fromBalance */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5602:5622  fromBalance - amount */\n      sub\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5589  _balances */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5590:5592  id */\n      dup10\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5593  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5594:5598  from */\n      dup12\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5599  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5580:5622  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5663:5669  amount */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5651  _balances */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5655  _balances[id] */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5652:5654  id */\n      dup10\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5655  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5656:5658  to */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5659  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5642:5669  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5716:5718  to */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5710:5714  from */\n      dup10\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5700:5708  operator */\n      dup6\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5720:5722  id */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5724:5730  amount */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5685:5731  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5742:5801  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_165\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5762:5770  operator */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5772:5776  from */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5778:5780  to */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5782:5785  ids */\n      dup7\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5787:5794  amounts */\n      dup7\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5796:5800  data */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5742:5761  _afterTokenTransfer */\n      tag_144\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5742:5801  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_165:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_166\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5843:5851  operator */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5853:5857  from */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5859:5861  to */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5863:5865  id */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5867:5873  amount */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5875:5879  data */\n      dup11\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5812:5842  _doSafeTransferAcceptanceCheck */\n      tag_167\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5812:5880  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_166:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":5103:5887  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":4940:5887  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":14030:14244  function _beforeTokenTransfer(... */\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15177:15390  function _afterTokenTransfer(... */\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_146:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16359:16374  to.isContract() */\n      tag_171\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16359:16361  to */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16359:16372  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16359:16374  to.isContract() */\n      jump\t// in\n    tag_171:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16411:16413  to */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16437  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16438:16446  operator */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16448:16452  from */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16454:16457  ids */\n      dup7\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16459:16466  amounts */\n      dup7\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16468:16472  data */\n      dup7\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16394:16473  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x01\n    tag_176:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_179\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      dup1\n      0x08c379a0\n      sub\n      tag_182\n      jumpi\n      pop\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      dup1\n      tag_187\n      jumpi\n      pop\n      jump(tag_181)\n    tag_187:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16779:16785  reason */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16772:16786  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_182:\n      pop\n    tag_181:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16826:16888  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16390:16903  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_179:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16564:16612  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16552:16560  response */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16552:16612  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_192\n      jumpi\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16636:16686  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16548:16705  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_192:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16474:16719  returns (... */\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16355:16913  if (to.isContract()) {... */\n    tag_173:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16127:16919  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_157:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16991:17007  uint256[] memory */\n      0x60\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17019:17041  uint256[] memory array */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17058:17059  1 */\n      0x01\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17044:17060  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_196\n      jumpi\n      tag_197\n      tag_86\n      jump\t// in\n    tag_197:\n    tag_196:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_198\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_198:\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17019:17060  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17081:17088  element */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17070:17075  array */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17076:17077  0 */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17070:17078  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_200\n      tag_94\n      jump\t// in\n    tag_200:\n    tag_199:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17070:17088  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17106:17111  array */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":17099:17111  return array */\n      swap2\n      pop\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16925:17118  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n    tag_167:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15603:15618  to.isContract() */\n      tag_202\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15603:15605  to */\n      dup5\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15603:15616  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15603:15618  to.isContract() */\n      jump\t// in\n    tag_202:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15655:15657  to */\n      dup4\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15676  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15677:15685  operator */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15687:15691  from */\n      dup8\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15693:15695  id */\n      dup7\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15697:15703  amount */\n      dup7\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15705:15709  data */\n      dup7\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15638:15710  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_207:\n      0x01\n    tag_206:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_208\n      jumpi\n      tag_212\n      tag_184\n      jump\t// in\n    tag_212:\n      dup1\n      0x08c379a0\n      sub\n      tag_211\n      jumpi\n      pop\n      tag_213\n      tag_186\n      jump\t// in\n    tag_213:\n      dup1\n      tag_214\n      jumpi\n      pop\n      jump(tag_210)\n    tag_214:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15981:15987  reason */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15974:15988  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_211:\n      pop\n    tag_210:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":16028:16090  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_190\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15634:16105  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_208:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15771:15814  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15759:15767  response */\n      dup2\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15759:15814  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_218\n      jumpi\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15838:15888  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_194\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15755:15907  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_218:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15711:15921  returns (bytes4 response) {... */\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15599:16115  if (to.isContract()) {... */\n    tag_203:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":15396:16121  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_172:\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_221:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_222:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_223:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_224:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_225:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_300\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_224\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_226:\n        /* \"#utility.yul\":641:665   */\n      tag_302\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_225\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_303:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_227:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_305\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_226\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_228:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_229:\n        /* \"#utility.yul\":997:1021   */\n      tag_308\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_228\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_309:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_230:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_311\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_229\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_14:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_314\n      tag_222\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1290:1409   */\n    tag_313:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_315\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_227\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_316\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_230\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_231:\n        /* \"#utility.yul\":1764:1788   */\n      tag_318\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_228\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_17:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_320\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_231\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_232:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_233:\n        /* \"#utility.yul\":2256:2279   */\n      tag_323\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_232\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_324:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_234:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_326\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_233\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_20:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_329\n      tag_222\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2528:2647   */\n    tag_328:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_330\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_234\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_235:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_236:\n        /* \"#utility.yul\":2963:2984   */\n      tag_333\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_235\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_23:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_335\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_236\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_26:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_338\n      tag_222\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3289:3408   */\n    tag_337:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_339\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_230\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_237:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_238:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4074   */\n    tag_239:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3919:4032   */\n    tag_343:\n        /* \"#utility.yul\":3933:3939   */\n      dup4\n        /* \"#utility.yul\":3930:3931   */\n      dup2\n        /* \"#utility.yul\":3927:3940   */\n      lt\n        /* \"#utility.yul\":3919:4032   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":4018:4019   */\n      dup1\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4009:4020   */\n      add\n        /* \"#utility.yul\":4003:4021   */\n      mload\n        /* \"#utility.yul\":3999:4000   */\n      dup2\n        /* \"#utility.yul\":3994:3997   */\n      dup5\n        /* \"#utility.yul\":3990:4001   */\n      add\n        /* \"#utility.yul\":3983:4022   */\n      mstore\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3952:3953   */\n      dup2\n        /* \"#utility.yul\":3948:3958   */\n      add\n        /* \"#utility.yul\":3943:3958   */\n      swap1\n      pop\n        /* \"#utility.yul\":3919:4032   */\n      jump(tag_343)\n    tag_345:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4052:4055   */\n      dup5\n        /* \"#utility.yul\":4048:4064   */\n      add\n        /* \"#utility.yul\":4041:4068   */\n      mstore\n        /* \"#utility.yul\":3890:4074   */\n      pop\n        /* \"#utility.yul\":3828:4074   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4182   */\n    tag_240:\n        /* \"#utility.yul\":4121:4127   */\n      0x00\n        /* \"#utility.yul\":4172:4174   */\n      0x1f\n        /* \"#utility.yul\":4168:4175   */\n      not\n        /* \"#utility.yul\":4163:4165   */\n      0x1f\n        /* \"#utility.yul\":4156:4161   */\n      dup4\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4148:4176   */\n      and\n        /* \"#utility.yul\":4138:4176   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4188:4565   */\n    tag_241:\n        /* \"#utility.yul\":4276:4279   */\n      0x00\n        /* \"#utility.yul\":4304:4343   */\n      tag_348\n        /* \"#utility.yul\":4337:4342   */\n      dup3\n        /* \"#utility.yul\":4304:4343   */\n      tag_237\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4359:4430   */\n      tag_349\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4418:4421   */\n      dup6\n        /* \"#utility.yul\":4359:4430   */\n      tag_238\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4352:4430   */\n      swap4\n      pop\n        /* \"#utility.yul\":4439:4504   */\n      tag_350\n        /* \"#utility.yul\":4497:4503   */\n      dup2\n        /* \"#utility.yul\":4492:4495   */\n      dup6\n        /* \"#utility.yul\":4485:4489   */\n      0x20\n        /* \"#utility.yul\":4478:4483   */\n      dup7\n        /* \"#utility.yul\":4474:4490   */\n      add\n        /* \"#utility.yul\":4439:4504   */\n      tag_239\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4529:4558   */\n      tag_351\n        /* \"#utility.yul\":4551:4557   */\n      dup2\n        /* \"#utility.yul\":4529:4558   */\n      tag_240\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4524:4527   */\n      dup5\n        /* \"#utility.yul\":4520:4559   */\n      add\n        /* \"#utility.yul\":4513:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4280:4565   */\n      pop\n        /* \"#utility.yul\":4188:4565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4884   */\n    tag_29:\n        /* \"#utility.yul\":4684:4688   */\n      0x00\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4711:4720   */\n      dup3\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"#utility.yul\":4699:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4771:4780   */\n      dup2\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4761:4781   */\n      sub\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4746:4755   */\n      dup4\n        /* \"#utility.yul\":4742:4759   */\n      add\n        /* \"#utility.yul\":4735:4782   */\n      mstore\n        /* \"#utility.yul\":4799:4877   */\n      tag_353\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4863:4869   */\n      dup5\n        /* \"#utility.yul\":4799:4877   */\n      tag_241\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4791:4877   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_242:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5193   */\n    tag_86:\n        /* \"#utility.yul\":5061:5138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5058:5059   */\n      0x00\n        /* \"#utility.yul\":5051:5139   */\n      mstore\n        /* \"#utility.yul\":5158:5162   */\n      0x41\n        /* \"#utility.yul\":5155:5156   */\n      0x04\n        /* \"#utility.yul\":5148:5163   */\n      mstore\n        /* \"#utility.yul\":5182:5186   */\n      0x24\n        /* \"#utility.yul\":5179:5180   */\n      0x00\n        /* \"#utility.yul\":5172:5187   */\n      revert\n        /* \"#utility.yul\":5199:5480   */\n    tag_243:\n        /* \"#utility.yul\":5282:5309   */\n      tag_357\n        /* \"#utility.yul\":5304:5308   */\n      dup3\n        /* \"#utility.yul\":5282:5309   */\n      tag_240\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5274:5280   */\n      dup2\n        /* \"#utility.yul\":5270:5310   */\n      add\n        /* \"#utility.yul\":5412:5418   */\n      dup2\n        /* \"#utility.yul\":5400:5410   */\n      dup2\n        /* \"#utility.yul\":5397:5419   */\n      lt\n        /* \"#utility.yul\":5376:5394   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5364:5374   */\n      dup3\n        /* \"#utility.yul\":5361:5395   */\n      gt\n        /* \"#utility.yul\":5358:5420   */\n      or\n        /* \"#utility.yul\":5355:5443   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":5423:5441   */\n      tag_359\n      tag_86\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5355:5443   */\n    tag_358:\n        /* \"#utility.yul\":5463:5473   */\n      dup1\n        /* \"#utility.yul\":5459:5461   */\n      0x40\n        /* \"#utility.yul\":5452:5474   */\n      mstore\n        /* \"#utility.yul\":5242:5480   */\n      pop\n        /* \"#utility.yul\":5199:5480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5486:5615   */\n    tag_244:\n        /* \"#utility.yul\":5520:5526   */\n      0x00\n        /* \"#utility.yul\":5547:5567   */\n      tag_361\n      tag_221\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5537:5567   */\n      swap1\n      pop\n        /* \"#utility.yul\":5576:5609   */\n      tag_362\n        /* \"#utility.yul\":5604:5608   */\n      dup3\n        /* \"#utility.yul\":5596:5602   */\n      dup3\n        /* \"#utility.yul\":5576:5609   */\n      tag_243\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5486:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5621:5932   */\n    tag_245:\n        /* \"#utility.yul\":5698:5702   */\n      0x00\n        /* \"#utility.yul\":5788:5806   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5780:5786   */\n      dup3\n        /* \"#utility.yul\":5777:5807   */\n      gt\n        /* \"#utility.yul\":5774:5830   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":5810:5828   */\n      tag_365\n      tag_86\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5774:5830   */\n    tag_364:\n        /* \"#utility.yul\":5860:5864   */\n      0x20\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5848:5865   */\n      mul\n        /* \"#utility.yul\":5840:5865   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:5924   */\n      0x20\n        /* \"#utility.yul\":5914:5918   */\n      dup2\n        /* \"#utility.yul\":5910:5925   */\n      add\n        /* \"#utility.yul\":5902:5925   */\n      swap1\n      pop\n        /* \"#utility.yul\":5621:5932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6055   */\n    tag_246:\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6044:6045   */\n      dup1\n        /* \"#utility.yul\":6037:6049   */\n      revert\n        /* \"#utility.yul\":6078:6788   */\n    tag_247:\n        /* \"#utility.yul\":6174:6179   */\n      0x00\n        /* \"#utility.yul\":6199:6280   */\n      tag_368\n        /* \"#utility.yul\":6215:6279   */\n      tag_369\n        /* \"#utility.yul\":6272:6278   */\n      dup5\n        /* \"#utility.yul\":6215:6279   */\n      tag_245\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6199:6280   */\n      tag_244\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6190:6280   */\n      swap1\n      pop\n        /* \"#utility.yul\":6300:6305   */\n      dup1\n        /* \"#utility.yul\":6329:6335   */\n      dup4\n        /* \"#utility.yul\":6322:6327   */\n      dup3\n        /* \"#utility.yul\":6315:6336   */\n      mstore\n        /* \"#utility.yul\":6363:6367   */\n      0x20\n        /* \"#utility.yul\":6356:6361   */\n      dup3\n        /* \"#utility.yul\":6352:6368   */\n      add\n        /* \"#utility.yul\":6345:6368   */\n      swap1\n      pop\n        /* \"#utility.yul\":6416:6420   */\n      0x20\n        /* \"#utility.yul\":6408:6414   */\n      dup5\n        /* \"#utility.yul\":6404:6421   */\n      mul\n        /* \"#utility.yul\":6396:6402   */\n      dup4\n        /* \"#utility.yul\":6392:6422   */\n      add\n        /* \"#utility.yul\":6445:6448   */\n      dup6\n        /* \"#utility.yul\":6437:6443   */\n      dup2\n        /* \"#utility.yul\":6434:6449   */\n      gt\n        /* \"#utility.yul\":6431:6553   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":6464:6543   */\n      tag_371\n      tag_246\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6431:6553   */\n    tag_370:\n        /* \"#utility.yul\":6579:6585   */\n      dup4\n        /* \"#utility.yul\":6562:6782   */\n    tag_372:\n        /* \"#utility.yul\":6596:6602   */\n      dup2\n        /* \"#utility.yul\":6591:6594   */\n      dup2\n        /* \"#utility.yul\":6588:6603   */\n      lt\n        /* \"#utility.yul\":6562:6782   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6671:6674   */\n      dup1\n        /* \"#utility.yul\":6700:6737   */\n      tag_375\n        /* \"#utility.yul\":6733:6736   */\n      dup9\n        /* \"#utility.yul\":6721:6731   */\n      dup3\n        /* \"#utility.yul\":6700:6737   */\n      tag_230\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6695:6698   */\n      dup5\n        /* \"#utility.yul\":6688:6738   */\n      mstore\n        /* \"#utility.yul\":6767:6771   */\n      0x20\n        /* \"#utility.yul\":6762:6765   */\n      dup5\n        /* \"#utility.yul\":6758:6772   */\n      add\n        /* \"#utility.yul\":6751:6772   */\n      swap4\n      pop\n        /* \"#utility.yul\":6638:6782   */\n      pop\n        /* \"#utility.yul\":6622:6626   */\n      0x20\n        /* \"#utility.yul\":6617:6620   */\n      dup2\n        /* \"#utility.yul\":6613:6627   */\n      add\n        /* \"#utility.yul\":6606:6627   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6782   */\n      jump(tag_372)\n    tag_374:\n        /* \"#utility.yul\":6566:6587   */\n      pop\n        /* \"#utility.yul\":6180:6788   */\n      pop\n      pop\n        /* \"#utility.yul\":6078:6788   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:7181   */\n    tag_248:\n        /* \"#utility.yul\":6882:6887   */\n      0x00\n        /* \"#utility.yul\":6931:6934   */\n      dup3\n        /* \"#utility.yul\":6924:6928   */\n      0x1f\n        /* \"#utility.yul\":6916:6922   */\n      dup4\n        /* \"#utility.yul\":6912:6929   */\n      add\n        /* \"#utility.yul\":6908:6935   */\n      slt\n        /* \"#utility.yul\":6898:7020   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":6939:7018   */\n      tag_378\n      tag_242\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6898:7020   */\n    tag_377:\n        /* \"#utility.yul\":7056:7062   */\n      dup2\n        /* \"#utility.yul\":7043:7063   */\n      calldataload\n        /* \"#utility.yul\":7081:7175   */\n      tag_379\n        /* \"#utility.yul\":7171:7174   */\n      dup5\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7156:7160   */\n      0x20\n        /* \"#utility.yul\":7148:7154   */\n      dup7\n        /* \"#utility.yul\":7144:7161   */\n      add\n        /* \"#utility.yul\":7081:7175   */\n      tag_247\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":7072:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":6888:7181   */\n      pop\n        /* \"#utility.yul\":6811:7181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7187:7304   */\n    tag_249:\n        /* \"#utility.yul\":7296:7297   */\n      0x00\n        /* \"#utility.yul\":7293:7294   */\n      dup1\n        /* \"#utility.yul\":7286:7298   */\n      revert\n        /* \"#utility.yul\":7310:7617   */\n    tag_250:\n        /* \"#utility.yul\":7371:7375   */\n      0x00\n        /* \"#utility.yul\":7461:7479   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7453:7459   */\n      dup3\n        /* \"#utility.yul\":7450:7480   */\n      gt\n        /* \"#utility.yul\":7447:7503   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":7483:7501   */\n      tag_383\n      tag_86\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7447:7503   */\n    tag_382:\n        /* \"#utility.yul\":7521:7550   */\n      tag_384\n        /* \"#utility.yul\":7543:7549   */\n      dup3\n        /* \"#utility.yul\":7521:7550   */\n      tag_240\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7513:7550   */\n      swap1\n      pop\n        /* \"#utility.yul\":7605:7609   */\n      0x20\n        /* \"#utility.yul\":7599:7603   */\n      dup2\n        /* \"#utility.yul\":7595:7610   */\n      add\n        /* \"#utility.yul\":7587:7610   */\n      swap1\n      pop\n        /* \"#utility.yul\":7310:7617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7623:7769   */\n    tag_251:\n        /* \"#utility.yul\":7720:7726   */\n      dup3\n        /* \"#utility.yul\":7715:7718   */\n      dup2\n        /* \"#utility.yul\":7710:7713   */\n      dup4\n        /* \"#utility.yul\":7697:7727   */\n      calldatacopy\n        /* \"#utility.yul\":7761:7762   */\n      0x00\n        /* \"#utility.yul\":7752:7758   */\n      dup4\n        /* \"#utility.yul\":7747:7750   */\n      dup4\n        /* \"#utility.yul\":7743:7759   */\n      add\n        /* \"#utility.yul\":7736:7763   */\n      mstore\n        /* \"#utility.yul\":7623:7769   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:8198   */\n    tag_252:\n        /* \"#utility.yul\":7852:7857   */\n      0x00\n        /* \"#utility.yul\":7877:7942   */\n      tag_387\n        /* \"#utility.yul\":7893:7941   */\n      tag_388\n        /* \"#utility.yul\":7934:7940   */\n      dup5\n        /* \"#utility.yul\":7893:7941   */\n      tag_250\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7877:7942   */\n      tag_244\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7868:7942   */\n      swap1\n      pop\n        /* \"#utility.yul\":7965:7971   */\n      dup3\n        /* \"#utility.yul\":7958:7963   */\n      dup2\n        /* \"#utility.yul\":7951:7972   */\n      mstore\n        /* \"#utility.yul\":8003:8007   */\n      0x20\n        /* \"#utility.yul\":7996:8001   */\n      dup2\n        /* \"#utility.yul\":7992:8008   */\n      add\n        /* \"#utility.yul\":8041:8044   */\n      dup5\n        /* \"#utility.yul\":8032:8038   */\n      dup5\n        /* \"#utility.yul\":8027:8030   */\n      dup5\n        /* \"#utility.yul\":8023:8039   */\n      add\n        /* \"#utility.yul\":8020:8045   */\n      gt\n        /* \"#utility.yul\":8017:8129   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":8048:8127   */\n      tag_390\n      tag_249\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8017:8129   */\n    tag_389:\n        /* \"#utility.yul\":8138:8192   */\n      tag_391\n        /* \"#utility.yul\":8185:8191   */\n      dup5\n        /* \"#utility.yul\":8180:8183   */\n      dup3\n        /* \"#utility.yul\":8175:8178   */\n      dup6\n        /* \"#utility.yul\":8138:8192   */\n      tag_251\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7858:8198   */\n      pop\n        /* \"#utility.yul\":7775:8198   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8217:8555   */\n    tag_253:\n        /* \"#utility.yul\":8272:8277   */\n      0x00\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8314:8318   */\n      0x1f\n        /* \"#utility.yul\":8306:8312   */\n      dup4\n        /* \"#utility.yul\":8302:8319   */\n      add\n        /* \"#utility.yul\":8298:8325   */\n      slt\n        /* \"#utility.yul\":8288:8410   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":8329:8408   */\n      tag_394\n      tag_242\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8288:8410   */\n    tag_393:\n        /* \"#utility.yul\":8446:8452   */\n      dup2\n        /* \"#utility.yul\":8433:8453   */\n      calldataload\n        /* \"#utility.yul\":8471:8549   */\n      tag_395\n        /* \"#utility.yul\":8545:8548   */\n      dup5\n        /* \"#utility.yul\":8537:8543   */\n      dup3\n        /* \"#utility.yul\":8530:8534   */\n      0x20\n        /* \"#utility.yul\":8522:8528   */\n      dup7\n        /* \"#utility.yul\":8518:8535   */\n      add\n        /* \"#utility.yul\":8471:8549   */\n      tag_252\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8462:8549   */\n      swap2\n      pop\n        /* \"#utility.yul\":8278:8555   */\n      pop\n        /* \"#utility.yul\":8217:8555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8561:10070   */\n    tag_32:\n        /* \"#utility.yul\":8715:8721   */\n      0x00\n        /* \"#utility.yul\":8723:8729   */\n      dup1\n        /* \"#utility.yul\":8731:8737   */\n      0x00\n        /* \"#utility.yul\":8739:8745   */\n      dup1\n        /* \"#utility.yul\":8747:8753   */\n      0x00\n        /* \"#utility.yul\":8796:8799   */\n      0xa0\n        /* \"#utility.yul\":8784:8793   */\n      dup7\n        /* \"#utility.yul\":8775:8782   */\n      dup9\n        /* \"#utility.yul\":8771:8794   */\n      sub\n        /* \"#utility.yul\":8767:8800   */\n      slt\n        /* \"#utility.yul\":8764:8884   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":8803:8882   */\n      tag_398\n      tag_222\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8764:8884   */\n    tag_397:\n        /* \"#utility.yul\":8923:8924   */\n      0x00\n        /* \"#utility.yul\":8948:9001   */\n      tag_399\n        /* \"#utility.yul\":8993:9000   */\n      dup9\n        /* \"#utility.yul\":8984:8990   */\n      dup3\n        /* \"#utility.yul\":8973:8982   */\n      dup10\n        /* \"#utility.yul\":8969:8991   */\n      add\n        /* \"#utility.yul\":8948:9001   */\n      tag_227\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":8938:9001   */\n      swap6\n      pop\n        /* \"#utility.yul\":8894:9011   */\n      pop\n        /* \"#utility.yul\":9050:9052   */\n      0x20\n        /* \"#utility.yul\":9076:9129   */\n      tag_400\n        /* \"#utility.yul\":9121:9128   */\n      dup9\n        /* \"#utility.yul\":9112:9118   */\n      dup3\n        /* \"#utility.yul\":9101:9110   */\n      dup10\n        /* \"#utility.yul\":9097:9119   */\n      add\n        /* \"#utility.yul\":9076:9129   */\n      tag_227\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9066:9129   */\n      swap5\n      pop\n        /* \"#utility.yul\":9021:9139   */\n      pop\n        /* \"#utility.yul\":9206:9208   */\n      0x40\n        /* \"#utility.yul\":9195:9204   */\n      dup7\n        /* \"#utility.yul\":9191:9209   */\n      add\n        /* \"#utility.yul\":9178:9210   */\n      calldataload\n        /* \"#utility.yul\":9237:9255   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9229:9235   */\n      dup2\n        /* \"#utility.yul\":9226:9256   */\n      gt\n        /* \"#utility.yul\":9223:9340   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9259:9338   */\n      tag_402\n      tag_223\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9223:9340   */\n    tag_401:\n        /* \"#utility.yul\":9364:9442   */\n      tag_403\n        /* \"#utility.yul\":9434:9441   */\n      dup9\n        /* \"#utility.yul\":9425:9431   */\n      dup3\n        /* \"#utility.yul\":9414:9423   */\n      dup10\n        /* \"#utility.yul\":9410:9432   */\n      add\n        /* \"#utility.yul\":9364:9442   */\n      tag_248\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9354:9442   */\n      swap4\n      pop\n        /* \"#utility.yul\":9149:9452   */\n      pop\n        /* \"#utility.yul\":9519:9521   */\n      0x60\n        /* \"#utility.yul\":9508:9517   */\n      dup7\n        /* \"#utility.yul\":9504:9522   */\n      add\n        /* \"#utility.yul\":9491:9523   */\n      calldataload\n        /* \"#utility.yul\":9550:9568   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9542:9548   */\n      dup2\n        /* \"#utility.yul\":9539:9569   */\n      gt\n        /* \"#utility.yul\":9536:9653   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":9572:9651   */\n      tag_405\n      tag_223\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9536:9653   */\n    tag_404:\n        /* \"#utility.yul\":9677:9755   */\n      tag_406\n        /* \"#utility.yul\":9747:9754   */\n      dup9\n        /* \"#utility.yul\":9738:9744   */\n      dup3\n        /* \"#utility.yul\":9727:9736   */\n      dup10\n        /* \"#utility.yul\":9723:9745   */\n      add\n        /* \"#utility.yul\":9677:9755   */\n      tag_248\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9667:9755   */\n      swap3\n      pop\n        /* \"#utility.yul\":9462:9765   */\n      pop\n        /* \"#utility.yul\":9832:9835   */\n      0x80\n        /* \"#utility.yul\":9821:9830   */\n      dup7\n        /* \"#utility.yul\":9817:9836   */\n      add\n        /* \"#utility.yul\":9804:9837   */\n      calldataload\n        /* \"#utility.yul\":9864:9882   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9856:9862   */\n      dup2\n        /* \"#utility.yul\":9853:9883   */\n      gt\n        /* \"#utility.yul\":9850:9967   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":9886:9965   */\n      tag_408\n      tag_223\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9850:9967   */\n    tag_407:\n        /* \"#utility.yul\":9991:10053   */\n      tag_409\n        /* \"#utility.yul\":10045:10052   */\n      dup9\n        /* \"#utility.yul\":10036:10042   */\n      dup3\n        /* \"#utility.yul\":10025:10034   */\n      dup10\n        /* \"#utility.yul\":10021:10043   */\n      add\n        /* \"#utility.yul\":9991:10053   */\n      tag_253\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9981:10053   */\n      swap2\n      pop\n        /* \"#utility.yul\":9775:10063   */\n      pop\n        /* \"#utility.yul\":8561:10070   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10076:10387   */\n    tag_254:\n        /* \"#utility.yul\":10153:10157   */\n      0x00\n        /* \"#utility.yul\":10243:10261   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10235:10241   */\n      dup3\n        /* \"#utility.yul\":10232:10262   */\n      gt\n        /* \"#utility.yul\":10229:10285   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":10265:10283   */\n      tag_412\n      tag_86\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10229:10285   */\n    tag_411:\n        /* \"#utility.yul\":10315:10319   */\n      0x20\n        /* \"#utility.yul\":10307:10313   */\n      dup3\n        /* \"#utility.yul\":10303:10320   */\n      mul\n        /* \"#utility.yul\":10295:10320   */\n      swap1\n      pop\n        /* \"#utility.yul\":10375:10379   */\n      0x20\n        /* \"#utility.yul\":10369:10373   */\n      dup2\n        /* \"#utility.yul\":10365:10380   */\n      add\n        /* \"#utility.yul\":10357:10380   */\n      swap1\n      pop\n        /* \"#utility.yul\":10076:10387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10410:11120   */\n    tag_255:\n        /* \"#utility.yul\":10506:10511   */\n      0x00\n        /* \"#utility.yul\":10531:10612   */\n      tag_414\n        /* \"#utility.yul\":10547:10611   */\n      tag_415\n        /* \"#utility.yul\":10604:10610   */\n      dup5\n        /* \"#utility.yul\":10547:10611   */\n      tag_254\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10531:10612   */\n      tag_244\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10522:10612   */\n      swap1\n      pop\n        /* \"#utility.yul\":10632:10637   */\n      dup1\n        /* \"#utility.yul\":10661:10667   */\n      dup4\n        /* \"#utility.yul\":10654:10659   */\n      dup3\n        /* \"#utility.yul\":10647:10668   */\n      mstore\n        /* \"#utility.yul\":10695:10699   */\n      0x20\n        /* \"#utility.yul\":10688:10693   */\n      dup3\n        /* \"#utility.yul\":10684:10700   */\n      add\n        /* \"#utility.yul\":10677:10700   */\n      swap1\n      pop\n        /* \"#utility.yul\":10748:10752   */\n      0x20\n        /* \"#utility.yul\":10740:10746   */\n      dup5\n        /* \"#utility.yul\":10736:10753   */\n      mul\n        /* \"#utility.yul\":10728:10734   */\n      dup4\n        /* \"#utility.yul\":10724:10754   */\n      add\n        /* \"#utility.yul\":10777:10780   */\n      dup6\n        /* \"#utility.yul\":10769:10775   */\n      dup2\n        /* \"#utility.yul\":10766:10781   */\n      gt\n        /* \"#utility.yul\":10763:10885   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":10796:10875   */\n      tag_417\n      tag_246\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10763:10885   */\n    tag_416:\n        /* \"#utility.yul\":10911:10917   */\n      dup4\n        /* \"#utility.yul\":10894:11114   */\n    tag_418:\n        /* \"#utility.yul\":10928:10934   */\n      dup2\n        /* \"#utility.yul\":10923:10926   */\n      dup2\n        /* \"#utility.yul\":10920:10935   */\n      lt\n        /* \"#utility.yul\":10894:11114   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":11003:11006   */\n      dup1\n        /* \"#utility.yul\":11032:11069   */\n      tag_421\n        /* \"#utility.yul\":11065:11068   */\n      dup9\n        /* \"#utility.yul\":11053:11063   */\n      dup3\n        /* \"#utility.yul\":11032:11069   */\n      tag_227\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11027:11030   */\n      dup5\n        /* \"#utility.yul\":11020:11070   */\n      mstore\n        /* \"#utility.yul\":11099:11103   */\n      0x20\n        /* \"#utility.yul\":11094:11097   */\n      dup5\n        /* \"#utility.yul\":11090:11104   */\n      add\n        /* \"#utility.yul\":11083:11104   */\n      swap4\n      pop\n        /* \"#utility.yul\":10970:11114   */\n      pop\n        /* \"#utility.yul\":10954:10958   */\n      0x20\n        /* \"#utility.yul\":10949:10952   */\n      dup2\n        /* \"#utility.yul\":10945:10959   */\n      add\n        /* \"#utility.yul\":10938:10959   */\n      swap1\n      pop\n        /* \"#utility.yul\":10894:11114   */\n      jump(tag_418)\n    tag_420:\n        /* \"#utility.yul\":10898:10919   */\n      pop\n        /* \"#utility.yul\":10512:11120   */\n      pop\n      pop\n        /* \"#utility.yul\":10410:11120   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11143:11513   */\n    tag_256:\n        /* \"#utility.yul\":11214:11219   */\n      0x00\n        /* \"#utility.yul\":11263:11266   */\n      dup3\n        /* \"#utility.yul\":11256:11260   */\n      0x1f\n        /* \"#utility.yul\":11248:11254   */\n      dup4\n        /* \"#utility.yul\":11244:11261   */\n      add\n        /* \"#utility.yul\":11240:11267   */\n      slt\n        /* \"#utility.yul\":11230:11352   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":11271:11350   */\n      tag_424\n      tag_242\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":11230:11352   */\n    tag_423:\n        /* \"#utility.yul\":11388:11394   */\n      dup2\n        /* \"#utility.yul\":11375:11395   */\n      calldataload\n        /* \"#utility.yul\":11413:11507   */\n      tag_425\n        /* \"#utility.yul\":11503:11506   */\n      dup5\n        /* \"#utility.yul\":11495:11501   */\n      dup3\n        /* \"#utility.yul\":11488:11492   */\n      0x20\n        /* \"#utility.yul\":11480:11486   */\n      dup7\n        /* \"#utility.yul\":11476:11493   */\n      add\n        /* \"#utility.yul\":11413:11507   */\n      tag_255\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11404:11507   */\n      swap2\n      pop\n        /* \"#utility.yul\":11220:11513   */\n      pop\n        /* \"#utility.yul\":11143:11513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11519:12413   */\n    tag_36:\n        /* \"#utility.yul\":11637:11643   */\n      0x00\n        /* \"#utility.yul\":11645:11651   */\n      dup1\n        /* \"#utility.yul\":11694:11696   */\n      0x40\n        /* \"#utility.yul\":11682:11691   */\n      dup4\n        /* \"#utility.yul\":11673:11680   */\n      dup6\n        /* \"#utility.yul\":11669:11692   */\n      sub\n        /* \"#utility.yul\":11665:11697   */\n      slt\n        /* \"#utility.yul\":11662:11781   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":11700:11779   */\n      tag_428\n      tag_222\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11662:11781   */\n    tag_427:\n        /* \"#utility.yul\":11848:11849   */\n      0x00\n        /* \"#utility.yul\":11837:11846   */\n      dup4\n        /* \"#utility.yul\":11833:11850   */\n      add\n        /* \"#utility.yul\":11820:11851   */\n      calldataload\n        /* \"#utility.yul\":11878:11896   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11870:11876   */\n      dup2\n        /* \"#utility.yul\":11867:11897   */\n      gt\n        /* \"#utility.yul\":11864:11981   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":11900:11979   */\n      tag_430\n      tag_223\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":11864:11981   */\n    tag_429:\n        /* \"#utility.yul\":12005:12083   */\n      tag_431\n        /* \"#utility.yul\":12075:12082   */\n      dup6\n        /* \"#utility.yul\":12066:12072   */\n      dup3\n        /* \"#utility.yul\":12055:12064   */\n      dup7\n        /* \"#utility.yul\":12051:12073   */\n      add\n        /* \"#utility.yul\":12005:12083   */\n      tag_256\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11995:12083   */\n      swap3\n      pop\n        /* \"#utility.yul\":11791:12093   */\n      pop\n        /* \"#utility.yul\":12160:12162   */\n      0x20\n        /* \"#utility.yul\":12149:12158   */\n      dup4\n        /* \"#utility.yul\":12145:12163   */\n      add\n        /* \"#utility.yul\":12132:12164   */\n      calldataload\n        /* \"#utility.yul\":12191:12209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12183:12189   */\n      dup2\n        /* \"#utility.yul\":12180:12210   */\n      gt\n        /* \"#utility.yul\":12177:12294   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":12213:12292   */\n      tag_433\n      tag_223\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12177:12294   */\n    tag_432:\n        /* \"#utility.yul\":12318:12396   */\n      tag_434\n        /* \"#utility.yul\":12388:12395   */\n      dup6\n        /* \"#utility.yul\":12379:12385   */\n      dup3\n        /* \"#utility.yul\":12368:12377   */\n      dup7\n        /* \"#utility.yul\":12364:12386   */\n      add\n        /* \"#utility.yul\":12318:12396   */\n      tag_248\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12308:12396   */\n      swap2\n      pop\n        /* \"#utility.yul\":12103:12406   */\n      pop\n        /* \"#utility.yul\":11519:12413   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12419:12533   */\n    tag_257:\n        /* \"#utility.yul\":12486:12492   */\n      0x00\n        /* \"#utility.yul\":12520:12525   */\n      dup2\n        /* \"#utility.yul\":12514:12526   */\n      mload\n        /* \"#utility.yul\":12504:12526   */\n      swap1\n      pop\n        /* \"#utility.yul\":12419:12533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12539:12723   */\n    tag_258:\n        /* \"#utility.yul\":12638:12649   */\n      0x00\n        /* \"#utility.yul\":12672:12678   */\n      dup3\n        /* \"#utility.yul\":12667:12670   */\n      dup3\n        /* \"#utility.yul\":12660:12679   */\n      mstore\n        /* \"#utility.yul\":12712:12716   */\n      0x20\n        /* \"#utility.yul\":12707:12710   */\n      dup3\n        /* \"#utility.yul\":12703:12717   */\n      add\n        /* \"#utility.yul\":12688:12717   */\n      swap1\n      pop\n        /* \"#utility.yul\":12539:12723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12729:12861   */\n    tag_259:\n        /* \"#utility.yul\":12796:12800   */\n      0x00\n        /* \"#utility.yul\":12819:12822   */\n      dup2\n        /* \"#utility.yul\":12811:12822   */\n      swap1\n      pop\n        /* \"#utility.yul\":12849:12853   */\n      0x20\n        /* \"#utility.yul\":12844:12847   */\n      dup3\n        /* \"#utility.yul\":12840:12854   */\n      add\n        /* \"#utility.yul\":12832:12854   */\n      swap1\n      pop\n        /* \"#utility.yul\":12729:12861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12867:12975   */\n    tag_260:\n        /* \"#utility.yul\":12944:12968   */\n      tag_439\n        /* \"#utility.yul\":12962:12967   */\n      dup2\n        /* \"#utility.yul\":12944:12968   */\n      tag_228\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":12939:12942   */\n      dup3\n        /* \"#utility.yul\":12932:12969   */\n      mstore\n        /* \"#utility.yul\":12867:12975   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12981:13160   */\n    tag_261:\n        /* \"#utility.yul\":13050:13060   */\n      0x00\n        /* \"#utility.yul\":13071:13117   */\n      tag_441\n        /* \"#utility.yul\":13113:13116   */\n      dup4\n        /* \"#utility.yul\":13105:13111   */\n      dup4\n        /* \"#utility.yul\":13071:13117   */\n      tag_260\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13149:13153   */\n      0x20\n        /* \"#utility.yul\":13144:13147   */\n      dup4\n        /* \"#utility.yul\":13140:13154   */\n      add\n        /* \"#utility.yul\":13126:13154   */\n      swap1\n      pop\n        /* \"#utility.yul\":12981:13160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13166:13279   */\n    tag_262:\n        /* \"#utility.yul\":13236:13240   */\n      0x00\n        /* \"#utility.yul\":13268:13272   */\n      0x20\n        /* \"#utility.yul\":13263:13266   */\n      dup3\n        /* \"#utility.yul\":13259:13273   */\n      add\n        /* \"#utility.yul\":13251:13273   */\n      swap1\n      pop\n        /* \"#utility.yul\":13166:13279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13315:14047   */\n    tag_263:\n        /* \"#utility.yul\":13434:13437   */\n      0x00\n        /* \"#utility.yul\":13463:13517   */\n      tag_444\n        /* \"#utility.yul\":13511:13516   */\n      dup3\n        /* \"#utility.yul\":13463:13517   */\n      tag_257\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13533:13619   */\n      tag_445\n        /* \"#utility.yul\":13612:13618   */\n      dup2\n        /* \"#utility.yul\":13607:13610   */\n      dup6\n        /* \"#utility.yul\":13533:13619   */\n      tag_258\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":13526:13619   */\n      swap4\n      pop\n        /* \"#utility.yul\":13643:13699   */\n      tag_446\n        /* \"#utility.yul\":13693:13698   */\n      dup4\n        /* \"#utility.yul\":13643:13699   */\n      tag_259\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13722:13729   */\n      dup1\n        /* \"#utility.yul\":13753:13754   */\n      0x00\n        /* \"#utility.yul\":13738:14022   */\n    tag_447:\n        /* \"#utility.yul\":13763:13769   */\n      dup4\n        /* \"#utility.yul\":13760:13761   */\n      dup2\n        /* \"#utility.yul\":13757:13770   */\n      lt\n        /* \"#utility.yul\":13738:14022   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":13839:13845   */\n      dup2\n        /* \"#utility.yul\":13833:13846   */\n      mload\n        /* \"#utility.yul\":13866:13929   */\n      tag_450\n        /* \"#utility.yul\":13925:13928   */\n      dup9\n        /* \"#utility.yul\":13910:13923   */\n      dup3\n        /* \"#utility.yul\":13866:13929   */\n      tag_261\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13859:13929   */\n      swap8\n      pop\n        /* \"#utility.yul\":13952:14012   */\n      tag_451\n        /* \"#utility.yul\":14005:14011   */\n      dup4\n        /* \"#utility.yul\":13952:14012   */\n      tag_262\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":13942:14012   */\n      swap3\n      pop\n        /* \"#utility.yul\":13798:14022   */\n      pop\n        /* \"#utility.yul\":13785:13786   */\n      0x01\n        /* \"#utility.yul\":13782:13783   */\n      dup2\n        /* \"#utility.yul\":13778:13787   */\n      add\n        /* \"#utility.yul\":13773:13787   */\n      swap1\n      pop\n        /* \"#utility.yul\":13738:14022   */\n      jump(tag_447)\n    tag_449:\n        /* \"#utility.yul\":13742:13756   */\n      pop\n        /* \"#utility.yul\":14038:14041   */\n      dup6\n        /* \"#utility.yul\":14031:14041   */\n      swap4\n      pop\n        /* \"#utility.yul\":13439:14047   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13315:14047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14053:14426   */\n    tag_39:\n        /* \"#utility.yul\":14196:14200   */\n      0x00\n        /* \"#utility.yul\":14234:14236   */\n      0x20\n        /* \"#utility.yul\":14223:14232   */\n      dup3\n        /* \"#utility.yul\":14219:14237   */\n      add\n        /* \"#utility.yul\":14211:14237   */\n      swap1\n      pop\n        /* \"#utility.yul\":14283:14292   */\n      dup2\n        /* \"#utility.yul\":14277:14281   */\n      dup2\n        /* \"#utility.yul\":14273:14293   */\n      sub\n        /* \"#utility.yul\":14269:14270   */\n      0x00\n        /* \"#utility.yul\":14258:14267   */\n      dup4\n        /* \"#utility.yul\":14254:14271   */\n      add\n        /* \"#utility.yul\":14247:14294   */\n      mstore\n        /* \"#utility.yul\":14311:14419   */\n      tag_453\n        /* \"#utility.yul\":14414:14418   */\n      dup2\n        /* \"#utility.yul\":14405:14411   */\n      dup5\n        /* \"#utility.yul\":14311:14419   */\n      tag_263\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14303:14419   */\n      swap1\n      pop\n        /* \"#utility.yul\":14053:14426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14432:14548   */\n    tag_264:\n        /* \"#utility.yul\":14502:14523   */\n      tag_455\n        /* \"#utility.yul\":14517:14522   */\n      dup2\n        /* \"#utility.yul\":14502:14523   */\n      tag_235\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":14495:14500   */\n      dup2\n        /* \"#utility.yul\":14492:14524   */\n      eq\n        /* \"#utility.yul\":14482:14542   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":14538:14539   */\n      0x00\n        /* \"#utility.yul\":14535:14536   */\n      dup1\n        /* \"#utility.yul\":14528:14540   */\n      revert\n        /* \"#utility.yul\":14482:14542   */\n    tag_456:\n        /* \"#utility.yul\":14432:14548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14554:14687   */\n    tag_265:\n        /* \"#utility.yul\":14597:14602   */\n      0x00\n        /* \"#utility.yul\":14635:14641   */\n      dup2\n        /* \"#utility.yul\":14622:14642   */\n      calldataload\n        /* \"#utility.yul\":14613:14642   */\n      swap1\n      pop\n        /* \"#utility.yul\":14651:14681   */\n      tag_458\n        /* \"#utility.yul\":14675:14680   */\n      dup2\n        /* \"#utility.yul\":14651:14681   */\n      tag_264\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14554:14687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14693:15161   */\n    tag_42:\n        /* \"#utility.yul\":14758:14764   */\n      0x00\n        /* \"#utility.yul\":14766:14772   */\n      dup1\n        /* \"#utility.yul\":14815:14817   */\n      0x40\n        /* \"#utility.yul\":14803:14812   */\n      dup4\n        /* \"#utility.yul\":14794:14801   */\n      dup6\n        /* \"#utility.yul\":14790:14813   */\n      sub\n        /* \"#utility.yul\":14786:14818   */\n      slt\n        /* \"#utility.yul\":14783:14902   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":14821:14900   */\n      tag_461\n      tag_222\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":14783:14902   */\n    tag_460:\n        /* \"#utility.yul\":14941:14942   */\n      0x00\n        /* \"#utility.yul\":14966:15019   */\n      tag_462\n        /* \"#utility.yul\":15011:15018   */\n      dup6\n        /* \"#utility.yul\":15002:15008   */\n      dup3\n        /* \"#utility.yul\":14991:15000   */\n      dup7\n        /* \"#utility.yul\":14987:15009   */\n      add\n        /* \"#utility.yul\":14966:15019   */\n      tag_227\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14956:15019   */\n      swap3\n      pop\n        /* \"#utility.yul\":14912:15029   */\n      pop\n        /* \"#utility.yul\":15068:15070   */\n      0x20\n        /* \"#utility.yul\":15094:15144   */\n      tag_463\n        /* \"#utility.yul\":15136:15143   */\n      dup6\n        /* \"#utility.yul\":15127:15133   */\n      dup3\n        /* \"#utility.yul\":15116:15125   */\n      dup7\n        /* \"#utility.yul\":15112:15134   */\n      add\n        /* \"#utility.yul\":15094:15144   */\n      tag_265\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":15084:15144   */\n      swap2\n      pop\n        /* \"#utility.yul\":15039:15154   */\n      pop\n        /* \"#utility.yul\":14693:15161   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15167:15641   */\n    tag_46:\n        /* \"#utility.yul\":15235:15241   */\n      0x00\n        /* \"#utility.yul\":15243:15249   */\n      dup1\n        /* \"#utility.yul\":15292:15294   */\n      0x40\n        /* \"#utility.yul\":15280:15289   */\n      dup4\n        /* \"#utility.yul\":15271:15278   */\n      dup6\n        /* \"#utility.yul\":15267:15290   */\n      sub\n        /* \"#utility.yul\":15263:15295   */\n      slt\n        /* \"#utility.yul\":15260:15379   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":15298:15377   */\n      tag_466\n      tag_222\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15260:15379   */\n    tag_465:\n        /* \"#utility.yul\":15418:15419   */\n      0x00\n        /* \"#utility.yul\":15443:15496   */\n      tag_467\n        /* \"#utility.yul\":15488:15495   */\n      dup6\n        /* \"#utility.yul\":15479:15485   */\n      dup3\n        /* \"#utility.yul\":15468:15477   */\n      dup7\n        /* \"#utility.yul\":15464:15486   */\n      add\n        /* \"#utility.yul\":15443:15496   */\n      tag_227\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":15433:15496   */\n      swap3\n      pop\n        /* \"#utility.yul\":15389:15506   */\n      pop\n        /* \"#utility.yul\":15545:15547   */\n      0x20\n        /* \"#utility.yul\":15571:15624   */\n      tag_468\n        /* \"#utility.yul\":15616:15623   */\n      dup6\n        /* \"#utility.yul\":15607:15613   */\n      dup3\n        /* \"#utility.yul\":15596:15605   */\n      dup7\n        /* \"#utility.yul\":15592:15614   */\n      add\n        /* \"#utility.yul\":15571:15624   */\n      tag_227\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15561:15624   */\n      swap2\n      pop\n        /* \"#utility.yul\":15516:15634   */\n      pop\n        /* \"#utility.yul\":15167:15641   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15647:16736   */\n    tag_51:\n        /* \"#utility.yul\":15751:15757   */\n      0x00\n        /* \"#utility.yul\":15759:15765   */\n      dup1\n        /* \"#utility.yul\":15767:15773   */\n      0x00\n        /* \"#utility.yul\":15775:15781   */\n      dup1\n        /* \"#utility.yul\":15783:15789   */\n      0x00\n        /* \"#utility.yul\":15832:15835   */\n      0xa0\n        /* \"#utility.yul\":15820:15829   */\n      dup7\n        /* \"#utility.yul\":15811:15818   */\n      dup9\n        /* \"#utility.yul\":15807:15830   */\n      sub\n        /* \"#utility.yul\":15803:15836   */\n      slt\n        /* \"#utility.yul\":15800:15920   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":15839:15918   */\n      tag_471\n      tag_222\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15800:15920   */\n    tag_470:\n        /* \"#utility.yul\":15959:15960   */\n      0x00\n        /* \"#utility.yul\":15984:16037   */\n      tag_472\n        /* \"#utility.yul\":16029:16036   */\n      dup9\n        /* \"#utility.yul\":16020:16026   */\n      dup3\n        /* \"#utility.yul\":16009:16018   */\n      dup10\n        /* \"#utility.yul\":16005:16027   */\n      add\n        /* \"#utility.yul\":15984:16037   */\n      tag_227\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":15974:16037   */\n      swap6\n      pop\n        /* \"#utility.yul\":15930:16047   */\n      pop\n        /* \"#utility.yul\":16086:16088   */\n      0x20\n        /* \"#utility.yul\":16112:16165   */\n      tag_473\n        /* \"#utility.yul\":16157:16164   */\n      dup9\n        /* \"#utility.yul\":16148:16154   */\n      dup3\n        /* \"#utility.yul\":16137:16146   */\n      dup10\n        /* \"#utility.yul\":16133:16155   */\n      add\n        /* \"#utility.yul\":16112:16165   */\n      tag_227\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16102:16165   */\n      swap5\n      pop\n        /* \"#utility.yul\":16057:16175   */\n      pop\n        /* \"#utility.yul\":16214:16216   */\n      0x40\n        /* \"#utility.yul\":16240:16293   */\n      tag_474\n        /* \"#utility.yul\":16285:16292   */\n      dup9\n        /* \"#utility.yul\":16276:16282   */\n      dup3\n        /* \"#utility.yul\":16265:16274   */\n      dup10\n        /* \"#utility.yul\":16261:16283   */\n      add\n        /* \"#utility.yul\":16240:16293   */\n      tag_230\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16230:16293   */\n      swap4\n      pop\n        /* \"#utility.yul\":16185:16303   */\n      pop\n        /* \"#utility.yul\":16342:16344   */\n      0x60\n        /* \"#utility.yul\":16368:16421   */\n      tag_475\n        /* \"#utility.yul\":16413:16420   */\n      dup9\n        /* \"#utility.yul\":16404:16410   */\n      dup3\n        /* \"#utility.yul\":16393:16402   */\n      dup10\n        /* \"#utility.yul\":16389:16411   */\n      add\n        /* \"#utility.yul\":16368:16421   */\n      tag_230\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16358:16421   */\n      swap3\n      pop\n        /* \"#utility.yul\":16313:16431   */\n      pop\n        /* \"#utility.yul\":16498:16501   */\n      0x80\n        /* \"#utility.yul\":16487:16496   */\n      dup7\n        /* \"#utility.yul\":16483:16502   */\n      add\n        /* \"#utility.yul\":16470:16503   */\n      calldataload\n        /* \"#utility.yul\":16530:16548   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16522:16528   */\n      dup2\n        /* \"#utility.yul\":16519:16549   */\n      gt\n        /* \"#utility.yul\":16516:16633   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":16552:16631   */\n      tag_477\n      tag_223\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":16516:16633   */\n    tag_476:\n        /* \"#utility.yul\":16657:16719   */\n      tag_478\n        /* \"#utility.yul\":16711:16718   */\n      dup9\n        /* \"#utility.yul\":16702:16708   */\n      dup3\n        /* \"#utility.yul\":16691:16700   */\n      dup10\n        /* \"#utility.yul\":16687:16709   */\n      add\n        /* \"#utility.yul\":16657:16719   */\n      tag_253\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16647:16719   */\n      swap2\n      pop\n        /* \"#utility.yul\":16441:16729   */\n      pop\n        /* \"#utility.yul\":15647:16736   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16742:16972   */\n    tag_266:\n        /* \"#utility.yul\":16882:16916   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":16878:16879   */\n      0x00\n        /* \"#utility.yul\":16870:16876   */\n      dup3\n        /* \"#utility.yul\":16866:16880   */\n      add\n        /* \"#utility.yul\":16859:16917   */\n      mstore\n        /* \"#utility.yul\":16951:16964   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16946:16948   */\n      0x20\n        /* \"#utility.yul\":16938:16944   */\n      dup3\n        /* \"#utility.yul\":16934:16949   */\n      add\n        /* \"#utility.yul\":16927:16965   */\n      mstore\n        /* \"#utility.yul\":16742:16972   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16978:17344   */\n    tag_267:\n        /* \"#utility.yul\":17120:17123   */\n      0x00\n        /* \"#utility.yul\":17141:17208   */\n      tag_481\n        /* \"#utility.yul\":17205:17207   */\n      0x2b\n        /* \"#utility.yul\":17200:17203   */\n      dup4\n        /* \"#utility.yul\":17141:17208   */\n      tag_238\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17134:17208   */\n      swap2\n      pop\n        /* \"#utility.yul\":17217:17310   */\n      tag_482\n        /* \"#utility.yul\":17306:17309   */\n      dup3\n        /* \"#utility.yul\":17217:17310   */\n      tag_266\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17335:17337   */\n      0x40\n        /* \"#utility.yul\":17330:17333   */\n      dup3\n        /* \"#utility.yul\":17326:17338   */\n      add\n        /* \"#utility.yul\":17319:17338   */\n      swap1\n      pop\n        /* \"#utility.yul\":16978:17344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17350:17769   */\n    tag_56:\n        /* \"#utility.yul\":17516:17520   */\n      0x00\n        /* \"#utility.yul\":17554:17556   */\n      0x20\n        /* \"#utility.yul\":17543:17552   */\n      dup3\n        /* \"#utility.yul\":17539:17557   */\n      add\n        /* \"#utility.yul\":17531:17557   */\n      swap1\n      pop\n        /* \"#utility.yul\":17603:17612   */\n      dup2\n        /* \"#utility.yul\":17597:17601   */\n      dup2\n        /* \"#utility.yul\":17593:17613   */\n      sub\n        /* \"#utility.yul\":17589:17590   */\n      0x00\n        /* \"#utility.yul\":17578:17587   */\n      dup4\n        /* \"#utility.yul\":17574:17591   */\n      add\n        /* \"#utility.yul\":17567:17614   */\n      mstore\n        /* \"#utility.yul\":17631:17762   */\n      tag_484\n        /* \"#utility.yul\":17757:17761   */\n      dup2\n        /* \"#utility.yul\":17631:17762   */\n      tag_267\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17623:17762   */\n      swap1\n      pop\n        /* \"#utility.yul\":17350:17769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17775:17955   */\n    tag_268:\n        /* \"#utility.yul\":17823:17900   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17820:17821   */\n      0x00\n        /* \"#utility.yul\":17813:17901   */\n      mstore\n        /* \"#utility.yul\":17920:17924   */\n      0x22\n        /* \"#utility.yul\":17917:17918   */\n      0x04\n        /* \"#utility.yul\":17910:17925   */\n      mstore\n        /* \"#utility.yul\":17944:17948   */\n      0x24\n        /* \"#utility.yul\":17941:17942   */\n      0x00\n        /* \"#utility.yul\":17934:17949   */\n      revert\n        /* \"#utility.yul\":17961:18281   */\n    tag_64:\n        /* \"#utility.yul\":18005:18011   */\n      0x00\n        /* \"#utility.yul\":18042:18043   */\n      0x02\n        /* \"#utility.yul\":18036:18040   */\n      dup3\n        /* \"#utility.yul\":18032:18044   */\n      div\n        /* \"#utility.yul\":18022:18044   */\n      swap1\n      pop\n        /* \"#utility.yul\":18089:18090   */\n      0x01\n        /* \"#utility.yul\":18083:18087   */\n      dup3\n        /* \"#utility.yul\":18079:18091   */\n      and\n        /* \"#utility.yul\":18110:18128   */\n      dup1\n        /* \"#utility.yul\":18100:18181   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":18166:18170   */\n      0x7f\n        /* \"#utility.yul\":18158:18164   */\n      dup3\n        /* \"#utility.yul\":18154:18171   */\n      and\n        /* \"#utility.yul\":18144:18171   */\n      swap2\n      pop\n        /* \"#utility.yul\":18100:18181   */\n    tag_487:\n        /* \"#utility.yul\":18228:18230   */\n      0x20\n        /* \"#utility.yul\":18220:18226   */\n      dup3\n        /* \"#utility.yul\":18217:18231   */\n      lt\n        /* \"#utility.yul\":18197:18215   */\n      dup2\n        /* \"#utility.yul\":18194:18232   */\n      sub\n        /* \"#utility.yul\":18191:18275   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":18247:18265   */\n      tag_489\n      tag_268\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18191:18275   */\n    tag_488:\n        /* \"#utility.yul\":18012:18281   */\n      pop\n        /* \"#utility.yul\":17961:18281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18287:18524   */\n    tag_269:\n        /* \"#utility.yul\":18427:18461   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":18423:18424   */\n      0x00\n        /* \"#utility.yul\":18415:18421   */\n      dup3\n        /* \"#utility.yul\":18411:18425   */\n      add\n        /* \"#utility.yul\":18404:18462   */\n      mstore\n        /* \"#utility.yul\":18496:18516   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":18491:18493   */\n      0x20\n        /* \"#utility.yul\":18483:18489   */\n      dup3\n        /* \"#utility.yul\":18479:18494   */\n      add\n        /* \"#utility.yul\":18472:18517   */\n      mstore\n        /* \"#utility.yul\":18287:18524   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18530:18896   */\n    tag_270:\n        /* \"#utility.yul\":18672:18675   */\n      0x00\n        /* \"#utility.yul\":18693:18760   */\n      tag_492\n        /* \"#utility.yul\":18757:18759   */\n      0x32\n        /* \"#utility.yul\":18752:18755   */\n      dup4\n        /* \"#utility.yul\":18693:18760   */\n      tag_238\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":18686:18760   */\n      swap2\n      pop\n        /* \"#utility.yul\":18769:18862   */\n      tag_493\n        /* \"#utility.yul\":18858:18861   */\n      dup3\n        /* \"#utility.yul\":18769:18862   */\n      tag_269\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18887:18889   */\n      0x40\n        /* \"#utility.yul\":18882:18885   */\n      dup3\n        /* \"#utility.yul\":18878:18890   */\n      add\n        /* \"#utility.yul\":18871:18890   */\n      swap1\n      pop\n        /* \"#utility.yul\":18530:18896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18902:19321   */\n    tag_77:\n        /* \"#utility.yul\":19068:19072   */\n      0x00\n        /* \"#utility.yul\":19106:19108   */\n      0x20\n        /* \"#utility.yul\":19095:19104   */\n      dup3\n        /* \"#utility.yul\":19091:19109   */\n      add\n        /* \"#utility.yul\":19083:19109   */\n      swap1\n      pop\n        /* \"#utility.yul\":19155:19164   */\n      dup2\n        /* \"#utility.yul\":19149:19153   */\n      dup2\n        /* \"#utility.yul\":19145:19165   */\n      sub\n        /* \"#utility.yul\":19141:19142   */\n      0x00\n        /* \"#utility.yul\":19130:19139   */\n      dup4\n        /* \"#utility.yul\":19126:19143   */\n      add\n        /* \"#utility.yul\":19119:19166   */\n      mstore\n        /* \"#utility.yul\":19183:19314   */\n      tag_495\n        /* \"#utility.yul\":19309:19313   */\n      dup2\n        /* \"#utility.yul\":19183:19314   */\n      tag_270\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19175:19314   */\n      swap1\n      pop\n        /* \"#utility.yul\":18902:19321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19327:19555   */\n    tag_271:\n        /* \"#utility.yul\":19467:19501   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":19463:19464   */\n      0x00\n        /* \"#utility.yul\":19455:19461   */\n      dup3\n        /* \"#utility.yul\":19451:19465   */\n      add\n        /* \"#utility.yul\":19444:19502   */\n      mstore\n        /* \"#utility.yul\":19536:19547   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19531:19533   */\n      0x20\n        /* \"#utility.yul\":19523:19529   */\n      dup3\n        /* \"#utility.yul\":19519:19534   */\n      add\n        /* \"#utility.yul\":19512:19548   */\n      mstore\n        /* \"#utility.yul\":19327:19555   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19561:19927   */\n    tag_272:\n        /* \"#utility.yul\":19703:19706   */\n      0x00\n        /* \"#utility.yul\":19724:19791   */\n      tag_498\n        /* \"#utility.yul\":19788:19790   */\n      0x29\n        /* \"#utility.yul\":19783:19786   */\n      dup4\n        /* \"#utility.yul\":19724:19791   */\n      tag_238\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":19717:19791   */\n      swap2\n      pop\n        /* \"#utility.yul\":19800:19893   */\n      tag_499\n        /* \"#utility.yul\":19889:19892   */\n      dup3\n        /* \"#utility.yul\":19800:19893   */\n      tag_271\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":19918:19920   */\n      0x40\n        /* \"#utility.yul\":19913:19916   */\n      dup3\n        /* \"#utility.yul\":19909:19921   */\n      add\n        /* \"#utility.yul\":19902:19921   */\n      swap1\n      pop\n        /* \"#utility.yul\":19561:19927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19933:20352   */\n    tag_83:\n        /* \"#utility.yul\":20099:20103   */\n      0x00\n        /* \"#utility.yul\":20137:20139   */\n      0x20\n        /* \"#utility.yul\":20126:20135   */\n      dup3\n        /* \"#utility.yul\":20122:20140   */\n      add\n        /* \"#utility.yul\":20114:20140   */\n      swap1\n      pop\n        /* \"#utility.yul\":20186:20195   */\n      dup2\n        /* \"#utility.yul\":20180:20184   */\n      dup2\n        /* \"#utility.yul\":20176:20196   */\n      sub\n        /* \"#utility.yul\":20172:20173   */\n      0x00\n        /* \"#utility.yul\":20161:20170   */\n      dup4\n        /* \"#utility.yul\":20157:20174   */\n      add\n        /* \"#utility.yul\":20150:20197   */\n      mstore\n        /* \"#utility.yul\":20214:20345   */\n      tag_501\n        /* \"#utility.yul\":20340:20344   */\n      dup2\n        /* \"#utility.yul\":20214:20345   */\n      tag_272\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":20206:20345   */\n      swap1\n      pop\n        /* \"#utility.yul\":19933:20352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20358:20538   */\n    tag_94:\n        /* \"#utility.yul\":20406:20483   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20403:20404   */\n      0x00\n        /* \"#utility.yul\":20396:20484   */\n      mstore\n        /* \"#utility.yul\":20503:20507   */\n      0x32\n        /* \"#utility.yul\":20500:20501   */\n      0x04\n        /* \"#utility.yul\":20493:20508   */\n      mstore\n        /* \"#utility.yul\":20527:20531   */\n      0x24\n        /* \"#utility.yul\":20524:20525   */\n      0x00\n        /* \"#utility.yul\":20517:20532   */\n      revert\n        /* \"#utility.yul\":20544:20724   */\n    tag_273:\n        /* \"#utility.yul\":20592:20669   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20589:20590   */\n      0x00\n        /* \"#utility.yul\":20582:20670   */\n      mstore\n        /* \"#utility.yul\":20689:20693   */\n      0x11\n        /* \"#utility.yul\":20686:20687   */\n      0x04\n        /* \"#utility.yul\":20679:20694   */\n      mstore\n        /* \"#utility.yul\":20713:20717   */\n      0x24\n        /* \"#utility.yul\":20710:20711   */\n      0x00\n        /* \"#utility.yul\":20703:20718   */\n      revert\n        /* \"#utility.yul\":20730:20963   */\n    tag_100:\n        /* \"#utility.yul\":20769:20772   */\n      0x00\n        /* \"#utility.yul\":20792:20816   */\n      tag_505\n        /* \"#utility.yul\":20810:20815   */\n      dup3\n        /* \"#utility.yul\":20792:20816   */\n      tag_228\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":20783:20816   */\n      swap2\n      pop\n        /* \"#utility.yul\":20838:20904   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20831:20836   */\n      dup3\n        /* \"#utility.yul\":20828:20905   */\n      sub\n        /* \"#utility.yul\":20825:20928   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":20908:20926   */\n      tag_507\n      tag_273\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":20825:20928   */\n    tag_506:\n        /* \"#utility.yul\":20955:20956   */\n      0x01\n        /* \"#utility.yul\":20948:20953   */\n      dup3\n        /* \"#utility.yul\":20944:20957   */\n      add\n        /* \"#utility.yul\":20937:20957   */\n      swap1\n      pop\n        /* \"#utility.yul\":20730:20963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20969:21197   */\n    tag_274:\n        /* \"#utility.yul\":21109:21143   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":21105:21106   */\n      0x00\n        /* \"#utility.yul\":21097:21103   */\n      dup3\n        /* \"#utility.yul\":21093:21107   */\n      add\n        /* \"#utility.yul\":21086:21144   */\n      mstore\n        /* \"#utility.yul\":21178:21189   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21173:21175   */\n      0x20\n        /* \"#utility.yul\":21165:21171   */\n      dup3\n        /* \"#utility.yul\":21161:21176   */\n      add\n        /* \"#utility.yul\":21154:21190   */\n      mstore\n        /* \"#utility.yul\":20969:21197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21203:21569   */\n    tag_275:\n        /* \"#utility.yul\":21345:21348   */\n      0x00\n        /* \"#utility.yul\":21366:21433   */\n      tag_510\n        /* \"#utility.yul\":21430:21432   */\n      0x29\n        /* \"#utility.yul\":21425:21428   */\n      dup4\n        /* \"#utility.yul\":21366:21433   */\n      tag_238\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":21359:21433   */\n      swap2\n      pop\n        /* \"#utility.yul\":21442:21535   */\n      tag_511\n        /* \"#utility.yul\":21531:21534   */\n      dup3\n        /* \"#utility.yul\":21442:21535   */\n      tag_274\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":21560:21562   */\n      0x40\n        /* \"#utility.yul\":21555:21558   */\n      dup3\n        /* \"#utility.yul\":21551:21563   */\n      add\n        /* \"#utility.yul\":21544:21563   */\n      swap1\n      pop\n        /* \"#utility.yul\":21203:21569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21575:21994   */\n    tag_113:\n        /* \"#utility.yul\":21741:21745   */\n      0x00\n        /* \"#utility.yul\":21779:21781   */\n      0x20\n        /* \"#utility.yul\":21768:21777   */\n      dup3\n        /* \"#utility.yul\":21764:21782   */\n      add\n        /* \"#utility.yul\":21756:21782   */\n      swap1\n      pop\n        /* \"#utility.yul\":21828:21837   */\n      dup2\n        /* \"#utility.yul\":21822:21826   */\n      dup2\n        /* \"#utility.yul\":21818:21838   */\n      sub\n        /* \"#utility.yul\":21814:21815   */\n      0x00\n        /* \"#utility.yul\":21803:21812   */\n      dup4\n        /* \"#utility.yul\":21799:21816   */\n      add\n        /* \"#utility.yul\":21792:21839   */\n      mstore\n        /* \"#utility.yul\":21856:21987   */\n      tag_513\n        /* \"#utility.yul\":21982:21986   */\n      dup2\n        /* \"#utility.yul\":21856:21987   */\n      tag_275\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":21848:21987   */\n      swap1\n      pop\n        /* \"#utility.yul\":21575:21994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22000:22227   */\n    tag_276:\n        /* \"#utility.yul\":22140:22174   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":22136:22137   */\n      0x00\n        /* \"#utility.yul\":22128:22134   */\n      dup3\n        /* \"#utility.yul\":22124:22138   */\n      add\n        /* \"#utility.yul\":22117:22175   */\n      mstore\n        /* \"#utility.yul\":22209:22219   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22204:22206   */\n      0x20\n        /* \"#utility.yul\":22196:22202   */\n      dup3\n        /* \"#utility.yul\":22192:22207   */\n      add\n        /* \"#utility.yul\":22185:22220   */\n      mstore\n        /* \"#utility.yul\":22000:22227   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22233:22599   */\n    tag_277:\n        /* \"#utility.yul\":22375:22378   */\n      0x00\n        /* \"#utility.yul\":22396:22463   */\n      tag_516\n        /* \"#utility.yul\":22460:22462   */\n      0x28\n        /* \"#utility.yul\":22455:22458   */\n      dup4\n        /* \"#utility.yul\":22396:22463   */\n      tag_238\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":22389:22463   */\n      swap2\n      pop\n        /* \"#utility.yul\":22472:22565   */\n      tag_517\n        /* \"#utility.yul\":22561:22564   */\n      dup3\n        /* \"#utility.yul\":22472:22565   */\n      tag_276\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":22590:22592   */\n      0x40\n        /* \"#utility.yul\":22585:22588   */\n      dup3\n        /* \"#utility.yul\":22581:22593   */\n      add\n        /* \"#utility.yul\":22574:22593   */\n      swap1\n      pop\n        /* \"#utility.yul\":22233:22599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22605:23024   */\n    tag_121:\n        /* \"#utility.yul\":22771:22775   */\n      0x00\n        /* \"#utility.yul\":22809:22811   */\n      0x20\n        /* \"#utility.yul\":22798:22807   */\n      dup3\n        /* \"#utility.yul\":22794:22812   */\n      add\n        /* \"#utility.yul\":22786:22812   */\n      swap1\n      pop\n        /* \"#utility.yul\":22858:22867   */\n      dup2\n        /* \"#utility.yul\":22852:22856   */\n      dup2\n        /* \"#utility.yul\":22848:22868   */\n      sub\n        /* \"#utility.yul\":22844:22845   */\n      0x00\n        /* \"#utility.yul\":22833:22842   */\n      dup4\n        /* \"#utility.yul\":22829:22846   */\n      add\n        /* \"#utility.yul\":22822:22869   */\n      mstore\n        /* \"#utility.yul\":22886:23017   */\n      tag_519\n        /* \"#utility.yul\":23012:23016   */\n      dup2\n        /* \"#utility.yul\":22886:23017   */\n      tag_277\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22878:23017   */\n      swap1\n      pop\n        /* \"#utility.yul\":22605:23024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23030:23254   */\n    tag_278:\n        /* \"#utility.yul\":23170:23204   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":23166:23167   */\n      0x00\n        /* \"#utility.yul\":23158:23164   */\n      dup3\n        /* \"#utility.yul\":23154:23168   */\n      add\n        /* \"#utility.yul\":23147:23205   */\n      mstore\n        /* \"#utility.yul\":23239:23246   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23234:23236   */\n      0x20\n        /* \"#utility.yul\":23226:23232   */\n      dup3\n        /* \"#utility.yul\":23222:23237   */\n      add\n        /* \"#utility.yul\":23215:23247   */\n      mstore\n        /* \"#utility.yul\":23030:23254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23260:23626   */\n    tag_279:\n        /* \"#utility.yul\":23402:23405   */\n      0x00\n        /* \"#utility.yul\":23423:23490   */\n      tag_522\n        /* \"#utility.yul\":23487:23489   */\n      0x25\n        /* \"#utility.yul\":23482:23485   */\n      dup4\n        /* \"#utility.yul\":23423:23490   */\n      tag_238\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":23416:23490   */\n      swap2\n      pop\n        /* \"#utility.yul\":23499:23592   */\n      tag_523\n        /* \"#utility.yul\":23588:23591   */\n      dup3\n        /* \"#utility.yul\":23499:23592   */\n      tag_278\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":23617:23619   */\n      0x40\n        /* \"#utility.yul\":23612:23615   */\n      dup3\n        /* \"#utility.yul\":23608:23620   */\n      add\n        /* \"#utility.yul\":23601:23620   */\n      swap1\n      pop\n        /* \"#utility.yul\":23260:23626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23632:24051   */\n    tag_124:\n        /* \"#utility.yul\":23798:23802   */\n      0x00\n        /* \"#utility.yul\":23836:23838   */\n      0x20\n        /* \"#utility.yul\":23825:23834   */\n      dup3\n        /* \"#utility.yul\":23821:23839   */\n      add\n        /* \"#utility.yul\":23813:23839   */\n      swap1\n      pop\n        /* \"#utility.yul\":23885:23894   */\n      dup2\n        /* \"#utility.yul\":23879:23883   */\n      dup2\n        /* \"#utility.yul\":23875:23895   */\n      sub\n        /* \"#utility.yul\":23871:23872   */\n      0x00\n        /* \"#utility.yul\":23860:23869   */\n      dup4\n        /* \"#utility.yul\":23856:23873   */\n      add\n        /* \"#utility.yul\":23849:23896   */\n      mstore\n        /* \"#utility.yul\":23913:24044   */\n      tag_525\n        /* \"#utility.yul\":24039:24043   */\n      dup2\n        /* \"#utility.yul\":23913:24044   */\n      tag_279\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":23905:24044   */\n      swap1\n      pop\n        /* \"#utility.yul\":23632:24051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24057:24286   */\n    tag_280:\n        /* \"#utility.yul\":24197:24231   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":24193:24194   */\n      0x00\n        /* \"#utility.yul\":24185:24191   */\n      dup3\n        /* \"#utility.yul\":24181:24195   */\n      add\n        /* \"#utility.yul\":24174:24232   */\n      mstore\n        /* \"#utility.yul\":24266:24278   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24261:24263   */\n      0x20\n        /* \"#utility.yul\":24253:24259   */\n      dup3\n        /* \"#utility.yul\":24249:24264   */\n      add\n        /* \"#utility.yul\":24242:24279   */\n      mstore\n        /* \"#utility.yul\":24057:24286   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24292:24658   */\n    tag_281:\n        /* \"#utility.yul\":24434:24437   */\n      0x00\n        /* \"#utility.yul\":24455:24522   */\n      tag_528\n        /* \"#utility.yul\":24519:24521   */\n      0x2a\n        /* \"#utility.yul\":24514:24517   */\n      dup4\n        /* \"#utility.yul\":24455:24522   */\n      tag_238\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":24448:24522   */\n      swap2\n      pop\n        /* \"#utility.yul\":24531:24624   */\n      tag_529\n        /* \"#utility.yul\":24620:24623   */\n      dup3\n        /* \"#utility.yul\":24531:24624   */\n      tag_280\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":24649:24651   */\n      0x40\n        /* \"#utility.yul\":24644:24647   */\n      dup3\n        /* \"#utility.yul\":24640:24652   */\n      add\n        /* \"#utility.yul\":24633:24652   */\n      swap1\n      pop\n        /* \"#utility.yul\":24292:24658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24664:25083   */\n    tag_137:\n        /* \"#utility.yul\":24830:24834   */\n      0x00\n        /* \"#utility.yul\":24868:24870   */\n      0x20\n        /* \"#utility.yul\":24857:24866   */\n      dup3\n        /* \"#utility.yul\":24853:24871   */\n      add\n        /* \"#utility.yul\":24845:24871   */\n      swap1\n      pop\n        /* \"#utility.yul\":24917:24926   */\n      dup2\n        /* \"#utility.yul\":24911:24915   */\n      dup2\n        /* \"#utility.yul\":24907:24927   */\n      sub\n        /* \"#utility.yul\":24903:24904   */\n      0x00\n        /* \"#utility.yul\":24892:24901   */\n      dup4\n        /* \"#utility.yul\":24888:24905   */\n      add\n        /* \"#utility.yul\":24881:24928   */\n      mstore\n        /* \"#utility.yul\":24945:25076   */\n      tag_531\n        /* \"#utility.yul\":25071:25075   */\n      dup2\n        /* \"#utility.yul\":24945:25076   */\n      tag_281\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":24937:25076   */\n      swap1\n      pop\n        /* \"#utility.yul\":24664:25083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25089:25280   */\n    tag_139:\n        /* \"#utility.yul\":25129:25132   */\n      0x00\n        /* \"#utility.yul\":25148:25168   */\n      tag_533\n        /* \"#utility.yul\":25166:25167   */\n      dup3\n        /* \"#utility.yul\":25148:25168   */\n      tag_228\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":25143:25168   */\n      swap2\n      pop\n        /* \"#utility.yul\":25182:25202   */\n      tag_534\n        /* \"#utility.yul\":25200:25201   */\n      dup4\n        /* \"#utility.yul\":25182:25202   */\n      tag_228\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":25177:25202   */\n      swap3\n      pop\n        /* \"#utility.yul\":25225:25226   */\n      dup3\n        /* \"#utility.yul\":25222:25223   */\n      dup3\n        /* \"#utility.yul\":25218:25227   */\n      add\n        /* \"#utility.yul\":25211:25227   */\n      swap1\n      pop\n        /* \"#utility.yul\":25246:25249   */\n      dup1\n        /* \"#utility.yul\":25243:25244   */\n      dup3\n        /* \"#utility.yul\":25240:25250   */\n      gt\n        /* \"#utility.yul\":25237:25273   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":25253:25271   */\n      tag_536\n      tag_273\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":25237:25273   */\n    tag_535:\n        /* \"#utility.yul\":25089:25280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25286:25920   */\n    tag_142:\n        /* \"#utility.yul\":25507:25511   */\n      0x00\n        /* \"#utility.yul\":25545:25547   */\n      0x40\n        /* \"#utility.yul\":25534:25543   */\n      dup3\n        /* \"#utility.yul\":25530:25548   */\n      add\n        /* \"#utility.yul\":25522:25548   */\n      swap1\n      pop\n        /* \"#utility.yul\":25594:25603   */\n      dup2\n        /* \"#utility.yul\":25588:25592   */\n      dup2\n        /* \"#utility.yul\":25584:25604   */\n      sub\n        /* \"#utility.yul\":25580:25581   */\n      0x00\n        /* \"#utility.yul\":25569:25578   */\n      dup4\n        /* \"#utility.yul\":25565:25582   */\n      add\n        /* \"#utility.yul\":25558:25605   */\n      mstore\n        /* \"#utility.yul\":25622:25730   */\n      tag_538\n        /* \"#utility.yul\":25725:25729   */\n      dup2\n        /* \"#utility.yul\":25716:25722   */\n      dup6\n        /* \"#utility.yul\":25622:25730   */\n      tag_263\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":25614:25730   */\n      swap1\n      pop\n        /* \"#utility.yul\":25777:25786   */\n      dup2\n        /* \"#utility.yul\":25771:25775   */\n      dup2\n        /* \"#utility.yul\":25767:25787   */\n      sub\n        /* \"#utility.yul\":25762:25764   */\n      0x20\n        /* \"#utility.yul\":25751:25760   */\n      dup4\n        /* \"#utility.yul\":25747:25765   */\n      add\n        /* \"#utility.yul\":25740:25788   */\n      mstore\n        /* \"#utility.yul\":25805:25913   */\n      tag_539\n        /* \"#utility.yul\":25908:25912   */\n      dup2\n        /* \"#utility.yul\":25899:25905   */\n      dup5\n        /* \"#utility.yul\":25805:25913   */\n      tag_263\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":25797:25913   */\n      swap1\n      pop\n        /* \"#utility.yul\":25286:25920   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25926:26154   */\n    tag_282:\n        /* \"#utility.yul\":26066:26100   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":26062:26063   */\n      0x00\n        /* \"#utility.yul\":26054:26060   */\n      dup3\n        /* \"#utility.yul\":26050:26064   */\n      add\n        /* \"#utility.yul\":26043:26101   */\n      mstore\n        /* \"#utility.yul\":26135:26146   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26130:26132   */\n      0x20\n        /* \"#utility.yul\":26122:26128   */\n      dup3\n        /* \"#utility.yul\":26118:26133   */\n      add\n        /* \"#utility.yul\":26111:26147   */\n      mstore\n        /* \"#utility.yul\":25926:26154   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26160:26526   */\n    tag_283:\n        /* \"#utility.yul\":26302:26305   */\n      0x00\n        /* \"#utility.yul\":26323:26390   */\n      tag_542\n        /* \"#utility.yul\":26387:26389   */\n      0x29\n        /* \"#utility.yul\":26382:26385   */\n      dup4\n        /* \"#utility.yul\":26323:26390   */\n      tag_238\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":26316:26390   */\n      swap2\n      pop\n        /* \"#utility.yul\":26399:26492   */\n      tag_543\n        /* \"#utility.yul\":26488:26491   */\n      dup3\n        /* \"#utility.yul\":26399:26492   */\n      tag_282\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":26517:26519   */\n      0x40\n        /* \"#utility.yul\":26512:26515   */\n      dup3\n        /* \"#utility.yul\":26508:26520   */\n      add\n        /* \"#utility.yul\":26501:26520   */\n      swap1\n      pop\n        /* \"#utility.yul\":26160:26526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26532:26951   */\n    tag_150:\n        /* \"#utility.yul\":26698:26702   */\n      0x00\n        /* \"#utility.yul\":26736:26738   */\n      0x20\n        /* \"#utility.yul\":26725:26734   */\n      dup3\n        /* \"#utility.yul\":26721:26739   */\n      add\n        /* \"#utility.yul\":26713:26739   */\n      swap1\n      pop\n        /* \"#utility.yul\":26785:26794   */\n      dup2\n        /* \"#utility.yul\":26779:26783   */\n      dup2\n        /* \"#utility.yul\":26775:26795   */\n      sub\n        /* \"#utility.yul\":26771:26772   */\n      0x00\n        /* \"#utility.yul\":26760:26769   */\n      dup4\n        /* \"#utility.yul\":26756:26773   */\n      add\n        /* \"#utility.yul\":26749:26796   */\n      mstore\n        /* \"#utility.yul\":26813:26944   */\n      tag_545\n        /* \"#utility.yul\":26939:26943   */\n      dup2\n        /* \"#utility.yul\":26813:26944   */\n      tag_283\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":26805:26944   */\n      swap1\n      pop\n        /* \"#utility.yul\":26532:26951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26957:27289   */\n    tag_164:\n        /* \"#utility.yul\":27078:27082   */\n      0x00\n        /* \"#utility.yul\":27116:27118   */\n      0x40\n        /* \"#utility.yul\":27105:27114   */\n      dup3\n        /* \"#utility.yul\":27101:27119   */\n      add\n        /* \"#utility.yul\":27093:27119   */\n      swap1\n      pop\n        /* \"#utility.yul\":27129:27200   */\n      tag_547\n        /* \"#utility.yul\":27197:27198   */\n      0x00\n        /* \"#utility.yul\":27186:27195   */\n      dup4\n        /* \"#utility.yul\":27182:27199   */\n      add\n        /* \"#utility.yul\":27173:27179   */\n      dup6\n        /* \"#utility.yul\":27129:27200   */\n      tag_231\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":27210:27282   */\n      tag_548\n        /* \"#utility.yul\":27278:27280   */\n      0x20\n        /* \"#utility.yul\":27267:27276   */\n      dup4\n        /* \"#utility.yul\":27263:27281   */\n      add\n        /* \"#utility.yul\":27254:27260   */\n      dup5\n        /* \"#utility.yul\":27210:27282   */\n      tag_231\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":26957:27289   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27295:27413   */\n    tag_284:\n        /* \"#utility.yul\":27382:27406   */\n      tag_550\n        /* \"#utility.yul\":27400:27405   */\n      dup2\n        /* \"#utility.yul\":27382:27406   */\n      tag_225\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":27377:27380   */\n      dup3\n        /* \"#utility.yul\":27370:27407   */\n      mstore\n        /* \"#utility.yul\":27295:27413   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27419:27517   */\n    tag_285:\n        /* \"#utility.yul\":27470:27476   */\n      0x00\n        /* \"#utility.yul\":27504:27509   */\n      dup2\n        /* \"#utility.yul\":27498:27510   */\n      mload\n        /* \"#utility.yul\":27488:27510   */\n      swap1\n      pop\n        /* \"#utility.yul\":27419:27517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27523:27691   */\n    tag_286:\n        /* \"#utility.yul\":27606:27617   */\n      0x00\n        /* \"#utility.yul\":27640:27646   */\n      dup3\n        /* \"#utility.yul\":27635:27638   */\n      dup3\n        /* \"#utility.yul\":27628:27647   */\n      mstore\n        /* \"#utility.yul\":27680:27684   */\n      0x20\n        /* \"#utility.yul\":27675:27678   */\n      dup3\n        /* \"#utility.yul\":27671:27685   */\n      add\n        /* \"#utility.yul\":27656:27685   */\n      swap1\n      pop\n        /* \"#utility.yul\":27523:27691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27697:28070   */\n    tag_287:\n        /* \"#utility.yul\":27783:27786   */\n      0x00\n        /* \"#utility.yul\":27811:27849   */\n      tag_554\n        /* \"#utility.yul\":27843:27848   */\n      dup3\n        /* \"#utility.yul\":27811:27849   */\n      tag_285\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":27865:27935   */\n      tag_555\n        /* \"#utility.yul\":27928:27934   */\n      dup2\n        /* \"#utility.yul\":27923:27926   */\n      dup6\n        /* \"#utility.yul\":27865:27935   */\n      tag_286\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":27858:27935   */\n      swap4\n      pop\n        /* \"#utility.yul\":27944:28009   */\n      tag_556\n        /* \"#utility.yul\":28002:28008   */\n      dup2\n        /* \"#utility.yul\":27997:28000   */\n      dup6\n        /* \"#utility.yul\":27990:27994   */\n      0x20\n        /* \"#utility.yul\":27983:27988   */\n      dup7\n        /* \"#utility.yul\":27979:27995   */\n      add\n        /* \"#utility.yul\":27944:28009   */\n      tag_239\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":28034:28063   */\n      tag_557\n        /* \"#utility.yul\":28056:28062   */\n      dup2\n        /* \"#utility.yul\":28034:28063   */\n      tag_240\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":28029:28032   */\n      dup5\n        /* \"#utility.yul\":28025:28064   */\n      add\n        /* \"#utility.yul\":28018:28064   */\n      swap2\n      pop\n        /* \"#utility.yul\":27787:28070   */\n      pop\n        /* \"#utility.yul\":27697:28070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28076:29129   */\n    tag_175:\n        /* \"#utility.yul\":28399:28403   */\n      0x00\n        /* \"#utility.yul\":28437:28440   */\n      0xa0\n        /* \"#utility.yul\":28426:28435   */\n      dup3\n        /* \"#utility.yul\":28422:28441   */\n      add\n        /* \"#utility.yul\":28414:28441   */\n      swap1\n      pop\n        /* \"#utility.yul\":28451:28522   */\n      tag_559\n        /* \"#utility.yul\":28519:28520   */\n      0x00\n        /* \"#utility.yul\":28508:28517   */\n      dup4\n        /* \"#utility.yul\":28504:28521   */\n      add\n        /* \"#utility.yul\":28495:28501   */\n      dup9\n        /* \"#utility.yul\":28451:28522   */\n      tag_284\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":28532:28604   */\n      tag_560\n        /* \"#utility.yul\":28600:28602   */\n      0x20\n        /* \"#utility.yul\":28589:28598   */\n      dup4\n        /* \"#utility.yul\":28585:28603   */\n      add\n        /* \"#utility.yul\":28576:28582   */\n      dup8\n        /* \"#utility.yul\":28532:28604   */\n      tag_284\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":28651:28660   */\n      dup2\n        /* \"#utility.yul\":28645:28649   */\n      dup2\n        /* \"#utility.yul\":28641:28661   */\n      sub\n        /* \"#utility.yul\":28636:28638   */\n      0x40\n        /* \"#utility.yul\":28625:28634   */\n      dup4\n        /* \"#utility.yul\":28621:28639   */\n      add\n        /* \"#utility.yul\":28614:28662   */\n      mstore\n        /* \"#utility.yul\":28679:28787   */\n      tag_561\n        /* \"#utility.yul\":28782:28786   */\n      dup2\n        /* \"#utility.yul\":28773:28779   */\n      dup7\n        /* \"#utility.yul\":28679:28787   */\n      tag_263\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":28671:28787   */\n      swap1\n      pop\n        /* \"#utility.yul\":28834:28843   */\n      dup2\n        /* \"#utility.yul\":28828:28832   */\n      dup2\n        /* \"#utility.yul\":28824:28844   */\n      sub\n        /* \"#utility.yul\":28819:28821   */\n      0x60\n        /* \"#utility.yul\":28808:28817   */\n      dup4\n        /* \"#utility.yul\":28804:28822   */\n      add\n        /* \"#utility.yul\":28797:28845   */\n      mstore\n        /* \"#utility.yul\":28862:28970   */\n      tag_562\n        /* \"#utility.yul\":28965:28969   */\n      dup2\n        /* \"#utility.yul\":28956:28962   */\n      dup6\n        /* \"#utility.yul\":28862:28970   */\n      tag_263\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":28854:28970   */\n      swap1\n      pop\n        /* \"#utility.yul\":29018:29027   */\n      dup2\n        /* \"#utility.yul\":29012:29016   */\n      dup2\n        /* \"#utility.yul\":29008:29028   */\n      sub\n        /* \"#utility.yul\":29002:29005   */\n      0x80\n        /* \"#utility.yul\":28991:29000   */\n      dup4\n        /* \"#utility.yul\":28987:29006   */\n      add\n        /* \"#utility.yul\":28980:29029   */\n      mstore\n        /* \"#utility.yul\":29046:29122   */\n      tag_563\n        /* \"#utility.yul\":29117:29121   */\n      dup2\n        /* \"#utility.yul\":29108:29114   */\n      dup5\n        /* \"#utility.yul\":29046:29122   */\n      tag_287\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":29038:29122   */\n      swap1\n      pop\n        /* \"#utility.yul\":28076:29129   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29135:29276   */\n    tag_288:\n        /* \"#utility.yul\":29191:29196   */\n      0x00\n        /* \"#utility.yul\":29222:29228   */\n      dup2\n        /* \"#utility.yul\":29216:29229   */\n      mload\n        /* \"#utility.yul\":29207:29229   */\n      swap1\n      pop\n        /* \"#utility.yul\":29238:29270   */\n      tag_565\n        /* \"#utility.yul\":29264:29269   */\n      dup2\n        /* \"#utility.yul\":29238:29270   */\n      tag_233\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":29135:29276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29282:29631   */\n    tag_178:\n        /* \"#utility.yul\":29351:29357   */\n      0x00\n        /* \"#utility.yul\":29400:29402   */\n      0x20\n        /* \"#utility.yul\":29388:29397   */\n      dup3\n        /* \"#utility.yul\":29379:29386   */\n      dup5\n        /* \"#utility.yul\":29375:29398   */\n      sub\n        /* \"#utility.yul\":29371:29403   */\n      slt\n        /* \"#utility.yul\":29368:29487   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":29406:29485   */\n      tag_568\n      tag_222\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":29368:29487   */\n    tag_567:\n        /* \"#utility.yul\":29526:29527   */\n      0x00\n        /* \"#utility.yul\":29551:29614   */\n      tag_569\n        /* \"#utility.yul\":29606:29613   */\n      dup5\n        /* \"#utility.yul\":29597:29603   */\n      dup3\n        /* \"#utility.yul\":29586:29595   */\n      dup6\n        /* \"#utility.yul\":29582:29604   */\n      add\n        /* \"#utility.yul\":29551:29614   */\n      tag_288\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":29541:29614   */\n      swap2\n      pop\n        /* \"#utility.yul\":29497:29624   */\n      pop\n        /* \"#utility.yul\":29282:29631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29637:29743   */\n    tag_289:\n        /* \"#utility.yul\":29681:29689   */\n      0x00\n        /* \"#utility.yul\":29730:29735   */\n      dup2\n        /* \"#utility.yul\":29725:29728   */\n      0xe0\n        /* \"#utility.yul\":29721:29736   */\n      shr\n        /* \"#utility.yul\":29700:29736   */\n      swap1\n      pop\n        /* \"#utility.yul\":29637:29743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29749:29932   */\n    tag_184:\n        /* \"#utility.yul\":29784:29787   */\n      0x00\n        /* \"#utility.yul\":29822:29823   */\n      0x03\n        /* \"#utility.yul\":29804:29820   */\n      returndatasize\n        /* \"#utility.yul\":29801:29824   */\n      gt\n        /* \"#utility.yul\":29798:29926   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":29860:29861   */\n      0x04\n        /* \"#utility.yul\":29857:29858   */\n      0x00\n        /* \"#utility.yul\":29854:29855   */\n      dup1\n        /* \"#utility.yul\":29839:29862   */\n      returndatacopy\n        /* \"#utility.yul\":29882:29916   */\n      tag_573\n        /* \"#utility.yul\":29913:29914   */\n      0x00\n        /* \"#utility.yul\":29907:29915   */\n      mload\n        /* \"#utility.yul\":29882:29916   */\n      tag_289\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":29875:29916   */\n      swap1\n      pop\n        /* \"#utility.yul\":29798:29926   */\n    tag_572:\n        /* \"#utility.yul\":29749:29932   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":29938:30649   */\n    tag_186:\n        /* \"#utility.yul\":29977:29980   */\n      0x00\n        /* \"#utility.yul\":30015:30019   */\n      0x44\n        /* \"#utility.yul\":29997:30013   */\n      returndatasize\n        /* \"#utility.yul\":29994:30020   */\n      lt\n        /* \"#utility.yul\":30023:30028   */\n      tag_574\n        /* \"#utility.yul\":29991:30030   */\n      jumpi\n        /* \"#utility.yul\":30052:30072   */\n      tag_576\n      tag_221\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":30127:30128   */\n      0x04\n        /* \"#utility.yul\":30109:30125   */\n      returndatasize\n        /* \"#utility.yul\":30105:30129   */\n      sub\n        /* \"#utility.yul\":30102:30103   */\n      0x04\n        /* \"#utility.yul\":30096:30100   */\n      dup3\n        /* \"#utility.yul\":30081:30130   */\n      returndatacopy\n        /* \"#utility.yul\":30160:30164   */\n      dup1\n        /* \"#utility.yul\":30154:30165   */\n      mload\n        /* \"#utility.yul\":30259:30275   */\n      returndatasize\n        /* \"#utility.yul\":30252:30256   */\n      0x24\n        /* \"#utility.yul\":30244:30250   */\n      dup3\n        /* \"#utility.yul\":30240:30257   */\n      add\n        /* \"#utility.yul\":30237:30276   */\n      gt\n        /* \"#utility.yul\":30204:30222   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30196:30202   */\n      dup3\n        /* \"#utility.yul\":30193:30223   */\n      gt\n        /* \"#utility.yul\":30177:30290   */\n      or\n        /* \"#utility.yul\":30174:30320   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":30305:30310   */\n      pop\n      pop\n      jump(tag_574)\n        /* \"#utility.yul\":30174:30320   */\n    tag_577:\n        /* \"#utility.yul\":30351:30357   */\n      dup1\n        /* \"#utility.yul\":30345:30349   */\n      dup3\n        /* \"#utility.yul\":30341:30358   */\n      add\n        /* \"#utility.yul\":30387:30390   */\n      dup1\n        /* \"#utility.yul\":30381:30391   */\n      mload\n        /* \"#utility.yul\":30414:30432   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30406:30412   */\n      dup2\n        /* \"#utility.yul\":30403:30433   */\n      gt\n        /* \"#utility.yul\":30400:30443   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":30436:30441   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_574)\n        /* \"#utility.yul\":30400:30443   */\n    tag_578:\n        /* \"#utility.yul\":30484:30490   */\n      dup1\n        /* \"#utility.yul\":30477:30481   */\n      0x20\n        /* \"#utility.yul\":30472:30475   */\n      dup4\n        /* \"#utility.yul\":30468:30482   */\n      add\n        /* \"#utility.yul\":30464:30491   */\n      add\n        /* \"#utility.yul\":30543:30544   */\n      0x04\n        /* \"#utility.yul\":30525:30541   */\n      returndatasize\n        /* \"#utility.yul\":30521:30545   */\n      sub\n        /* \"#utility.yul\":30515:30519   */\n      dup6\n        /* \"#utility.yul\":30511:30546   */\n      add\n        /* \"#utility.yul\":30506:30509   */\n      dup2\n        /* \"#utility.yul\":30503:30547   */\n      gt\n        /* \"#utility.yul\":30500:30557   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":30550:30555   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_574)\n        /* \"#utility.yul\":30500:30557   */\n    tag_579:\n        /* \"#utility.yul\":30567:30624   */\n      tag_580\n        /* \"#utility.yul\":30615:30621   */\n      dup3\n        /* \"#utility.yul\":30609:30613   */\n      0x20\n        /* \"#utility.yul\":30605:30622   */\n      add\n        /* \"#utility.yul\":30597:30603   */\n      dup6\n        /* \"#utility.yul\":30593:30623   */\n      add\n        /* \"#utility.yul\":30587:30591   */\n      dup7\n        /* \"#utility.yul\":30567:30624   */\n      tag_243\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":30640:30643   */\n      dup3\n        /* \"#utility.yul\":30633:30643   */\n      swap6\n      pop\n        /* \"#utility.yul\":29981:30649   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":29938:30649   */\n    tag_574:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30655:30894   */\n    tag_290:\n        /* \"#utility.yul\":30795:30829   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":30791:30792   */\n      0x00\n        /* \"#utility.yul\":30783:30789   */\n      dup3\n        /* \"#utility.yul\":30779:30793   */\n      add\n        /* \"#utility.yul\":30772:30830   */\n      mstore\n        /* \"#utility.yul\":30864:30886   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":30859:30861   */\n      0x20\n        /* \"#utility.yul\":30851:30857   */\n      dup3\n        /* \"#utility.yul\":30847:30862   */\n      add\n        /* \"#utility.yul\":30840:30887   */\n      mstore\n        /* \"#utility.yul\":30655:30894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30900:31266   */\n    tag_291:\n        /* \"#utility.yul\":31042:31045   */\n      0x00\n        /* \"#utility.yul\":31063:31130   */\n      tag_583\n        /* \"#utility.yul\":31127:31129   */\n      0x34\n        /* \"#utility.yul\":31122:31125   */\n      dup4\n        /* \"#utility.yul\":31063:31130   */\n      tag_238\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":31056:31130   */\n      swap2\n      pop\n        /* \"#utility.yul\":31139:31232   */\n      tag_584\n        /* \"#utility.yul\":31228:31231   */\n      dup3\n        /* \"#utility.yul\":31139:31232   */\n      tag_290\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":31257:31259   */\n      0x40\n        /* \"#utility.yul\":31252:31255   */\n      dup3\n        /* \"#utility.yul\":31248:31260   */\n      add\n        /* \"#utility.yul\":31241:31260   */\n      swap1\n      pop\n        /* \"#utility.yul\":30900:31266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31272:31691   */\n    tag_190:\n        /* \"#utility.yul\":31438:31442   */\n      0x00\n        /* \"#utility.yul\":31476:31478   */\n      0x20\n        /* \"#utility.yul\":31465:31474   */\n      dup3\n        /* \"#utility.yul\":31461:31479   */\n      add\n        /* \"#utility.yul\":31453:31479   */\n      swap1\n      pop\n        /* \"#utility.yul\":31525:31534   */\n      dup2\n        /* \"#utility.yul\":31519:31523   */\n      dup2\n        /* \"#utility.yul\":31515:31535   */\n      sub\n        /* \"#utility.yul\":31511:31512   */\n      0x00\n        /* \"#utility.yul\":31500:31509   */\n      dup4\n        /* \"#utility.yul\":31496:31513   */\n      add\n        /* \"#utility.yul\":31489:31536   */\n      mstore\n        /* \"#utility.yul\":31553:31684   */\n      tag_586\n        /* \"#utility.yul\":31679:31683   */\n      dup2\n        /* \"#utility.yul\":31553:31684   */\n      tag_291\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":31545:31684   */\n      swap1\n      pop\n        /* \"#utility.yul\":31272:31691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31697:31924   */\n    tag_292:\n        /* \"#utility.yul\":31837:31871   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":31833:31834   */\n      0x00\n        /* \"#utility.yul\":31825:31831   */\n      dup3\n        /* \"#utility.yul\":31821:31835   */\n      add\n        /* \"#utility.yul\":31814:31872   */\n      mstore\n        /* \"#utility.yul\":31906:31916   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31901:31903   */\n      0x20\n        /* \"#utility.yul\":31893:31899   */\n      dup3\n        /* \"#utility.yul\":31889:31904   */\n      add\n        /* \"#utility.yul\":31882:31917   */\n      mstore\n        /* \"#utility.yul\":31697:31924   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31930:32296   */\n    tag_293:\n        /* \"#utility.yul\":32072:32075   */\n      0x00\n        /* \"#utility.yul\":32093:32160   */\n      tag_589\n        /* \"#utility.yul\":32157:32159   */\n      0x28\n        /* \"#utility.yul\":32152:32155   */\n      dup4\n        /* \"#utility.yul\":32093:32160   */\n      tag_238\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":32086:32160   */\n      swap2\n      pop\n        /* \"#utility.yul\":32169:32262   */\n      tag_590\n        /* \"#utility.yul\":32258:32261   */\n      dup3\n        /* \"#utility.yul\":32169:32262   */\n      tag_292\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":32287:32289   */\n      0x40\n        /* \"#utility.yul\":32282:32285   */\n      dup3\n        /* \"#utility.yul\":32278:32290   */\n      add\n        /* \"#utility.yul\":32271:32290   */\n      swap1\n      pop\n        /* \"#utility.yul\":31930:32296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32302:32721   */\n    tag_194:\n        /* \"#utility.yul\":32468:32472   */\n      0x00\n        /* \"#utility.yul\":32506:32508   */\n      0x20\n        /* \"#utility.yul\":32495:32504   */\n      dup3\n        /* \"#utility.yul\":32491:32509   */\n      add\n        /* \"#utility.yul\":32483:32509   */\n      swap1\n      pop\n        /* \"#utility.yul\":32555:32564   */\n      dup2\n        /* \"#utility.yul\":32549:32553   */\n      dup2\n        /* \"#utility.yul\":32545:32565   */\n      sub\n        /* \"#utility.yul\":32541:32542   */\n      0x00\n        /* \"#utility.yul\":32530:32539   */\n      dup4\n        /* \"#utility.yul\":32526:32543   */\n      add\n        /* \"#utility.yul\":32519:32566   */\n      mstore\n        /* \"#utility.yul\":32583:32714   */\n      tag_592\n        /* \"#utility.yul\":32709:32713   */\n      dup2\n        /* \"#utility.yul\":32583:32714   */\n      tag_293\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":32575:32714   */\n      swap1\n      pop\n        /* \"#utility.yul\":32302:32721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32727:33478   */\n    tag_205:\n        /* \"#utility.yul\":32950:32954   */\n      0x00\n        /* \"#utility.yul\":32988:32991   */\n      0xa0\n        /* \"#utility.yul\":32977:32986   */\n      dup3\n        /* \"#utility.yul\":32973:32992   */\n      add\n        /* \"#utility.yul\":32965:32992   */\n      swap1\n      pop\n        /* \"#utility.yul\":33002:33073   */\n      tag_594\n        /* \"#utility.yul\":33070:33071   */\n      0x00\n        /* \"#utility.yul\":33059:33068   */\n      dup4\n        /* \"#utility.yul\":33055:33072   */\n      add\n        /* \"#utility.yul\":33046:33052   */\n      dup9\n        /* \"#utility.yul\":33002:33073   */\n      tag_284\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":33083:33155   */\n      tag_595\n        /* \"#utility.yul\":33151:33153   */\n      0x20\n        /* \"#utility.yul\":33140:33149   */\n      dup4\n        /* \"#utility.yul\":33136:33154   */\n      add\n        /* \"#utility.yul\":33127:33133   */\n      dup8\n        /* \"#utility.yul\":33083:33155   */\n      tag_284\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":33165:33237   */\n      tag_596\n        /* \"#utility.yul\":33233:33235   */\n      0x40\n        /* \"#utility.yul\":33222:33231   */\n      dup4\n        /* \"#utility.yul\":33218:33236   */\n      add\n        /* \"#utility.yul\":33209:33215   */\n      dup7\n        /* \"#utility.yul\":33165:33237   */\n      tag_231\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":33247:33319   */\n      tag_597\n        /* \"#utility.yul\":33315:33317   */\n      0x60\n        /* \"#utility.yul\":33304:33313   */\n      dup4\n        /* \"#utility.yul\":33300:33318   */\n      add\n        /* \"#utility.yul\":33291:33297   */\n      dup6\n        /* \"#utility.yul\":33247:33319   */\n      tag_231\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":33367:33376   */\n      dup2\n        /* \"#utility.yul\":33361:33365   */\n      dup2\n        /* \"#utility.yul\":33357:33377   */\n      sub\n        /* \"#utility.yul\":33351:33354   */\n      0x80\n        /* \"#utility.yul\":33340:33349   */\n      dup4\n        /* \"#utility.yul\":33336:33355   */\n      add\n        /* \"#utility.yul\":33329:33378   */\n      mstore\n        /* \"#utility.yul\":33395:33471   */\n      tag_598\n        /* \"#utility.yul\":33466:33470   */\n      dup2\n        /* \"#utility.yul\":33457:33463   */\n      dup5\n        /* \"#utility.yul\":33395:33471   */\n      tag_287\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":33387:33471   */\n      swap1\n      pop\n        /* \"#utility.yul\":32727:33478   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205cce5752241f7c260218810d61c12cf3a512a315bde05694555830577c9ac36c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_89": {
									"entryPoint": null,
									"id": 89,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_600": {
									"entryPoint": 79,
									"id": 600,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8245:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:10",
																"statements": []
															},
															"src": "1701:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:10"
															},
															"nodeType": "YulIf",
															"src": "2117:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:10",
														"type": ""
													}
												],
												"src": "1862:434:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:10"
															},
															"nodeType": "YulIf",
															"src": "2399:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:10",
														"type": ""
													}
												],
												"src": "2316:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:437:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2810:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2812:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2812:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2812:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2785:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2794:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2781:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2781:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2806:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2777:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:32:10"
															},
															"nodeType": "YulIf",
															"src": "2774:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2903:291:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2918:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2942:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2953:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2938:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2938:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2932:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2932:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2922:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3003:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3005:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3005:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3005:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2975:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2983:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2972:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2972:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "2969:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3100:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3156:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3167:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3152:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3152:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3176:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3110:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3110:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3100:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2734:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2745:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2757:6:10",
														"type": ""
													}
												],
												"src": "2677:524:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3277:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3293:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3287:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3249:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3259:6:10",
														"type": ""
													}
												],
												"src": "3207:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3340:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3357:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3360:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3350:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3447:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3478:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3481:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3471:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3471:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3312:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3549:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3559:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3573:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3590:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3620:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3616:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3594:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3667:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3681:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3695:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3703:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3691:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3691:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3647:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:26:10"
															},
															"nodeType": "YulIf",
															"src": "3637:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3770:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3784:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3784:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3784:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3734:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3765:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3754:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3754:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3731:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:38:10"
															},
															"nodeType": "YulIf",
															"src": "3728:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3533:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3542:6:10",
														"type": ""
													}
												],
												"src": "3498:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "3896:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3888:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3916:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3919:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3909:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3932:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3950:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3940:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3932:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3865:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3873:4:10",
														"type": ""
													}
												],
												"src": "3824:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4015:49:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4025:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4043:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4050:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4035:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4025:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3998:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4008:6:10",
														"type": ""
													}
												],
												"src": "3971:93:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4133:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4164:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4154:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4133:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4098:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4104:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4114:8:10",
														"type": ""
													}
												],
												"src": "4070:107:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4259:317:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4269:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4290:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4302:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4273:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4313:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4344:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4355:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4325:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4317:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4431:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4462:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4473:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4443:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4431:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4491:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4504:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4515:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4511:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4491:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4530:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4543:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4554:8:10"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4564:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4550:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4550:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4540:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4530:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4220:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4227:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4239:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4252:6:10",
														"type": ""
													}
												],
												"src": "4183:393:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4627:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4637:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4648:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4637:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4609:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4619:7:10",
														"type": ""
													}
												],
												"src": "4582:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4697:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4707:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4714:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4683:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4693:3:10",
														"type": ""
													}
												],
												"src": "4665:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4791:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4801:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4859:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4841:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4841:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4832:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4814:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4801:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4771:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4781:9:10",
														"type": ""
													}
												],
												"src": "4731:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4926:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4936:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4943:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4936:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4912:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4922:3:10",
														"type": ""
													}
												],
												"src": "4879:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5036:193:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5046:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5101:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5070:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5050:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5165:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5159:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5159:11:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5172:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5204:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5180:23:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5180:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5131:27:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5118:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:105:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5118:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5013:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5019:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5027:7:10",
														"type": ""
													}
												],
												"src": "4960:269:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5284:24:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5294:8:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5301:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5294:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5280:3:10",
														"type": ""
													}
												],
												"src": "5235:73:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5367:136:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5377:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5391:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5391:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5381:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5476:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5482:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5490:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5432:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5432:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5432:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5353:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5359:6:10",
														"type": ""
													}
												],
												"src": "5314:189:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5559:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5626:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5670:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5677:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5640:29:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5640:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5640:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5579:5:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5586:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5576:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:14:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5591:26:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5593:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5606:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5613:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5602:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5602:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5593:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5573:2:10",
																"statements": []
															},
															"src": "5569:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5547:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5554:3:10",
														"type": ""
													}
												],
												"src": "5509:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5780:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5806:431:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5820:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "5868:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "5836:31:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5836:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "5824:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5887:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "5910:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "5938:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "5920:17:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5920:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5906:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5906:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "5891:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6107:27:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6109:23:10",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6124:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6109:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6091:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6103:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6088:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6088:18:10"
																		},
																		"nodeType": "YulIf",
																		"src": "6085:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6176:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6193:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6221:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6203:17:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6203:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6189:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6189:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6147:28:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6147:80:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6147:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5797:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5802:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5794:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5794:11:10"
															},
															"nodeType": "YulIf",
															"src": "5791:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5756:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5763:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "5768:10:10",
														"type": ""
													}
												],
												"src": "5701:543:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6313:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6323:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6348:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6354:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6344:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6323:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6288:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6294:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6304:8:10",
														"type": ""
													}
												],
												"src": "6250:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6424:118:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6434:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6483:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6486:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6479:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6479:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6498:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6494:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6494:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6450:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6450:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6446:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6438:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6511:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6525:4:10"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6531:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6521:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6401:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6407:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6417:6:10",
														"type": ""
													}
												],
												"src": "6373:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6628:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6761:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6788:4:10"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6794:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "6769:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6761:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6807:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6818:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6828:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "6831:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6824:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6815:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6815:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "6807:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6609:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6615:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6623:4:10",
														"type": ""
													}
												],
												"src": "6547:295:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6939:1303:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6950:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6997:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6964:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "6954:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7086:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7088:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7088:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7088:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7058:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7066:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7055:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7055:30:10"
															},
															"nodeType": "YulIf",
															"src": "7052:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7118:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7164:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7158:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7158:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7132:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7122:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7263:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7269:6:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7277:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7217:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7217:67:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7294:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7311:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7298:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7322:17:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7335:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7322:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7386:611:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7400:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7419:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7431:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7427:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7427:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7415:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7415:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7404:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7451:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7497:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7465:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7465:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7455:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7515:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7524:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7519:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7583:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7608:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7626:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7631:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7622:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7622:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7616:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7616:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7601:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7601:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7601:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7660:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7674:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7682:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7670:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7670:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7660:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7701:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "7718:9:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7729:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7714:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7714:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "7701:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7549:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7552:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7546:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7546:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7561:21:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7563:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7572:1:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7575:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7568:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7568:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7563:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7542:3:10",
																					"statements": []
																				},
																				"src": "7538:208:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7782:156:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "7800:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "7827:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "7832:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7823:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7823:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "7817:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7817:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "7804:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7867:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "7894:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "7909:6:10"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "7917:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "7905:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7905:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "7875:18:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7875:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7860:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7860:64:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7860:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7765:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7774:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7762:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7762:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "7759:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7958:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "7972:6:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7980:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "7968:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7968:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7984:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7964:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7964:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "7951:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7951:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7951:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7379:618:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7384:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8014:222:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8028:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8041:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8032:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8065:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8083:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8102:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8107:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8098:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8098:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8092:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8092:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8083:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8058:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "8055:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8152:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8211:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8218:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8158:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8158:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8145:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8145:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8145:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8006:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7359:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7367:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7356:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "7349:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "6928:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6934:3:10",
														"type": ""
													}
												],
												"src": "6847:1395:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2B13 CODESIZE SUB DUP1 PUSH3 0x2B13 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F7 JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x57A JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x60 SWAP2 SWAP1 PUSH3 0x493 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCD DUP3 PUSH3 0x82 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEE PUSH3 0x93 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x104 PUSH3 0x64 JUMP JUMPDEST SWAP1 POP PUSH3 0x112 DUP3 DUP3 PUSH3 0xC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x135 JUMPI PUSH3 0x134 PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x140 DUP3 PUSH3 0x82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x150 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x190 PUSH3 0x18A DUP5 PUSH3 0x117 JUMP JUMPDEST PUSH3 0xF8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AF JUMPI PUSH3 0x1AE PUSH3 0x7D JUMP JUMPDEST JUMPDEST PUSH3 0x1BC DUP5 DUP3 DUP6 PUSH3 0x14D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DC JUMPI PUSH3 0x1DB PUSH3 0x78 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1EE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6E JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x73 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP5 DUP3 DUP6 ADD PUSH3 0x1C4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x29B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2B1 JUMPI PUSH3 0x2B0 PUSH3 0x253 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x31B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2DC JUMP JUMPDEST PUSH3 0x327 DUP7 DUP4 PUSH3 0x2DC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x374 PUSH3 0x36E PUSH3 0x368 DUP5 PUSH3 0x33F JUMP JUMPDEST PUSH3 0x349 JUMP JUMPDEST PUSH3 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x390 DUP4 PUSH3 0x353 JUMP JUMPDEST PUSH3 0x3A8 PUSH3 0x39F DUP3 PUSH3 0x37B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2E9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3BF PUSH3 0x3B0 JUMP JUMPDEST PUSH3 0x3CC DUP2 DUP5 DUP5 PUSH3 0x385 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3F4 JUMPI PUSH3 0x3E8 PUSH1 0x0 DUP3 PUSH3 0x3B5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x443 JUMPI PUSH3 0x40D DUP2 PUSH3 0x2B7 JUMP JUMPDEST PUSH3 0x418 DUP5 PUSH3 0x2CC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x428 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x440 PUSH3 0x437 DUP6 PUSH3 0x2CC JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3D1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x468 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x448 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x483 DUP4 DUP4 PUSH3 0x455 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x49E DUP3 PUSH3 0x248 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4BA JUMPI PUSH3 0x4B9 PUSH3 0x93 JUMP JUMPDEST JUMPDEST PUSH3 0x4C6 DUP3 SLOAD PUSH3 0x282 JUMP JUMPDEST PUSH3 0x4D3 DUP3 DUP3 DUP6 PUSH3 0x3F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x50B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4F6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x502 DUP6 DUP3 PUSH3 0x475 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x572 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x51B DUP7 PUSH3 0x2B7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x545 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x51E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x565 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x561 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x455 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2589 DUP1 PUSH3 0x58A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x713 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45B DUP6 PUSH2 0x456 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP1 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x540 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B6 SWAP1 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP PUSH2 0x546 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5D3 PUSH2 0x77D JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C0 JUMPI POP PUSH2 0x6BF DUP6 PUSH2 0x6BA PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x1F0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x842 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0x852 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FC SWAP1 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP3 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA90 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xA9E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC98 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA5 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB5 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD43 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP3 SWAP2 SWAP1 PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE94 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xEA2 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x110E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEDC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x108C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1003 JUMPI PUSH2 0xF6A PUSH2 0x2323 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xFC6 JUMPI POP PUSH2 0xF7E PUSH2 0x2345 JUMP JUMPDEST DUP1 PUSH2 0xF89 JUMPI POP PUSH2 0xFC8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFA SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112D DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x12DD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AC SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1254 JUMPI PUSH2 0x11BB PUSH2 0x2323 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1217 JUMPI POP PUSH2 0x11CF PUSH2 0x2345 JUMP JUMPDEST DUP1 PUSH2 0x11DA JUMPI POP PUSH2 0x1219 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1347 DUP3 PUSH2 0x131C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP2 EQ PUSH2 0x1362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1374 DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138D DUP2 PUSH2 0x137A JUMP JUMPDEST DUP2 EQ PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AA DUP2 PUSH2 0x1384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E6 DUP6 DUP3 DUP7 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x141A JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1496 DUP5 DUP3 DUP6 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP5 DUP3 DUP6 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1564 DUP3 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x156E DUP2 DUP6 PUSH2 0x150D JUMP JUMPDEST SWAP4 POP PUSH2 0x157E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x1587 DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AC DUP2 DUP5 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F1 DUP3 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1610 JUMPI PUSH2 0x160F PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1623 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP PUSH2 0x162F DUP3 DUP3 PUSH2 0x15E8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x164F JUMPI PUSH2 0x164E PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1678 PUSH2 0x1673 DUP5 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16C4 JUMPI DUP1 PUSH2 0x16B0 DUP9 DUP3 PUSH2 0x139B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x169D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E3 JUMPI PUSH2 0x16E2 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1665 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x171C JUMPI PUSH2 0x171B PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH2 0x1725 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1754 PUSH2 0x174F DUP5 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0x16FC JUMP JUMPDEST JUMPDEST PUSH2 0x177B DUP5 DUP3 DUP6 PUSH2 0x1732 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17A8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17EC DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1819 DUP9 DUP3 DUP10 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1846 DUP9 DUP3 DUP10 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1867 JUMPI PUSH2 0x1866 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1873 DUP9 DUP3 DUP10 ADD PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BF PUSH2 0x18BA DUP5 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18E2 JUMPI PUSH2 0x18E1 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x190B JUMPI DUP1 PUSH2 0x18F7 DUP9 DUP3 PUSH2 0x1365 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18E4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x192A JUMPI PUSH2 0x1929 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x193A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1978 JUMPI PUSH2 0x1977 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1984 DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x19B1 DUP6 DUP3 DUP7 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F0 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A02 DUP4 DUP4 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A26 DUP3 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x1A30 DUP2 DUP6 PUSH2 0x19C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A3B DUP4 PUSH2 0x19D7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A6C JUMPI DUP2 MLOAD PUSH2 0x1A53 DUP9 DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A5E DUP4 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A3F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A93 DUP2 DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC1 DUP2 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ADE JUMPI PUSH2 0x1ADD PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEC DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFD DUP6 DUP3 DUP7 ADD PUSH2 0x1AB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1D PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2C DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3D DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B71 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B82 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B93 DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BA4 DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x1BC4 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1BD1 DUP9 DUP3 DUP10 ADD PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3A PUSH1 0x2B DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 DUP3 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x1C70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2C PUSH1 0x32 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D37 DUP3 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D5B DUP2 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBE PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC9 DUP3 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DED DUP2 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E5D DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E8F JUMPI PUSH2 0x1E8E PUSH2 0x1E23 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF6 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F01 DUP3 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F25 DUP2 PUSH2 0x1EE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F88 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F93 DUP3 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB7 DUP2 PUSH2 0x1F7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201A PUSH1 0x25 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x2025 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2049 DUP2 PUSH2 0x200D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AC PUSH1 0x2A DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x20B7 DUP3 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20DB DUP2 PUSH2 0x209F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20ED DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH2 0x20F8 DUP4 PUSH2 0x137A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2110 JUMPI PUSH2 0x210F PUSH2 0x1E23 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2130 DUP2 DUP6 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2144 DUP2 DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A9 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x21B4 DUP3 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D8 DUP2 PUSH2 0x219C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21F4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x2201 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2211 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223E DUP3 PUSH2 0x2217 JUMP JUMPDEST PUSH2 0x2248 DUP2 DUP6 PUSH2 0x2222 JUMP JUMPDEST SWAP4 POP PUSH2 0x2258 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x2261 DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2281 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x228E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2208 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x22A0 DUP2 DUP7 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22B4 DUP2 DUP6 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22C8 DUP2 DUP5 PUSH2 0x2233 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22E3 DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22FF JUMPI PUSH2 0x22FE PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x230D DUP5 DUP3 DUP6 ADD PUSH2 0x22D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2342 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x233F PUSH1 0x0 MLOAD PUSH2 0x2316 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x23D2 JUMPI PUSH2 0x2357 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x237F JUMPI POP POP PUSH2 0x23D2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x239D JUMPI POP POP POP POP PUSH2 0x23D2 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x23BA JUMPI POP POP POP POP POP PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x23C9 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15E8 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2431 PUSH1 0x34 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x243C DUP3 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2460 DUP2 PUSH2 0x2424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C3 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x24CE DUP3 PUSH2 0x2467 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24F2 DUP2 PUSH2 0x24B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x250E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x251B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x2528 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x2535 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2547 DUP2 DUP5 PUSH2 0x2233 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xCE JUMPI MSTORE 0x24 0x1F PUSH29 0x260218810D61C12CF3A512A315BDE05694555830577C9AC36C64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "570:16550:1:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;;;:13;;:::i;:::-;1107:62;570:16550;;8171:86;8244:6;8237:4;:13;;;;;;:::i;:::-;;8171:86;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:524::-;2757:6;2806:2;2794:9;2785:7;2781:23;2777:32;2774:119;;;2812:79;;:::i;:::-;2774:119;2953:1;2942:9;2938:17;2932:24;2983:18;2975:6;2972:30;2969:117;;;3005:79;;:::i;:::-;2969:117;3110:74;3176:7;3167:6;3156:9;3152:22;3110:74;:::i;:::-;3100:84;;2903:291;2677:524;;;;:::o;3207:99::-;3259:6;3293:5;3287:12;3277:22;;3207:99;;;:::o;3312:180::-;3360:77;3357:1;3350:88;3457:4;3454:1;3447:15;3481:4;3478:1;3471:15;3498:320;3542:6;3579:1;3573:4;3569:12;3559:22;;3626:1;3620:4;3616:12;3647:18;3637:81;;3703:4;3695:6;3691:17;3681:27;;3637:81;3765:2;3757:6;3754:14;3734:18;3731:38;3728:84;;3784:18;;:::i;:::-;3728:84;3549:269;3498:320;;;:::o;3824:141::-;3873:4;3896:3;3888:11;;3919:3;3916:1;3909:14;3953:4;3950:1;3940:18;3932:26;;3824:141;;;:::o;3971:93::-;4008:6;4055:2;4050;4043:5;4039:14;4035:23;4025:33;;3971:93;;;:::o;4070:107::-;4114:8;4164:5;4158:4;4154:16;4133:37;;4070:107;;;;:::o;4183:393::-;4252:6;4302:1;4290:10;4286:18;4325:97;4355:66;4344:9;4325:97;:::i;:::-;4443:39;4473:8;4462:9;4443:39;:::i;:::-;4431:51;;4515:4;4511:9;4504:5;4500:21;4491:30;;4564:4;4554:8;4550:19;4543:5;4540:30;4530:40;;4259:317;;4183:393;;;;;:::o;4582:77::-;4619:7;4648:5;4637:16;;4582:77;;;:::o;4665:60::-;4693:3;4714:5;4707:12;;4665:60;;;:::o;4731:142::-;4781:9;4814:53;4832:34;4841:24;4859:5;4841:24;:::i;:::-;4832:34;:::i;:::-;4814:53;:::i;:::-;4801:66;;4731:142;;;:::o;4879:75::-;4922:3;4943:5;4936:12;;4879:75;;;:::o;4960:269::-;5070:39;5101:7;5070:39;:::i;:::-;5131:91;5180:41;5204:16;5180:41;:::i;:::-;5172:6;5165:4;5159:11;5131:91;:::i;:::-;5125:4;5118:105;5036:193;4960:269;;;:::o;5235:73::-;5280:3;5235:73;:::o;5314:189::-;5391:32;;:::i;:::-;5432:65;5490:6;5482;5476:4;5432:65;:::i;:::-;5367:136;5314:189;;:::o;5509:186::-;5569:120;5586:3;5579:5;5576:14;5569:120;;;5640:39;5677:1;5670:5;5640:39;:::i;:::-;5613:1;5606:5;5602:13;5593:22;;5569:120;;;5509:186;;:::o;5701:543::-;5802:2;5797:3;5794:11;5791:446;;;5836:38;5868:5;5836:38;:::i;:::-;5920:29;5938:10;5920:29;:::i;:::-;5910:8;5906:44;6103:2;6091:10;6088:18;6085:49;;;6124:8;6109:23;;6085:49;6147:80;6203:22;6221:3;6203:22;:::i;:::-;6193:8;6189:37;6176:11;6147:80;:::i;:::-;5806:431;;5791:446;5701:543;;;:::o;6250:117::-;6304:8;6354:5;6348:4;6344:16;6323:37;;6250:117;;;;:::o;6373:169::-;6417:6;6450:51;6498:1;6494:6;6486:5;6483:1;6479:13;6450:51;:::i;:::-;6446:56;6531:4;6525;6521:15;6511:25;;6424:118;6373:169;;;;:::o;6547:295::-;6623:4;6769:29;6794:3;6788:4;6769:29;:::i;:::-;6761:37;;6831:3;6828:1;6824:11;6818:4;6815:21;6807:29;;6547:295;;;;:::o;6847:1395::-;6964:37;6997:3;6964:37;:::i;:::-;7066:18;7058:6;7055:30;7052:56;;;7088:18;;:::i;:::-;7052:56;7132:38;7164:4;7158:11;7132:38;:::i;:::-;7217:67;7277:6;7269;7263:4;7217:67;:::i;:::-;7311:1;7335:4;7322:17;;7367:2;7359:6;7356:14;7384:1;7379:618;;;;8041:1;8058:6;8055:77;;;8107:9;8102:3;8098:19;8092:26;8083:35;;8055:77;8158:67;8218:6;8211:5;8158:67;:::i;:::-;8152:4;8145:81;8014:222;7349:887;;7379:618;7431:4;7427:9;7419:6;7415:22;7465:37;7497:4;7465:37;:::i;:::-;7524:1;7538:208;7552:7;7549:1;7546:14;7538:208;;;7631:9;7626:3;7622:19;7616:26;7608:6;7601:42;7682:1;7674:6;7670:14;7660:24;;7729:2;7718:9;7714:18;7701:31;;7575:4;7572:1;7568:12;7563:17;;7538:208;;;7774:6;7765:7;7762:19;7759:179;;;7832:9;7827:3;7823:19;7817:26;7875:48;7917:4;7909:6;7905:17;7894:9;7875:48;:::i;:::-;7867:6;7860:64;7782:156;7759:179;7984:1;7980;7972:6;7968:14;7964:22;7958:4;7951:36;7386:611;;;7349:887;;6939:1303;;;6847:1395;;:::o;570:16550:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1110": {
									"entryPoint": 3765,
									"id": 1110,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1266": {
									"entryPoint": 4244,
									"id": 1266,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1091": {
									"entryPoint": 3757,
									"id": 1091,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1238": {
									"entryPoint": 3773,
									"id": 1238,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1173": {
									"entryPoint": 4366,
									"id": 1173,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1909": {
									"entryPoint": 1917,
									"id": 1909,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_589": {
									"entryPoint": 1925,
									"id": 589,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_454": {
									"entryPoint": 3090,
									"id": 454,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1072": {
									"entryPoint": 2726,
									"id": 1072,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_224": {
									"entryPoint": 1199,
									"id": 224,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_160": {
									"entryPoint": 464,
									"id": 160,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_259": {
									"entryPoint": 1502,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1620": {
									"entryPoint": 4837,
									"id": 1620,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_337": {
									"entryPoint": 1038,
									"id": 337,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_297": {
									"entryPoint": 1650,
									"id": 297,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_241": {
									"entryPoint": 1480,
									"id": 241,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_120": {
									"entryPoint": 664,
									"id": 120,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1942": {
									"entryPoint": 1811,
									"id": 1942,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_132": {
									"entryPoint": 890,
									"id": 132,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6316,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5733,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8812,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9465,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8470,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7715,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5884,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_224_unsigned": {
									"entryPoint": 8982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed": {
									"entryPoint": 9173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503": {
									"entryPoint": 9319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a": {
									"entryPoint": 7834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d": {
									"entryPoint": 8126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686": {
									"entryPoint": 7376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2": {
									"entryPoint": 8525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807": {
									"entryPoint": 7980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"try_decode_error_message": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33481:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:10",
														"type": ""
													}
												],
												"src": "841:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:10"
															},
															"nodeType": "YulIf",
															"src": "977:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:10",
														"type": ""
													}
												],
												"src": "924:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:10",
														"type": ""
													}
												],
												"src": "1052:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:10"
															},
															"nodeType": "YulIf",
															"src": "1290:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:10",
														"type": ""
													}
												],
												"src": "1197:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:10",
														"type": ""
													}
												],
												"src": "1677:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:10",
														"type": ""
													}
												],
												"src": "1801:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:10",
														"type": ""
													}
												],
												"src": "2029:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:10"
															},
															"nodeType": "YulIf",
															"src": "2236:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:10",
														"type": ""
													}
												],
												"src": "2184:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:10",
														"type": ""
													}
												],
												"src": "2310:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:10"
															},
															"nodeType": "YulIf",
															"src": "2528:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:10",
														"type": ""
													}
												],
												"src": "2453:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:10",
														"type": ""
													}
												],
												"src": "2786:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:10",
														"type": ""
													}
												],
												"src": "2882:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:10",
														"type": ""
													}
												],
												"src": "2997:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3325:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:10"
															},
															"nodeType": "YulIf",
															"src": "3289:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3249:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3260:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3272:6:10",
														"type": ""
													}
												],
												"src": "3213:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3600:6:10",
														"type": ""
													}
												],
												"src": "3548:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3721:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3726:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3737:11:10",
														"type": ""
													}
												],
												"src": "3653:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3890:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3900:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3909:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3904:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3969:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3994:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3999:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3990:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4013:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4018:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4009:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4009:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4003:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4003:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3983:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3983:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3983:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3930:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3941:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3943:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3952:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3955:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3948:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3948:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3943:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3923:3:10",
																"statements": []
															},
															"src": "3919:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4052:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4048:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4041:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3872:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3877:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3882:6:10",
														"type": ""
													}
												],
												"src": "3828:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4128:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4138:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4156:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4163:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4111:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4121:6:10",
														"type": ""
													}
												],
												"src": "4080:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4280:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4290:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4304:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4304:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4294:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4352:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4359:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4478:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4485:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4474:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4439:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4439:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4513:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4524:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4529:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4529:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4261:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4268:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4276:3:10",
														"type": ""
													}
												],
												"src": "4188:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4699:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4757:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4742:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4765:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4735:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4791:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4872:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4799:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4673:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4684:4:10",
														"type": ""
													}
												],
												"src": "4571:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4979:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5041:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5058:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5061:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5051:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5148:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5148:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5179:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5182:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5172:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5252:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5274:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5304:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5282:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5270:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5256:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5421:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5423:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5423:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5423:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5364:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5376:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5361:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5361:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5400:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5397:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5397:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5358:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:62:10"
															},
															"nodeType": "YulIf",
															"src": "5355:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5463:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5452:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5228:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5236:4:10",
														"type": ""
													}
												],
												"src": "5199:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5527:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5537:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5547:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5596:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5604:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5576:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5576:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5511:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5520:6:10",
														"type": ""
													}
												],
												"src": "5486:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5703:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5808:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5810:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5810:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5810:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5788:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5777:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:30:10"
															},
															"nodeType": "YulIf",
															"src": "5774:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5840:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5860:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5902:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5914:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5920:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5902:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5687:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5698:4:10",
														"type": ""
													}
												],
												"src": "5621:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6027:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6044:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6037:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5938:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6180:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6190:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6272:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6215:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6215:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6199:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6190:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6289:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6300:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6293:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6322:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6329:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6345:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6356:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6363:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6352:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6352:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6345:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6378:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6408:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6416:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6404:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6404:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6382:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6450:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6464:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6464:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6464:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6445:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:15:10"
															},
															"nodeType": "YulIf",
															"src": "6431:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6638:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6653:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6657:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6721:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6733:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6700:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6700:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6688:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6688:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6688:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6751:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6762:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6767:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6758:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6758:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6751:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6591:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6596:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6588:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6604:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6606:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6617:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6622:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6613:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6613:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6606:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6566:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6568:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6579:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6572:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6562:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6150:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6158:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6166:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6174:5:10",
														"type": ""
													}
												],
												"src": "6078:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6888:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6937:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6939:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6939:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6939:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6916:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6924:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6912:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6912:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6931:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6908:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6908:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:35:10"
															},
															"nodeType": "YulIf",
															"src": "6898:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7029:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7056:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7043:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7033:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7072:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7148:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7156:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7144:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7163:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7171:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7081:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7081:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7072:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6866:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6874:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6882:5:10",
														"type": ""
													}
												],
												"src": "6811:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7276:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7293:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7286:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7187:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7376:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7481:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7483:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7483:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7483:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7453:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7461:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7450:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:30:10"
															},
															"nodeType": "YulIf",
															"src": "7447:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7513:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7543:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7521:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7521:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7513:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7587:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7599:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7605:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7587:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7360:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7371:4:10",
														"type": ""
													}
												],
												"src": "7310:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7687:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7710:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7715:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7720:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7697:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7697:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7697:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7747:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7752:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7736:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7736:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7669:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7674:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7679:6:10",
														"type": ""
													}
												],
												"src": "7623:146:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7858:340:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7868:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7934:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7893:40:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7893:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7877:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7877:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7868:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7958:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7951:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7951:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7981:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7996:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8003:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7985:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8046:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8048:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8048:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8048:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8027:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8032:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8023:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8023:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8020:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:25:10"
															},
															"nodeType": "YulIf",
															"src": "8017:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8175:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8180:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8185:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8138:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8138:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7831:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7836:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7844:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7852:5:10",
														"type": ""
													}
												],
												"src": "7775:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8278:277:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8327:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8329:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8329:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8329:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8306:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8314:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8302:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8302:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8321:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:35:10"
															},
															"nodeType": "YulIf",
															"src": "8288:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8419:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8433:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8423:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8462:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8522:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8518:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8537:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8471:46:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8471:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8462:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8256:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8264:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8272:5:10",
														"type": ""
													}
												],
												"src": "8217:338:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:1316:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8801:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8803:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8803:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8803:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8775:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8784:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8771:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8771:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8796:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8767:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8767:33:10"
															},
															"nodeType": "YulIf",
															"src": "8764:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "8894:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8909:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8923:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8913:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8938:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8973:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8984:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8969:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8969:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8993:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8948:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8948:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8938:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9021:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9036:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9040:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9066:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9101:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9112:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9097:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9097:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9121:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9076:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9076:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9066:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9149:303:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9164:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9195:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9206:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9191:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9191:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9178:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9178:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9168:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9257:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9259:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9259:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9259:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9229:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9237:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9226:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "9223:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9354:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9414:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9425:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9410:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9410:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9434:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9364:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9364:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9354:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9462:303:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9477:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9508:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9519:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9504:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9504:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9491:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9491:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9481:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9570:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9572:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9572:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9572:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9542:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9550:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9539:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9539:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "9536:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9667:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9727:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9738:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9723:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9723:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9747:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9677:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9677:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9667:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9775:288:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9790:47:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9821:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9832:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9817:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9817:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9804:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9804:33:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9794:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9884:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9886:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9886:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9886:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9856:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9864:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9853:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9853:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "9850:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9981:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10025:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10036:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10021:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10021:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10045:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9991:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9991:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9981:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8692:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8703:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8715:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8723:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8731:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8739:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8747:6:10",
														"type": ""
													}
												],
												"src": "8561:1509:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10158:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10263:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10265:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10265:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10265:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10235:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10243:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10232:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10232:30:10"
															},
															"nodeType": "YulIf",
															"src": "10229:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10295:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10307:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10315:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10303:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10303:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10295:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10357:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10369:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10375:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10365:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10365:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10357:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10142:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10153:4:10",
														"type": ""
													}
												],
												"src": "10076:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10512:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10522:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10604:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10547:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10547:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10531:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10531:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10522:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10621:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "10632:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10625:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10654:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10661:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10647:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10647:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10647:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10677:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10688:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10695:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10684:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10684:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "10677:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10710:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10728:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10740:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10748:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "10736:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10736:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10724:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10724:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "10714:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10782:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "10796:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10796:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10796:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10769:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10777:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10766:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10766:15:10"
															},
															"nodeType": "YulIf",
															"src": "10763:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10970:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10985:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "11003:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "10989:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11027:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "11053:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11065:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "11032:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11032:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11020:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11020:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11020:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11083:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11094:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11099:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11090:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11090:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11083:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10923:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10928:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10920:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10920:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10936:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10938:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "10949:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10954:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10945:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10945:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10938:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10898:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10900:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "10911:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "10904:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10894:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10482:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10490:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10498:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10506:5:10",
														"type": ""
													}
												],
												"src": "10410:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11220:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11269:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11271:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11271:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11271:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11248:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11256:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11244:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11244:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11263:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11240:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11240:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11233:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11233:35:10"
															},
															"nodeType": "YulIf",
															"src": "11230:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11361:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11388:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11375:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11375:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11365:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11404:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11480:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11488:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11476:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11495:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11503:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11413:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11404:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11198:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11206:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11214:5:10",
														"type": ""
													}
												],
												"src": "11143:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11652:761:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11698:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11700:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11700:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11700:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11673:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11682:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11669:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11669:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11694:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11665:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11665:32:10"
															},
															"nodeType": "YulIf",
															"src": "11662:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "11791:302:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11806:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11837:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11848:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11833:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11833:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11820:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11820:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11810:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11898:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11900:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11900:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11900:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11870:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11878:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11867:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11867:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "11864:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11995:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12055:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12066:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12051:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12051:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12075:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12005:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12005:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11995:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12103:303:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12118:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12149:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12160:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12145:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12145:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "12132:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12132:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12122:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12211:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "12213:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12213:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12213:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12183:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12191:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12180:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12180:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "12177:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12308:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12368:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12379:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12364:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12364:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12388:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12318:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12318:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12308:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11614:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11625:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11637:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11645:6:10",
														"type": ""
													}
												],
												"src": "11519:894:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12493:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12504:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12520:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12514:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12514:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12504:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12476:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12486:6:10",
														"type": ""
													}
												],
												"src": "12419:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12650:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12667:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12672:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12660:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12660:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12660:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12688:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12707:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12712:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12703:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12688:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12622:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12627:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12638:11:10",
														"type": ""
													}
												],
												"src": "12539:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12801:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12811:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "12819:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12811:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12832:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12844:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12849:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12840:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12840:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "12832:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "12788:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12796:4:10",
														"type": ""
													}
												],
												"src": "12729:132:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12922:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12939:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12962:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12944:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12944:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12932:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12932:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12932:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12910:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12917:3:10",
														"type": ""
													}
												],
												"src": "12867:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13061:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13105:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13113:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13071:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13071:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13126:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13144:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13149:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13140:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13140:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "13126:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13034:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13042:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "13050:10:10",
														"type": ""
													}
												],
												"src": "12981:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13241:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13251:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "13263:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13268:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13259:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13259:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "13251:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "13228:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "13236:4:10",
														"type": ""
													}
												],
												"src": "13166:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13439:608:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13449:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13511:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13463:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13463:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13453:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13526:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13607:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13612:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13533:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13533:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13526:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13628:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13693:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13643:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13643:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "13632:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13708:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "13722:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13712:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13798:224:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13812:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13839:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "13833:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13833:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "13816:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13859:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "13910:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13925:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "13866:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13866:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13859:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13942:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14005:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "13952:52:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13952:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13942:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13760:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13763:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13757:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13757:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13771:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13773:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13782:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13785:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13778:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13778:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13773:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13742:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13744:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13753:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "13748:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13738:284:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14031:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14038:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14031:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13418:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13425:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13434:3:10",
														"type": ""
													}
												],
												"src": "13315:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14201:225:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14211:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14223:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14234:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14219:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14219:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14211:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14258:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14269:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14254:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14254:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14277:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14283:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14273:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14247:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14247:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14247:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14303:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14405:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14414:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14311:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14311:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14303:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14173:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14196:4:10",
														"type": ""
													}
												],
												"src": "14053:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14472:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14526:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14535:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14538:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14528:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14528:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14528:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14495:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14517:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14502:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14502:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14492:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14492:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14485:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14485:40:10"
															},
															"nodeType": "YulIf",
															"src": "14482:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14465:5:10",
														"type": ""
													}
												],
												"src": "14432:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14603:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14613:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14635:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "14622:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14622:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14613:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14675:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "14651:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14651:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14651:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14581:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14589:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14597:5:10",
														"type": ""
													}
												],
												"src": "14554:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14773:388:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14819:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14821:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14821:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14821:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14794:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14803:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14790:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14790:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14815:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14786:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14786:32:10"
															},
															"nodeType": "YulIf",
															"src": "14783:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "14912:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14927:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14941:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14931:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14956:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14991:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15002:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14987:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14987:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15011:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14966:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14966:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14956:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15039:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15054:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15068:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15058:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15084:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15116:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15127:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15112:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15112:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15136:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "15094:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15094:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15084:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14735:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14746:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14758:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14766:6:10",
														"type": ""
													}
												],
												"src": "14693:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15250:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15296:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15298:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15298:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15298:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15271:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15280:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15267:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15267:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15292:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15263:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15263:32:10"
															},
															"nodeType": "YulIf",
															"src": "15260:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "15389:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15404:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15418:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15408:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15433:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15468:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15479:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15464:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15464:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15488:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15443:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15443:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15433:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15516:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15531:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15545:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15535:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15561:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15596:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15607:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15592:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15592:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15616:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15571:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15571:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "15561:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15212:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15223:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15235:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15243:6:10",
														"type": ""
													}
												],
												"src": "15167:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15790:946:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15839:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15839:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15811:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15820:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15807:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15832:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15803:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15803:33:10"
															},
															"nodeType": "YulIf",
															"src": "15800:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "15930:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15945:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15959:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15974:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16009:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16005:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15984:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15984:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16057:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16072:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16086:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16076:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16137:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16133:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16112:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16102:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16185:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16200:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16214:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16204:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16230:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16265:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16276:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16261:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16261:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16285:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16240:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16240:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16230:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16313:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16328:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16342:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16332:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16358:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16393:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16404:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16389:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16389:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16413:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "16368:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16368:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "16358:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16441:288:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16456:47:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16487:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16498:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16483:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16483:19:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16470:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16470:33:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16460:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16550:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16552:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16552:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16552:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16522:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16530:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16519:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16519:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "16516:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16647:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16691:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16702:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16687:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16687:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16711:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16657:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16657:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "16647:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15728:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15739:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15751:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15759:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15767:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15775:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15783:6:10",
														"type": ""
													}
												],
												"src": "15647:1089:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16848:124:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16870:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16878:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16866:14:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16882:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16859:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16859:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16859:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16938:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16946:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16934:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16934:15:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16951:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16927:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16927:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16927:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16840:6:10",
														"type": ""
													}
												],
												"src": "16742:230:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17124:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17134:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17200:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17205:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17141:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17141:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17134:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17306:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "17217:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17217:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17217:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17319:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17330:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17335:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17326:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17326:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17319:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17112:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17120:3:10",
														"type": ""
													}
												],
												"src": "16978:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17521:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17531:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17543:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17554:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17539:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17539:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17531:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17578:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17589:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17574:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17574:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17597:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17603:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17593:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17593:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17567:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17567:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17567:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17623:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17757:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17631:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17631:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17623:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17501:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17516:4:10",
														"type": ""
													}
												],
												"src": "17350:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17803:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17820:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17823:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17813:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17813:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17813:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17917:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17920:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17910:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17910:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17910:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17941:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17944:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17934:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17934:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17934:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "17775:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18012:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18022:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18036:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18042:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18032:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18032:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18022:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18053:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18083:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18089:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18079:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18079:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "18057:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18130:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18144:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "18158:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18166:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "18154:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18154:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18144:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18110:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18103:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18103:26:10"
															},
															"nodeType": "YulIf",
															"src": "18100:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18233:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "18247:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18247:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18247:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18197:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18220:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18228:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18217:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18217:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18194:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18194:38:10"
															},
															"nodeType": "YulIf",
															"src": "18191:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17996:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18005:6:10",
														"type": ""
													}
												],
												"src": "17961:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18393:131:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18415:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18423:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18411:14:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18427:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18404:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18404:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18404:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18483:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18491:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18479:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18479:15:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18496:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18472:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18472:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18472:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18385:6:10",
														"type": ""
													}
												],
												"src": "18287:237:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18676:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18686:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18752:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18757:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18693:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18693:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18686:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18858:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																	"nodeType": "YulIdentifier",
																	"src": "18769:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18769:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18769:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18871:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18882:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18887:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18878:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18878:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18871:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18664:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18672:3:10",
														"type": ""
													}
												],
												"src": "18530:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19073:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19083:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19095:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19106:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19091:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19091:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19083:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19130:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19141:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19126:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19126:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19149:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19155:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19145:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19145:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19119:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19119:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19119:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19175:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19309:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19183:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19183:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19175:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19053:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19068:4:10",
														"type": ""
													}
												],
												"src": "18902:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19433:122:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19455:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19463:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19451:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19451:14:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19467:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19444:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19444:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19444:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19523:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19531:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19519:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19519:15:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19536:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19512:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19512:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19512:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19425:6:10",
														"type": ""
													}
												],
												"src": "19327:228:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19707:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19717:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19783:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19788:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19724:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19724:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19717:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19889:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "19800:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19800:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19800:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19902:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19913:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19918:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19909:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19909:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19902:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19695:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19703:3:10",
														"type": ""
													}
												],
												"src": "19561:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20104:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20114:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20126:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20137:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20122:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20122:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20114:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20161:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20172:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20157:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20157:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20180:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20186:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20176:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20176:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20150:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20150:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20150:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20206:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20340:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20214:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20214:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20206:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20084:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20099:4:10",
														"type": ""
													}
												],
												"src": "19933:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20386:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20403:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20406:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20396:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20396:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20396:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20500:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20503:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20493:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20493:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20493:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20524:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20527:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20517:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20517:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20517:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20358:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20572:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20589:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20592:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20582:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20582:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20582:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20686:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20689:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20679:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20679:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20710:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20713:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20703:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20703:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20703:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20544:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20773:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20783:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20810:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20792:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20792:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20783:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20906:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20908:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20908:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20908:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20831:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20838:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20828:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20828:77:10"
															},
															"nodeType": "YulIf",
															"src": "20825:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20937:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20948:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20955:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20944:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20944:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20937:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20759:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20769:3:10",
														"type": ""
													}
												],
												"src": "20730:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21075:122:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21097:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21105:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21093:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21093:14:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21109:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21086:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21086:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21086:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21165:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21173:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21161:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21161:15:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21178:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21154:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21154:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21067:6:10",
														"type": ""
													}
												],
												"src": "20969:228:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21349:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21359:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21425:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21430:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21366:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21366:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21359:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21531:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "21442:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21442:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21442:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21544:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21555:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21560:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21551:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21551:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21544:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21337:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21345:3:10",
														"type": ""
													}
												],
												"src": "21203:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21746:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21756:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21768:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21779:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21764:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21764:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21756:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21803:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21814:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21799:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21799:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21822:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21828:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21818:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21818:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21792:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21792:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21792:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21848:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21982:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21856:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21856:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21848:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21726:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21741:4:10",
														"type": ""
													}
												],
												"src": "21575:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22106:121:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22128:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22136:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22124:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22124:14:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22140:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22117:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22117:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22117:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22196:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22204:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22192:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22192:15:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22209:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22185:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22185:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22185:35:10"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22098:6:10",
														"type": ""
													}
												],
												"src": "22000:227:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22379:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22389:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22455:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22460:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22396:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22396:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22389:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22561:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "22472:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22472:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22472:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22574:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22585:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22590:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22581:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22581:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22574:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22367:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22375:3:10",
														"type": ""
													}
												],
												"src": "22233:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22776:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22786:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22798:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22809:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22794:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22794:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22786:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22833:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22844:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22829:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22829:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22852:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22858:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22848:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22848:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22822:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22822:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22822:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22878:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23012:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22886:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22886:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22878:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22756:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22771:4:10",
														"type": ""
													}
												],
												"src": "22605:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23136:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23158:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23166:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23154:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23154:14:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23170:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23147:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23147:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23147:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23226:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23234:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23222:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23222:15:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23239:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23215:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23215:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23215:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23128:6:10",
														"type": ""
													}
												],
												"src": "23030:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23406:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23416:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23482:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23487:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23423:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23423:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23416:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23588:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "23499:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23499:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23499:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23601:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23612:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23617:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23608:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23608:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23601:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23394:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23402:3:10",
														"type": ""
													}
												],
												"src": "23260:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23803:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23813:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23825:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23836:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23821:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23821:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23813:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23860:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23871:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23856:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23856:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23879:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23885:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23875:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23875:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23849:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23849:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23849:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23905:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24039:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23913:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23913:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23905:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23783:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23798:4:10",
														"type": ""
													}
												],
												"src": "23632:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24163:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24185:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24193:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24181:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24181:14:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24197:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24174:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24174:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24174:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24253:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24261:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24249:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24249:15:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24266:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24242:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24242:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24242:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24155:6:10",
														"type": ""
													}
												],
												"src": "24057:229:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24438:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24448:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24514:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24519:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24455:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24455:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24448:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24620:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "24531:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24531:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24531:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24633:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24644:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24649:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24640:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24640:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24633:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24426:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24434:3:10",
														"type": ""
													}
												],
												"src": "24292:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24835:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24845:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24857:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24868:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24853:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24853:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24845:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24892:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24903:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24888:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24888:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24911:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24917:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24907:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24907:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24881:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24881:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24881:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24937:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25071:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24945:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24945:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24937:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24815:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24830:4:10",
														"type": ""
													}
												],
												"src": "24664:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25133:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25143:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25166:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25148:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25148:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25143:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25177:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25200:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25182:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25182:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25177:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25211:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25222:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25225:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25218:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25218:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25211:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25251:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25253:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25253:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25253:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25243:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "25246:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25240:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25240:10:10"
															},
															"nodeType": "YulIf",
															"src": "25237:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25120:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25123:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25129:3:10",
														"type": ""
													}
												],
												"src": "25089:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25512:408:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25522:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25534:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25545:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25530:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25530:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25522:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25569:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25580:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25565:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25565:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25588:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25594:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25584:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25584:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25558:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25558:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25558:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25614:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25716:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25725:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25622:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25622:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25614:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25751:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25762:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25747:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25747:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25771:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25777:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25767:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25740:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25740:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25740:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25797:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25899:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25908:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25805:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25805:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25797:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25476:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25488:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25496:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25507:4:10",
														"type": ""
													}
												],
												"src": "25286:634:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26032:122:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26054:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26062:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26050:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26050:14:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26066:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26043:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26043:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26043:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26122:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26130:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26118:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26118:15:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26135:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26111:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26111:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26024:6:10",
														"type": ""
													}
												],
												"src": "25926:228:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26306:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26316:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26382:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26387:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26323:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26323:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26316:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26488:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "26399:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26399:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26399:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26501:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26512:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26517:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26508:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26508:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26501:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26294:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26302:3:10",
														"type": ""
													}
												],
												"src": "26160:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26703:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26713:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26725:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26736:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26721:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26721:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26713:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26760:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26771:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26756:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26779:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26785:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26775:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26775:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26749:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26749:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26805:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26939:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26813:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26813:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26805:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26683:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26698:4:10",
														"type": ""
													}
												],
												"src": "26532:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27083:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27093:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27105:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27116:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27101:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27101:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27093:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27173:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27186:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27197:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27182:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27182:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27129:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27129:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27129:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27254:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27267:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27278:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27263:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27263:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27210:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27210:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27210:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27047:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27059:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27067:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27078:4:10",
														"type": ""
													}
												],
												"src": "26957:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27360:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27377:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27400:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "27382:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27382:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27370:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27370:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27370:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27348:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27355:3:10",
														"type": ""
													}
												],
												"src": "27295:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27477:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27488:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27504:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27498:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27498:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "27488:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27460:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27470:6:10",
														"type": ""
													}
												],
												"src": "27419:98:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27618:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27635:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27640:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27628:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27628:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27628:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27656:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27675:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27680:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27671:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27671:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "27656:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27590:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27595:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "27606:11:10",
														"type": ""
													}
												],
												"src": "27523:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27787:283:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27797:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27843:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "27811:31:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27811:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "27801:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27858:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27923:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27928:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27865:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27865:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27858:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27983:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27990:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27979:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27979:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27997:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28002:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "27944:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27944:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27944:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28018:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28029:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28056:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "28034:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28034:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28025:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28025:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28018:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27768:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27775:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27783:3:10",
														"type": ""
													}
												],
												"src": "27697:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28404:725:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28414:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28426:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28437:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28422:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28422:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28414:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28495:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28508:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28519:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28504:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28451:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28451:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28451:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28576:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28589:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28600:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28585:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28532:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28532:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28532:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28625:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28636:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28621:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28621:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28645:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28651:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28641:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28641:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28614:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28614:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28614:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28671:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28773:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28782:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28679:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28679:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28671:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28808:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28819:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28804:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28804:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28828:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28834:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28824:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28797:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28797:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28797:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28854:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "28956:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28965:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28862:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28862:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28854:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28991:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29002:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28987:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28987:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29012:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29018:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29008:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29008:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28980:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28980:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28980:49:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29038:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "29108:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29117:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29046:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29046:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29038:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28344:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "28356:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "28364:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28372:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28380:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28388:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28399:4:10",
														"type": ""
													}
												],
												"src": "28076:1053:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29197:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29207:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29222:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29216:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29216:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29207:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29264:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "29238:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29238:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29238:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "29175:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29183:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29191:5:10",
														"type": ""
													}
												],
												"src": "29135:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29358:273:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29404:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "29406:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29406:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29406:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29379:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29388:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29375:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29400:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "29371:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29371:32:10"
															},
															"nodeType": "YulIf",
															"src": "29368:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "29497:127:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "29512:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29526:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "29516:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "29541:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "29586:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29597:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29582:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29582:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29606:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "29551:30:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29551:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "29541:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29328:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "29339:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29351:6:10",
														"type": ""
													}
												],
												"src": "29282:349:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29690:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29700:36:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29725:3:10",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29730:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "29721:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29721:15:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "29700:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29671:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "29681:8:10",
														"type": ""
													}
												],
												"src": "29637:106:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29788:144:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29825:101:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29854:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29857:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29860:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "29839:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29839:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29839:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "29875:41:10",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29913:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "29907:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29907:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "29882:24:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29882:34:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "29875:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "29804:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29804:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29822:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29801:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29801:23:10"
															},
															"nodeType": "YulIf",
															"src": "29798:128:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "29784:3:10",
														"type": ""
													}
												],
												"src": "29749:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29981:668:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30021:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30023:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "29997:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29997:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30015:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "29994:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29994:26:10"
															},
															"nodeType": "YulIf",
															"src": "29991:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30040:32:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "30052:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30052:20:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "30044:4:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30096:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30102:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30109:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30109:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30127:1:10",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30105:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30105:24:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "30081:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30081:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30081:49:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30140:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30160:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30154:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30154:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "30144:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30291:29:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30305:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30196:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30204:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30193:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30193:30:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30244:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30252:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30240:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30240:17:10"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30259:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30259:16:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30237:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30237:39:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "30177:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30177:113:10"
															},
															"nodeType": "YulIf",
															"src": "30174:146:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30330:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30345:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30351:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30341:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30341:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "30334:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30367:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "30387:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30381:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30381:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "30371:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30434:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30436:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30406:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30414:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30403:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30403:30:10"
															},
															"nodeType": "YulIf",
															"src": "30400:43:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30453:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "30472:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30477:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30468:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30468:14:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30484:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30464:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30464:27:10"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "30457:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30548:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30550:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "30506:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "30515:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "30525:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30525:16:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30543:1:10",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "30521:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30521:24:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30511:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30511:35:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30503:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30503:44:10"
															},
															"nodeType": "YulIf",
															"src": "30500:57:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30587:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30597:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30609:4:10",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "30615:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30605:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30605:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30593:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30593:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "30567:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30567:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30567:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30633:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "30640:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "30633:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "29977:3:10",
														"type": ""
													}
												],
												"src": "29938:711:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30761:133:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30783:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30791:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30779:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30779:14:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30795:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30772:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30772:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30772:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30851:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30859:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30847:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30847:15:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30864:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30840:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30840:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30840:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30753:6:10",
														"type": ""
													}
												],
												"src": "30655:239:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31046:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31056:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31122:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31127:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31063:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31063:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31056:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31228:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "31139:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31139:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31139:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31241:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31252:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31257:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31248:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31248:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31241:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31034:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31042:3:10",
														"type": ""
													}
												],
												"src": "30900:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31443:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31453:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31465:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31476:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31461:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31461:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31453:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31500:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31511:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31496:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31496:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31519:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31525:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31515:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31515:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31489:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31489:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31489:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31545:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31679:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31553:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31553:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31545:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31423:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31438:4:10",
														"type": ""
													}
												],
												"src": "31272:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31803:121:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31825:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31833:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31821:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31821:14:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31837:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31814:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31814:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31814:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31893:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31901:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31889:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31889:15:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31906:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31882:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31882:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31882:35:10"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31795:6:10",
														"type": ""
													}
												],
												"src": "31697:227:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32076:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32086:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32152:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32157:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32093:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32093:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32086:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32258:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "32169:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32169:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32169:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32271:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32282:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32287:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32278:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32278:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32271:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32064:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32072:3:10",
														"type": ""
													}
												],
												"src": "31930:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32473:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32483:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32495:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32506:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32491:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32491:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32483:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32530:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32541:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32526:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32526:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32549:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32555:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32545:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32519:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32519:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32519:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32575:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32709:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32583:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32583:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32575:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32453:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32468:4:10",
														"type": ""
													}
												],
												"src": "32302:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32955:523:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32965:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32977:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32988:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32973:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32973:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32965:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "33046:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33059:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33070:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33055:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33055:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33002:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33002:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33002:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "33127:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33140:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33151:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33136:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33136:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33083:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33083:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33083:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "33209:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33222:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33233:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33218:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33218:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33165:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33165:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33165:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "33291:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33304:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33315:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33300:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33300:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33247:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33247:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33247:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33340:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33351:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33336:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33336:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33361:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33367:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33357:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33357:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33329:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33329:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33329:49:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33387:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "33457:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33466:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33395:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33395:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33387:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32895:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "32907:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "32915:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "32923:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "32931:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "32939:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32950:4:10",
														"type": ""
													}
												],
												"src": "32727:751:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a191906113b0565b6101d0565b6040516100b391906113ff565b60405180910390f35b6100d660048036038101906100d19190611472565b610298565b6040516100e391906114ba565b60405180910390f35b610106600480360381019061010191906114d5565b61037a565b6040516101139190611592565b60405180910390f35b610136600480360381019061013191906117b1565b61040e565b005b610152600480360381019061014d9190611943565b6104af565b60405161015f9190611a79565b60405180910390f35b610182600480360381019061017d9190611ac7565b6105c8565b005b61019e60048036038101906101999190611b07565b6105de565b6040516101ab91906114ba565b60405180910390f35b6101ce60048036038101906101c99190611b47565b610672565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610240576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023790611c50565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036357507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610373575061037282610713565b5b9050919050565b60606002805461038990611c9f565b80601f01602080910402602001604051908101604052809291908181526020018280546103b590611c9f565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b50505050509050919050565b61041661077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045c575061045b8561045661077d565b6105de565b5b61049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049290611d42565b60405180910390fd5b6104a88585858585610785565b5050505050565b606081518351146104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec90611dd4565b60405180910390fd5b6000835167ffffffffffffffff811115610512576105116115b9565b5b6040519080825280602002602001820160405280156105405781602001602082028036833780820191505090505b50905060005b84518110156105bd5761058d85828151811061056557610564611df4565b5b60200260200101518583815181106105805761057f611df4565b5b60200260200101516101d0565b8282815181106105a05761059f611df4565b5b602002602001018181525050806105b690611e52565b9050610546565b508091505092915050565b6105da6105d361077d565b8383610aa6565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61067a61077d565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614806106c057506106bf856106ba61077d565b6105de565b5b6106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690611f0c565b60405180910390fd5b61070c8585858585610c12565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b81518351146107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c090611f9e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90612030565b60405180910390fd5b600061084261077d565b9050610852818787878787610ead565b60005b8451811015610a0357600085828151811061087357610872611df4565b5b60200260200101519050600085838151811061089257610891611df4565b5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a906120c2565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109e891906120e2565b92505081905550505050806109fc90611e52565b9050610855565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a7a929190612116565b60405180910390a4610a90818787878787610eb5565b610a9e818787878787610ebd565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0b906121bf565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0591906114ba565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7890612030565b60405180910390fd5b6000610c8b61077d565b90506000610c9885611094565b90506000610ca585611094565b9050610cb5838989858589610ead565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d43906120c2565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e0191906120e2565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e7e9291906121df565b60405180910390a4610e94848a8a86868a610eb5565b610ea2848a8a8a8a8a61110e565b505050505050505050565b505050505050565b505050505050565b610edc8473ffffffffffffffffffffffffffffffffffffffff166112e5565b1561108c578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610f2295949392919061226c565b6020604051808303816000875af1925050508015610f5e57506040513d601f19601f82011682018060405250810190610f5b91906122e9565b60015b61100357610f6a612323565b806308c379a003610fc65750610f7e612345565b80610f895750610fc8565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbd9190611592565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffa90612447565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461108a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611081906124d9565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156110b3576110b26115b9565b5b6040519080825280602002602001820160405280156110e15781602001602082028036833780820191505090505b50905082816000815181106110f9576110f8611df4565b5b60200260200101818152505080915050919050565b61112d8473ffffffffffffffffffffffffffffffffffffffff166112e5565b156112dd578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016111739594939291906124f9565b6020604051808303816000875af19250505080156111af57506040513d601f19601f820116820180604052508101906111ac91906122e9565b60015b611254576111bb612323565b806308c379a00361121757506111cf612345565b806111da5750611219565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e9190611592565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b90612447565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d2906124d9565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113478261131c565b9050919050565b6113578161133c565b811461136257600080fd5b50565b6000813590506113748161134e565b92915050565b6000819050919050565b61138d8161137a565b811461139857600080fd5b50565b6000813590506113aa81611384565b92915050565b600080604083850312156113c7576113c6611312565b5b60006113d585828601611365565b92505060206113e68582860161139b565b9150509250929050565b6113f98161137a565b82525050565b600060208201905061141460008301846113f0565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61144f8161141a565b811461145a57600080fd5b50565b60008135905061146c81611446565b92915050565b60006020828403121561148857611487611312565b5b60006114968482850161145d565b91505092915050565b60008115159050919050565b6114b48161149f565b82525050565b60006020820190506114cf60008301846114ab565b92915050565b6000602082840312156114eb576114ea611312565b5b60006114f98482850161139b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561153c578082015181840152602081019050611521565b60008484015250505050565b6000601f19601f8301169050919050565b600061156482611502565b61156e818561150d565b935061157e81856020860161151e565b61158781611548565b840191505092915050565b600060208201905081810360008301526115ac8184611559565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115f182611548565b810181811067ffffffffffffffff821117156116105761160f6115b9565b5b80604052505050565b6000611623611308565b905061162f82826115e8565b919050565b600067ffffffffffffffff82111561164f5761164e6115b9565b5b602082029050602081019050919050565b600080fd5b600061167861167384611634565b611619565b9050808382526020820190506020840283018581111561169b5761169a611660565b5b835b818110156116c457806116b0888261139b565b84526020840193505060208101905061169d565b5050509392505050565b600082601f8301126116e3576116e26115b4565b5b81356116f3848260208601611665565b91505092915050565b600080fd5b600067ffffffffffffffff82111561171c5761171b6115b9565b5b61172582611548565b9050602081019050919050565b82818337600083830152505050565b600061175461174f84611701565b611619565b9050828152602081018484840111156117705761176f6116fc565b5b61177b848285611732565b509392505050565b600082601f830112611798576117976115b4565b5b81356117a8848260208601611741565b91505092915050565b600080600080600060a086880312156117cd576117cc611312565b5b60006117db88828901611365565b95505060206117ec88828901611365565b945050604086013567ffffffffffffffff81111561180d5761180c611317565b5b611819888289016116ce565b935050606086013567ffffffffffffffff81111561183a57611839611317565b5b611846888289016116ce565b925050608086013567ffffffffffffffff81111561186757611866611317565b5b61187388828901611783565b9150509295509295909350565b600067ffffffffffffffff82111561189b5761189a6115b9565b5b602082029050602081019050919050565b60006118bf6118ba84611880565b611619565b905080838252602082019050602084028301858111156118e2576118e1611660565b5b835b8181101561190b57806118f78882611365565b8452602084019350506020810190506118e4565b5050509392505050565b600082601f83011261192a576119296115b4565b5b813561193a8482602086016118ac565b91505092915050565b6000806040838503121561195a57611959611312565b5b600083013567ffffffffffffffff81111561197857611977611317565b5b61198485828601611915565b925050602083013567ffffffffffffffff8111156119a5576119a4611317565b5b6119b1858286016116ce565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119f08161137a565b82525050565b6000611a0283836119e7565b60208301905092915050565b6000602082019050919050565b6000611a26826119bb565b611a3081856119c6565b9350611a3b836119d7565b8060005b83811015611a6c578151611a5388826119f6565b9750611a5e83611a0e565b925050600181019050611a3f565b5085935050505092915050565b60006020820190508181036000830152611a938184611a1b565b905092915050565b611aa48161149f565b8114611aaf57600080fd5b50565b600081359050611ac181611a9b565b92915050565b60008060408385031215611ade57611add611312565b5b6000611aec85828601611365565b9250506020611afd85828601611ab2565b9150509250929050565b60008060408385031215611b1e57611b1d611312565b5b6000611b2c85828601611365565b9250506020611b3d85828601611365565b9150509250929050565b600080600080600060a08688031215611b6357611b62611312565b5b6000611b7188828901611365565b9550506020611b8288828901611365565b9450506040611b938882890161139b565b9350506060611ba48882890161139b565b925050608086013567ffffffffffffffff811115611bc557611bc4611317565b5b611bd188828901611783565b9150509295509295909350565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b6000611c3a602b8361150d565b9150611c4582611bde565b604082019050919050565b60006020820190508181036000830152611c6981611c2d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cb757607f821691505b602082108103611cca57611cc9611c70565b5b50919050565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b6000611d2c60328361150d565b9150611d3782611cd0565b604082019050919050565b60006020820190508181036000830152611d5b81611d1f565b9050919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611dbe60298361150d565b9150611dc982611d62565b604082019050919050565b60006020820190508181036000830152611ded81611db1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e5d8261137a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e8f57611e8e611e23565b5b600182019050919050565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b6000611ef660298361150d565b9150611f0182611e9a565b604082019050919050565b60006020820190508181036000830152611f2581611ee9565b9050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611f8860288361150d565b9150611f9382611f2c565b604082019050919050565b60006020820190508181036000830152611fb781611f7b565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061201a60258361150d565b915061202582611fbe565b604082019050919050565b600060208201905081810360008301526120498161200d565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b60006120ac602a8361150d565b91506120b782612050565b604082019050919050565b600060208201905081810360008301526120db8161209f565b9050919050565b60006120ed8261137a565b91506120f88361137a565b92508282019050808211156121105761210f611e23565b5b92915050565b600060408201905081810360008301526121308185611a1b565b905081810360208301526121448184611a1b565b90509392505050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b60006121a960298361150d565b91506121b48261214d565b604082019050919050565b600060208201905081810360008301526121d88161219c565b9050919050565b60006040820190506121f460008301856113f0565b61220160208301846113f0565b9392505050565b6122118161133c565b82525050565b600081519050919050565b600082825260208201905092915050565b600061223e82612217565b6122488185612222565b935061225881856020860161151e565b61226181611548565b840191505092915050565b600060a0820190506122816000830188612208565b61228e6020830187612208565b81810360408301526122a08186611a1b565b905081810360608301526122b48185611a1b565b905081810360808301526122c88184612233565b90509695505050505050565b6000815190506122e381611446565b92915050565b6000602082840312156122ff576122fe611312565b5b600061230d848285016122d4565b91505092915050565b60008160e01c9050919050565b600060033d11156123425760046000803e61233f600051612316565b90505b90565b600060443d106123d257612357611308565b60043d036004823e80513d602482011167ffffffffffffffff8211171561237f5750506123d2565b808201805167ffffffffffffffff81111561239d57505050506123d2565b80602083010160043d0385018111156123ba5750505050506123d2565b6123c9826020018501866115e8565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061243160348361150d565b915061243c826123d5565b604082019050919050565b6000602082019050818103600083015261246081612424565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b60006124c360288361150d565b91506124ce82612467565b604082019050919050565b600060208201905081810360008301526124f2816124b6565b9050919050565b600060a08201905061250e6000830188612208565b61251b6020830187612208565b61252860408301866113f0565b61253560608301856113f0565b81810360808301526125478184612233565b9050969550505050505056fea26469706673582212205cce5752241f7c260218810d61c12cf3a512a315bde05694555830577c9ac36c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1943 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH2 0x672 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x237 SWAP1 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x363 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x373 JUMPI POP PUSH2 0x372 DUP3 PUSH2 0x713 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x402 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x402 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45C JUMPI POP PUSH2 0x45B DUP6 PUSH2 0x456 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x492 SWAP1 PUSH2 0x1D42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A8 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x785 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EC SWAP1 PUSH2 0x1DD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x540 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A0 JUMPI PUSH2 0x59F PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x5B6 SWAP1 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP PUSH2 0x546 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5D3 PUSH2 0x77D JUMP JUMPDEST DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67A PUSH2 0x77D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x6C0 JUMPI POP PUSH2 0x6BF DUP6 PUSH2 0x6BA PUSH2 0x77D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST JUMPDEST PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x1F0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC12 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C0 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82F SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x842 PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH2 0x852 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA03 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI PUSH2 0x872 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FC SWAP1 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP PUSH2 0x855 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA7A SWAP3 SWAP2 SWAP1 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA90 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xA9E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0B SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP1 PUSH2 0x2030 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH2 0x77D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC98 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCA5 DUP6 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP PUSH2 0xCB5 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD43 SWAP1 PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xE7E SWAP3 SWAP2 SWAP1 PUSH2 0x21DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE94 DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xEB5 JUMP JUMPDEST PUSH2 0xEA2 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x110E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEDC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x108C JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF5B SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1003 JUMPI PUSH2 0xF6A PUSH2 0x2323 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xFC6 JUMPI POP PUSH2 0xF7E PUSH2 0x2345 JUMP JUMPDEST DUP1 PUSH2 0xF89 JUMPI POP PUSH2 0xFC8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFA SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10E1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0x1DF4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112D DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12E5 JUMP JUMPDEST ISZERO PUSH2 0x12DD JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1173 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11AF JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11AC SWAP2 SWAP1 PUSH2 0x22E9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1254 JUMPI PUSH2 0x11BB PUSH2 0x2323 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1217 JUMPI POP PUSH2 0x11CF PUSH2 0x2345 JUMP JUMPDEST DUP1 PUSH2 0x11DA JUMPI POP PUSH2 0x1219 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP1 PUSH2 0x2447 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D2 SWAP1 PUSH2 0x24D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1347 DUP3 PUSH2 0x131C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1357 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP2 EQ PUSH2 0x1362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1374 DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x138D DUP2 PUSH2 0x137A JUMP JUMPDEST DUP2 EQ PUSH2 0x1398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13AA DUP2 PUSH2 0x1384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13E6 DUP6 DUP3 DUP7 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1414 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144F DUP2 PUSH2 0x141A JUMP JUMPDEST DUP2 EQ PUSH2 0x145A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1496 DUP5 DUP3 DUP6 ADD PUSH2 0x145D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14EB JUMPI PUSH2 0x14EA PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14F9 DUP5 DUP3 DUP6 ADD PUSH2 0x139B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x153C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1564 DUP3 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x156E DUP2 DUP6 PUSH2 0x150D JUMP JUMPDEST SWAP4 POP PUSH2 0x157E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x1587 DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AC DUP2 DUP5 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x15F1 DUP3 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1610 JUMPI PUSH2 0x160F PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1623 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP PUSH2 0x162F DUP3 DUP3 PUSH2 0x15E8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x164F JUMPI PUSH2 0x164E PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1678 PUSH2 0x1673 DUP5 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16C4 JUMPI DUP1 PUSH2 0x16B0 DUP9 DUP3 PUSH2 0x139B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x169D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16E3 JUMPI PUSH2 0x16E2 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x16F3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1665 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x171C JUMPI PUSH2 0x171B PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH2 0x1725 DUP3 PUSH2 0x1548 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1754 PUSH2 0x174F DUP5 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1770 JUMPI PUSH2 0x176F PUSH2 0x16FC JUMP JUMPDEST JUMPDEST PUSH2 0x177B DUP5 DUP3 DUP6 PUSH2 0x1732 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17A8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x17EC DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x180D JUMPI PUSH2 0x180C PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1819 DUP9 DUP3 DUP10 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x183A JUMPI PUSH2 0x1839 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1846 DUP9 DUP3 DUP10 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1867 JUMPI PUSH2 0x1866 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1873 DUP9 DUP3 DUP10 ADD PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x15B9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BF PUSH2 0x18BA DUP5 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x18E2 JUMPI PUSH2 0x18E1 PUSH2 0x1660 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x190B JUMPI DUP1 PUSH2 0x18F7 DUP9 DUP3 PUSH2 0x1365 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18E4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x192A JUMPI PUSH2 0x1929 PUSH2 0x15B4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x193A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x195A JUMPI PUSH2 0x1959 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1978 JUMPI PUSH2 0x1977 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1984 DUP6 DUP3 DUP7 ADD PUSH2 0x1915 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19A5 JUMPI PUSH2 0x19A4 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x19B1 DUP6 DUP3 DUP7 ADD PUSH2 0x16CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19F0 DUP2 PUSH2 0x137A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A02 DUP4 DUP4 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A26 DUP3 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x1A30 DUP2 DUP6 PUSH2 0x19C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A3B DUP4 PUSH2 0x19D7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A6C JUMPI DUP2 MLOAD PUSH2 0x1A53 DUP9 DUP3 PUSH2 0x19F6 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A5E DUP4 PUSH2 0x1A0E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A3F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A93 DUP2 DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AA4 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP2 EQ PUSH2 0x1AAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC1 DUP2 PUSH2 0x1A9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ADE JUMPI PUSH2 0x1ADD PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEC DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AFD DUP6 DUP3 DUP7 ADD PUSH2 0x1AB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH2 0x1B1D PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2C DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B3D DUP6 DUP3 DUP7 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1B63 JUMPI PUSH2 0x1B62 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B71 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1B82 DUP9 DUP3 DUP10 ADD PUSH2 0x1365 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1B93 DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1BA4 DUP9 DUP3 DUP10 ADD PUSH2 0x139B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x1BC4 PUSH2 0x1317 JUMP JUMPDEST JUMPDEST PUSH2 0x1BD1 DUP9 DUP3 DUP10 ADD PUSH2 0x1783 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3A PUSH1 0x2B DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1C45 DUP3 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C69 DUP2 PUSH2 0x1C2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CB7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x1C70 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2C PUSH1 0x32 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1D37 DUP3 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D5B DUP2 PUSH2 0x1D1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBE PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC9 DUP3 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DED DUP2 PUSH2 0x1DB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E5D DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E8F JUMPI PUSH2 0x1E8E PUSH2 0x1E23 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF6 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F01 DUP3 PUSH2 0x1E9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F25 DUP2 PUSH2 0x1EE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F88 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F93 DUP3 PUSH2 0x1F2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB7 DUP2 PUSH2 0x1F7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201A PUSH1 0x25 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x2025 DUP3 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2049 DUP2 PUSH2 0x200D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AC PUSH1 0x2A DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x20B7 DUP3 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20DB DUP2 PUSH2 0x209F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20ED DUP3 PUSH2 0x137A JUMP JUMPDEST SWAP2 POP PUSH2 0x20F8 DUP4 PUSH2 0x137A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2110 JUMPI PUSH2 0x210F PUSH2 0x1E23 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2130 DUP2 DUP6 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2144 DUP2 DUP5 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21A9 PUSH1 0x29 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x21B4 DUP3 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21D8 DUP2 PUSH2 0x219C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21F4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x2201 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2211 DUP2 PUSH2 0x133C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x223E DUP3 PUSH2 0x2217 JUMP JUMPDEST PUSH2 0x2248 DUP2 DUP6 PUSH2 0x2222 JUMP JUMPDEST SWAP4 POP PUSH2 0x2258 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x151E JUMP JUMPDEST PUSH2 0x2261 DUP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2281 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x228E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2208 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x22A0 DUP2 DUP7 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x22B4 DUP2 DUP6 PUSH2 0x1A1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x22C8 DUP2 DUP5 PUSH2 0x2233 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22E3 DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22FF JUMPI PUSH2 0x22FE PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x230D DUP5 DUP3 DUP6 ADD PUSH2 0x22D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2342 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x233F PUSH1 0x0 MLOAD PUSH2 0x2316 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT PUSH2 0x23D2 JUMPI PUSH2 0x2357 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x237F JUMPI POP POP PUSH2 0x23D2 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x239D JUMPI POP POP POP POP PUSH2 0x23D2 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x23BA JUMPI POP POP POP POP POP PUSH2 0x23D2 JUMP JUMPDEST PUSH2 0x23C9 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x15E8 JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2431 PUSH1 0x34 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x243C DUP3 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2460 DUP2 PUSH2 0x2424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C3 PUSH1 0x28 DUP4 PUSH2 0x150D JUMP JUMPDEST SWAP2 POP PUSH2 0x24CE DUP3 PUSH2 0x2467 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24F2 DUP2 PUSH2 0x24B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x250E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x251B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2208 JUMP JUMPDEST PUSH2 0x2528 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x2535 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x13F0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2547 DUP2 DUP5 PUSH2 0x2233 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xCE JUMPI MSTORE 0x24 0x1F PUSH29 0x260218810D61C12CF3A512A315BDE05694555830577C9AC36C64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "570:16550:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1236:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1940:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4060:430;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2570:508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3146:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3366:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3599:389;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:228;2271:7;2317:1;2298:21;;:7;:21;;;2290:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2384:9;:13;2394:2;2384:13;;;;;;;;;;;:22;2398:7;2384:22;;;;;;;;;;;;;;;;2377:29;;2185:228;;;;:::o;1236:305::-;1338:4;1388:26;1373:41;;;:11;:41;;;;:109;;;;1445:37;1430:52;;;:11;:52;;;;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;:::-;1373:161;1354:180;;1236:305;;;:::o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4060:430::-;4293:12;:10;:12::i;:::-;4285:20;;:4;:20;;;:60;;;;4309:36;4326:4;4332:12;:10;:12::i;:::-;4309:16;:36::i;:::-;4285:60;4264:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4060:430;;;;;:::o;2570:508::-;2721:16;2780:3;:10;2761:8;:15;:29;2753:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2847:30;2894:8;:15;2880:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2847:63;;2926:9;2921:120;2945:8;:15;2941:1;:19;2921:120;;;3000:30;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;;3023:3;3027:1;3023:6;;;;;;;;:::i;:::-;;;;;;;;3000:9;:30::i;:::-;2981:13;2995:1;2981:16;;;;;;;;:::i;:::-;;;;;;;:49;;;;;2962:3;;;;:::i;:::-;;;2921:120;;;;3058:13;3051:20;;;2570:508;;;;:::o;3146:153::-;3240:52;3259:12;:10;:12::i;:::-;3273:8;3283;3240:18;:52::i;:::-;3146:153;;:::o;3366:166::-;3465:4;3488:18;:27;3507:7;3488:27;;;;;;;;;;;;;;;:37;3516:8;3488:37;;;;;;;;;;;;;;;;;;;;;;;;;3481:44;;3366:166;;;;:::o;3599:389::-;3807:12;:10;:12::i;:::-;3799:20;;:4;:20;;;:60;;;;3823:36;3840:4;3846:12;:10;:12::i;:::-;3823:16;:36::i;:::-;3799:60;3778:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;3936:45;3954:4;3960:2;3964;3968:6;3976:4;3936:17;:45::i;:::-;3599:389;;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;6233:1115:1:-;6453:7;:14;6439:3;:10;:28;6431:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6544:1;6530:16;;:2;:16;;;6522:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6599:16;6618:12;:10;:12::i;:::-;6599:31;;6641:60;6662:8;6672:4;6678:2;6682:3;6687:7;6696:4;6641:20;:60::i;:::-;6717:9;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;6800:27;;6842:19;6864:9;:13;6874:2;6864:13;;;;;;;;;;;:19;6878:4;6864:19;;;;;;;;;;;;;;;;6842:41;;6920:6;6905:11;:21;;6897:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7051:6;7037:11;:20;7015:9;:13;7025:2;7015:13;;;;;;;;;;;:19;7029:4;7015:19;;;;;;;;;;;;;;;:42;;;;7106:6;7085:9;:13;7095:2;7085:13;;;;;;;;;;;:17;7099:2;7085:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;7138:47;;7162:4;7138:47;;7152:8;7138:47;;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7196:59;7216:8;7226:4;7232:2;7236:3;7241:7;7250:4;7196:19;:59::i;:::-;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;12773:323::-;12923:8;12914:17;;:5;:17;;;12906:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13025:8;12987:18;:25;13006:5;12987:25;;;;;;;;;;;;;;;:35;13013:8;12987:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13070:8;13048:41;;13063:5;13048:41;;;13080:8;13048:41;;;;;;:::i;:::-;;;;;;;;12773:323;;;:::o;4940:947::-;5135:1;5121:16;;:2;:16;;;5113:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5190:16;5209:12;:10;:12::i;:::-;5190:31;;5231:20;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5348:60;5369:8;5379:4;5385:2;5389:3;5394:7;5403:4;5348:20;:60::i;:::-;5419:19;5441:9;:13;5451:2;5441:13;;;;;;;;;;;:19;5455:4;5441:19;;;;;;;;;;;;;;;;5419:41;;5493:6;5478:11;:21;;5470:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5616:6;5602:11;:20;5580:9;:13;5590:2;5580:13;;;;;;;;;;;:19;5594:4;5580:19;;;;;;;;;;;;;;;:42;;;;5663:6;5642:9;:13;5652:2;5642:13;;;;;;;;;;;:17;5656:2;5642:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5716:2;5685:46;;5710:4;5685:46;;5700:8;5685:46;;;5720:2;5724:6;5685:46;;;;;;;:::i;:::-;;;;;;;;5742:59;5762:8;5772:4;5778:2;5782:3;5787:7;5796:4;5742:19;:59::i;:::-;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;14030:214::-;;;;;;;:::o;15177:213::-;;;;;;;:::o;16127:792::-;16359:15;:2;:13;;;:15::i;:::-;16355:558;;;16411:2;16394:43;;;16438:8;16448:4;16454:3;16459:7;16468:4;16394:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16390:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16779:6;16772:14;;;;;;;;;;;:::i;:::-;;;;;;;;16390:513;;;16826:62;;;;;;;;;;:::i;:::-;;;;;;;;16390:513;16564:48;;;16552:60;;;:8;:60;;;;16548:157;;16636:50;;;;;;;;;;:::i;:::-;;;;;;;;16548:157;16474:245;16355:558;16127:792;;;;;;:::o;16925:193::-;16991:16;17019:22;17058:1;17044:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17019:41;;17081:7;17070:5;17076:1;17070:8;;;;;;;;:::i;:::-;;;;;;;:18;;;;;17106:5;17099:12;;;16925:193;;;:::o;15396:725::-;15603:15;:2;:13;;;:15::i;:::-;15599:516;;;15655:2;15638:38;;;15677:8;15687:4;15693:2;15697:6;15705:4;15638:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15634:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;15981:6;15974:14;;;;;;;;;;;:::i;:::-;;;;;;;;15634:471;;;16028:62;;;;;;;;;;:::i;:::-;;;;;;;;15634:471;15771:43;;;15759:55;;;:8;:55;;;;15755:152;;15838:50;;;;;;;;;;:::i;:::-;;;;;;;;15755:152;15711:210;15599:516;15396:725;;;;;;:::o;1175:320:6:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1509::-;8715:6;8723;8731;8739;8747;8796:3;8784:9;8775:7;8771:23;8767:33;8764:120;;;8803:79;;:::i;:::-;8764:120;8923:1;8948:53;8993:7;8984:6;8973:9;8969:22;8948:53;:::i;:::-;8938:63;;8894:117;9050:2;9076:53;9121:7;9112:6;9101:9;9097:22;9076:53;:::i;:::-;9066:63;;9021:118;9206:2;9195:9;9191:18;9178:32;9237:18;9229:6;9226:30;9223:117;;;9259:79;;:::i;:::-;9223:117;9364:78;9434:7;9425:6;9414:9;9410:22;9364:78;:::i;:::-;9354:88;;9149:303;9519:2;9508:9;9504:18;9491:32;9550:18;9542:6;9539:30;9536:117;;;9572:79;;:::i;:::-;9536:117;9677:78;9747:7;9738:6;9727:9;9723:22;9677:78;:::i;:::-;9667:88;;9462:303;9832:3;9821:9;9817:19;9804:33;9864:18;9856:6;9853:30;9850:117;;;9886:79;;:::i;:::-;9850:117;9991:62;10045:7;10036:6;10025:9;10021:22;9991:62;:::i;:::-;9981:72;;9775:288;8561:1509;;;;;;;;:::o;10076:311::-;10153:4;10243:18;10235:6;10232:30;10229:56;;;10265:18;;:::i;:::-;10229:56;10315:4;10307:6;10303:17;10295:25;;10375:4;10369;10365:15;10357:23;;10076:311;;;:::o;10410:710::-;10506:5;10531:81;10547:64;10604:6;10547:64;:::i;:::-;10531:81;:::i;:::-;10522:90;;10632:5;10661:6;10654:5;10647:21;10695:4;10688:5;10684:16;10677:23;;10748:4;10740:6;10736:17;10728:6;10724:30;10777:3;10769:6;10766:15;10763:122;;;10796:79;;:::i;:::-;10763:122;10911:6;10894:220;10928:6;10923:3;10920:15;10894:220;;;11003:3;11032:37;11065:3;11053:10;11032:37;:::i;:::-;11027:3;11020:50;11099:4;11094:3;11090:14;11083:21;;10970:144;10954:4;10949:3;10945:14;10938:21;;10894:220;;;10898:21;10512:608;;10410:710;;;;;:::o;11143:370::-;11214:5;11263:3;11256:4;11248:6;11244:17;11240:27;11230:122;;11271:79;;:::i;:::-;11230:122;11388:6;11375:20;11413:94;11503:3;11495:6;11488:4;11480:6;11476:17;11413:94;:::i;:::-;11404:103;;11220:293;11143:370;;;;:::o;11519:894::-;11637:6;11645;11694:2;11682:9;11673:7;11669:23;11665:32;11662:119;;;11700:79;;:::i;:::-;11662:119;11848:1;11837:9;11833:17;11820:31;11878:18;11870:6;11867:30;11864:117;;;11900:79;;:::i;:::-;11864:117;12005:78;12075:7;12066:6;12055:9;12051:22;12005:78;:::i;:::-;11995:88;;11791:302;12160:2;12149:9;12145:18;12132:32;12191:18;12183:6;12180:30;12177:117;;;12213:79;;:::i;:::-;12177:117;12318:78;12388:7;12379:6;12368:9;12364:22;12318:78;:::i;:::-;12308:88;;12103:303;11519:894;;;;;:::o;12419:114::-;12486:6;12520:5;12514:12;12504:22;;12419:114;;;:::o;12539:184::-;12638:11;12672:6;12667:3;12660:19;12712:4;12707:3;12703:14;12688:29;;12539:184;;;;:::o;12729:132::-;12796:4;12819:3;12811:11;;12849:4;12844:3;12840:14;12832:22;;12729:132;;;:::o;12867:108::-;12944:24;12962:5;12944:24;:::i;:::-;12939:3;12932:37;12867:108;;:::o;12981:179::-;13050:10;13071:46;13113:3;13105:6;13071:46;:::i;:::-;13149:4;13144:3;13140:14;13126:28;;12981:179;;;;:::o;13166:113::-;13236:4;13268;13263:3;13259:14;13251:22;;13166:113;;;:::o;13315:732::-;13434:3;13463:54;13511:5;13463:54;:::i;:::-;13533:86;13612:6;13607:3;13533:86;:::i;:::-;13526:93;;13643:56;13693:5;13643:56;:::i;:::-;13722:7;13753:1;13738:284;13763:6;13760:1;13757:13;13738:284;;;13839:6;13833:13;13866:63;13925:3;13910:13;13866:63;:::i;:::-;13859:70;;13952:60;14005:6;13952:60;:::i;:::-;13942:70;;13798:224;13785:1;13782;13778:9;13773:14;;13738:284;;;13742:14;14038:3;14031:10;;13439:608;;;13315:732;;;;:::o;14053:373::-;14196:4;14234:2;14223:9;14219:18;14211:26;;14283:9;14277:4;14273:20;14269:1;14258:9;14254:17;14247:47;14311:108;14414:4;14405:6;14311:108;:::i;:::-;14303:116;;14053:373;;;;:::o;14432:116::-;14502:21;14517:5;14502:21;:::i;:::-;14495:5;14492:32;14482:60;;14538:1;14535;14528:12;14482:60;14432:116;:::o;14554:133::-;14597:5;14635:6;14622:20;14613:29;;14651:30;14675:5;14651:30;:::i;:::-;14554:133;;;;:::o;14693:468::-;14758:6;14766;14815:2;14803:9;14794:7;14790:23;14786:32;14783:119;;;14821:79;;:::i;:::-;14783:119;14941:1;14966:53;15011:7;15002:6;14991:9;14987:22;14966:53;:::i;:::-;14956:63;;14912:117;15068:2;15094:50;15136:7;15127:6;15116:9;15112:22;15094:50;:::i;:::-;15084:60;;15039:115;14693:468;;;;;:::o;15167:474::-;15235:6;15243;15292:2;15280:9;15271:7;15267:23;15263:32;15260:119;;;15298:79;;:::i;:::-;15260:119;15418:1;15443:53;15488:7;15479:6;15468:9;15464:22;15443:53;:::i;:::-;15433:63;;15389:117;15545:2;15571:53;15616:7;15607:6;15596:9;15592:22;15571:53;:::i;:::-;15561:63;;15516:118;15167:474;;;;;:::o;15647:1089::-;15751:6;15759;15767;15775;15783;15832:3;15820:9;15811:7;15807:23;15803:33;15800:120;;;15839:79;;:::i;:::-;15800:120;15959:1;15984:53;16029:7;16020:6;16009:9;16005:22;15984:53;:::i;:::-;15974:63;;15930:117;16086:2;16112:53;16157:7;16148:6;16137:9;16133:22;16112:53;:::i;:::-;16102:63;;16057:118;16214:2;16240:53;16285:7;16276:6;16265:9;16261:22;16240:53;:::i;:::-;16230:63;;16185:118;16342:2;16368:53;16413:7;16404:6;16393:9;16389:22;16368:53;:::i;:::-;16358:63;;16313:118;16498:3;16487:9;16483:19;16470:33;16530:18;16522:6;16519:30;16516:117;;;16552:79;;:::i;:::-;16516:117;16657:62;16711:7;16702:6;16691:9;16687:22;16657:62;:::i;:::-;16647:72;;16441:288;15647:1089;;;;;;;;:::o;16742:230::-;16882:34;16878:1;16870:6;16866:14;16859:58;16951:13;16946:2;16938:6;16934:15;16927:38;16742:230;:::o;16978:366::-;17120:3;17141:67;17205:2;17200:3;17141:67;:::i;:::-;17134:74;;17217:93;17306:3;17217:93;:::i;:::-;17335:2;17330:3;17326:12;17319:19;;16978:366;;;:::o;17350:419::-;17516:4;17554:2;17543:9;17539:18;17531:26;;17603:9;17597:4;17593:20;17589:1;17578:9;17574:17;17567:47;17631:131;17757:4;17631:131;:::i;:::-;17623:139;;17350:419;;;:::o;17775:180::-;17823:77;17820:1;17813:88;17920:4;17917:1;17910:15;17944:4;17941:1;17934:15;17961:320;18005:6;18042:1;18036:4;18032:12;18022:22;;18089:1;18083:4;18079:12;18110:18;18100:81;;18166:4;18158:6;18154:17;18144:27;;18100:81;18228:2;18220:6;18217:14;18197:18;18194:38;18191:84;;18247:18;;:::i;:::-;18191:84;18012:269;17961:320;;;:::o;18287:237::-;18427:34;18423:1;18415:6;18411:14;18404:58;18496:20;18491:2;18483:6;18479:15;18472:45;18287:237;:::o;18530:366::-;18672:3;18693:67;18757:2;18752:3;18693:67;:::i;:::-;18686:74;;18769:93;18858:3;18769:93;:::i;:::-;18887:2;18882:3;18878:12;18871:19;;18530:366;;;:::o;18902:419::-;19068:4;19106:2;19095:9;19091:18;19083:26;;19155:9;19149:4;19145:20;19141:1;19130:9;19126:17;19119:47;19183:131;19309:4;19183:131;:::i;:::-;19175:139;;18902:419;;;:::o;19327:228::-;19467:34;19463:1;19455:6;19451:14;19444:58;19536:11;19531:2;19523:6;19519:15;19512:36;19327:228;:::o;19561:366::-;19703:3;19724:67;19788:2;19783:3;19724:67;:::i;:::-;19717:74;;19800:93;19889:3;19800:93;:::i;:::-;19918:2;19913:3;19909:12;19902:19;;19561:366;;;:::o;19933:419::-;20099:4;20137:2;20126:9;20122:18;20114:26;;20186:9;20180:4;20176:20;20172:1;20161:9;20157:17;20150:47;20214:131;20340:4;20214:131;:::i;:::-;20206:139;;19933:419;;;:::o;20358:180::-;20406:77;20403:1;20396:88;20503:4;20500:1;20493:15;20527:4;20524:1;20517:15;20544:180;20592:77;20589:1;20582:88;20689:4;20686:1;20679:15;20713:4;20710:1;20703:15;20730:233;20769:3;20792:24;20810:5;20792:24;:::i;:::-;20783:33;;20838:66;20831:5;20828:77;20825:103;;20908:18;;:::i;:::-;20825:103;20955:1;20948:5;20944:13;20937:20;;20730:233;;;:::o;20969:228::-;21109:34;21105:1;21097:6;21093:14;21086:58;21178:11;21173:2;21165:6;21161:15;21154:36;20969:228;:::o;21203:366::-;21345:3;21366:67;21430:2;21425:3;21366:67;:::i;:::-;21359:74;;21442:93;21531:3;21442:93;:::i;:::-;21560:2;21555:3;21551:12;21544:19;;21203:366;;;:::o;21575:419::-;21741:4;21779:2;21768:9;21764:18;21756:26;;21828:9;21822:4;21818:20;21814:1;21803:9;21799:17;21792:47;21856:131;21982:4;21856:131;:::i;:::-;21848:139;;21575:419;;;:::o;22000:227::-;22140:34;22136:1;22128:6;22124:14;22117:58;22209:10;22204:2;22196:6;22192:15;22185:35;22000:227;:::o;22233:366::-;22375:3;22396:67;22460:2;22455:3;22396:67;:::i;:::-;22389:74;;22472:93;22561:3;22472:93;:::i;:::-;22590:2;22585:3;22581:12;22574:19;;22233:366;;;:::o;22605:419::-;22771:4;22809:2;22798:9;22794:18;22786:26;;22858:9;22852:4;22848:20;22844:1;22833:9;22829:17;22822:47;22886:131;23012:4;22886:131;:::i;:::-;22878:139;;22605:419;;;:::o;23030:224::-;23170:34;23166:1;23158:6;23154:14;23147:58;23239:7;23234:2;23226:6;23222:15;23215:32;23030:224;:::o;23260:366::-;23402:3;23423:67;23487:2;23482:3;23423:67;:::i;:::-;23416:74;;23499:93;23588:3;23499:93;:::i;:::-;23617:2;23612:3;23608:12;23601:19;;23260:366;;;:::o;23632:419::-;23798:4;23836:2;23825:9;23821:18;23813:26;;23885:9;23879:4;23875:20;23871:1;23860:9;23856:17;23849:47;23913:131;24039:4;23913:131;:::i;:::-;23905:139;;23632:419;;;:::o;24057:229::-;24197:34;24193:1;24185:6;24181:14;24174:58;24266:12;24261:2;24253:6;24249:15;24242:37;24057:229;:::o;24292:366::-;24434:3;24455:67;24519:2;24514:3;24455:67;:::i;:::-;24448:74;;24531:93;24620:3;24531:93;:::i;:::-;24649:2;24644:3;24640:12;24633:19;;24292:366;;;:::o;24664:419::-;24830:4;24868:2;24857:9;24853:18;24845:26;;24917:9;24911:4;24907:20;24903:1;24892:9;24888:17;24881:47;24945:131;25071:4;24945:131;:::i;:::-;24937:139;;24664:419;;;:::o;25089:191::-;25129:3;25148:20;25166:1;25148:20;:::i;:::-;25143:25;;25182:20;25200:1;25182:20;:::i;:::-;25177:25;;25225:1;25222;25218:9;25211:16;;25246:3;25243:1;25240:10;25237:36;;;25253:18;;:::i;:::-;25237:36;25089:191;;;;:::o;25286:634::-;25507:4;25545:2;25534:9;25530:18;25522:26;;25594:9;25588:4;25584:20;25580:1;25569:9;25565:17;25558:47;25622:108;25725:4;25716:6;25622:108;:::i;:::-;25614:116;;25777:9;25771:4;25767:20;25762:2;25751:9;25747:18;25740:48;25805:108;25908:4;25899:6;25805:108;:::i;:::-;25797:116;;25286:634;;;;;:::o;25926:228::-;26066:34;26062:1;26054:6;26050:14;26043:58;26135:11;26130:2;26122:6;26118:15;26111:36;25926:228;:::o;26160:366::-;26302:3;26323:67;26387:2;26382:3;26323:67;:::i;:::-;26316:74;;26399:93;26488:3;26399:93;:::i;:::-;26517:2;26512:3;26508:12;26501:19;;26160:366;;;:::o;26532:419::-;26698:4;26736:2;26725:9;26721:18;26713:26;;26785:9;26779:4;26775:20;26771:1;26760:9;26756:17;26749:47;26813:131;26939:4;26813:131;:::i;:::-;26805:139;;26532:419;;;:::o;26957:332::-;27078:4;27116:2;27105:9;27101:18;27093:26;;27129:71;27197:1;27186:9;27182:17;27173:6;27129:71;:::i;:::-;27210:72;27278:2;27267:9;27263:18;27254:6;27210:72;:::i;:::-;26957:332;;;;;:::o;27295:118::-;27382:24;27400:5;27382:24;:::i;:::-;27377:3;27370:37;27295:118;;:::o;27419:98::-;27470:6;27504:5;27498:12;27488:22;;27419:98;;;:::o;27523:168::-;27606:11;27640:6;27635:3;27628:19;27680:4;27675:3;27671:14;27656:29;;27523:168;;;;:::o;27697:373::-;27783:3;27811:38;27843:5;27811:38;:::i;:::-;27865:70;27928:6;27923:3;27865:70;:::i;:::-;27858:77;;27944:65;28002:6;27997:3;27990:4;27983:5;27979:16;27944:65;:::i;:::-;28034:29;28056:6;28034:29;:::i;:::-;28029:3;28025:39;28018:46;;27787:283;27697:373;;;;:::o;28076:1053::-;28399:4;28437:3;28426:9;28422:19;28414:27;;28451:71;28519:1;28508:9;28504:17;28495:6;28451:71;:::i;:::-;28532:72;28600:2;28589:9;28585:18;28576:6;28532:72;:::i;:::-;28651:9;28645:4;28641:20;28636:2;28625:9;28621:18;28614:48;28679:108;28782:4;28773:6;28679:108;:::i;:::-;28671:116;;28834:9;28828:4;28824:20;28819:2;28808:9;28804:18;28797:48;28862:108;28965:4;28956:6;28862:108;:::i;:::-;28854:116;;29018:9;29012:4;29008:20;29002:3;28991:9;28987:19;28980:49;29046:76;29117:4;29108:6;29046:76;:::i;:::-;29038:84;;28076:1053;;;;;;;;:::o;29135:141::-;29191:5;29222:6;29216:13;29207:22;;29238:32;29264:5;29238:32;:::i;:::-;29135:141;;;;:::o;29282:349::-;29351:6;29400:2;29388:9;29379:7;29375:23;29371:32;29368:119;;;29406:79;;:::i;:::-;29368:119;29526:1;29551:63;29606:7;29597:6;29586:9;29582:22;29551:63;:::i;:::-;29541:73;;29497:127;29282:349;;;;:::o;29637:106::-;29681:8;29730:5;29725:3;29721:15;29700:36;;29637:106;;;:::o;29749:183::-;29784:3;29822:1;29804:16;29801:23;29798:128;;;29860:1;29857;29854;29839:23;29882:34;29913:1;29907:8;29882:34;:::i;:::-;29875:41;;29798:128;29749:183;:::o;29938:711::-;29977:3;30015:4;29997:16;29994:26;30023:5;29991:39;30052:20;;:::i;:::-;30127:1;30109:16;30105:24;30102:1;30096:4;30081:49;30160:4;30154:11;30259:16;30252:4;30244:6;30240:17;30237:39;30204:18;30196:6;30193:30;30177:113;30174:146;;;30305:5;;;;30174:146;30351:6;30345:4;30341:17;30387:3;30381:10;30414:18;30406:6;30403:30;30400:43;;;30436:5;;;;;;30400:43;30484:6;30477:4;30472:3;30468:14;30464:27;30543:1;30525:16;30521:24;30515:4;30511:35;30506:3;30503:44;30500:57;;;30550:5;;;;;;;30500:57;30567;30615:6;30609:4;30605:17;30597:6;30593:30;30587:4;30567:57;:::i;:::-;30640:3;30633:10;;29981:668;;;;;29938:711;;:::o;30655:239::-;30795:34;30791:1;30783:6;30779:14;30772:58;30864:22;30859:2;30851:6;30847:15;30840:47;30655:239;:::o;30900:366::-;31042:3;31063:67;31127:2;31122:3;31063:67;:::i;:::-;31056:74;;31139:93;31228:3;31139:93;:::i;:::-;31257:2;31252:3;31248:12;31241:19;;30900:366;;;:::o;31272:419::-;31438:4;31476:2;31465:9;31461:18;31453:26;;31525:9;31519:4;31515:20;31511:1;31500:9;31496:17;31489:47;31553:131;31679:4;31553:131;:::i;:::-;31545:139;;31272:419;;;:::o;31697:227::-;31837:34;31833:1;31825:6;31821:14;31814:58;31906:10;31901:2;31893:6;31889:15;31882:35;31697:227;:::o;31930:366::-;32072:3;32093:67;32157:2;32152:3;32093:67;:::i;:::-;32086:74;;32169:93;32258:3;32169:93;:::i;:::-;32287:2;32282:3;32278:12;32271:19;;31930:366;;;:::o;32302:419::-;32468:4;32506:2;32495:9;32491:18;32483:26;;32555:9;32549:4;32545:20;32541:1;32530:9;32526:17;32519:47;32583:131;32709:4;32583:131;:::i;:::-;32575:139;;32302:419;;;:::o;32727:751::-;32950:4;32988:3;32977:9;32973:19;32965:27;;33002:71;33070:1;33059:9;33055:17;33046:6;33002:71;:::i;:::-;33083:72;33151:2;33140:9;33136:18;33127:6;33083:72;:::i;:::-;33165;33233:2;33222:9;33218:18;33209:6;33165:72;:::i;:::-;33247;33315:2;33304:9;33300:18;33291:6;33247:72;:::i;:::-;33367:9;33361:4;33357:20;33351:3;33340:9;33336:19;33329:49;33395:76;33466:4;33457:6;33395:76;:::i;:::-;33387:84;;32727:751;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1921800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8244,
									"end": 8250,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8241,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 8237,
									"end": 8250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8237,
									"end": 8250,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8171,
									"end": 8257,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8171,
									"end": 8257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2757,
									"end": 2763,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2806,
									"end": 2808,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2803,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2785,
									"end": 2792,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2781,
									"end": 2804,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 2809,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2812,
									"end": 2891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 2812,
									"end": 2891,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2774,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2953,
									"end": 2954,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2942,
									"end": 2951,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2938,
									"end": 2955,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 2956,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2975,
									"end": 2981,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2972,
									"end": 3002,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3005,
									"end": 3084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3005,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2969,
									"end": 3086,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3176,
									"end": 3183,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3167,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3156,
									"end": 3165,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3152,
									"end": 3174,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3110,
									"end": 3184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3110,
									"end": 3184,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3100,
									"end": 3184,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3100,
									"end": 3184,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2903,
									"end": 3194,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3259,
									"end": 3265,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3293,
									"end": 3298,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3287,
									"end": 3299,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3277,
									"end": 3299,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3277,
									"end": 3299,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3312,
									"end": 3492,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3312,
									"end": 3492,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3360,
									"end": 3437,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3350,
									"end": 3438,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3457,
									"end": 3461,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3454,
									"end": 3455,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3447,
									"end": 3462,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3481,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3478,
									"end": 3479,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3471,
									"end": 3486,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3548,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3573,
									"end": 3577,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3569,
									"end": 3581,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3559,
									"end": 3581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3620,
									"end": 3624,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3647,
									"end": 3665,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 3695,
									"end": 3701,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3691,
									"end": 3708,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3681,
									"end": 3708,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3681,
									"end": 3708,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3637,
									"end": 3718,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3765,
									"end": 3767,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3757,
									"end": 3763,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3754,
									"end": 3768,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3734,
									"end": 3752,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3731,
									"end": 3769,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 3784,
									"end": 3802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3784,
									"end": 3802,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3728,
									"end": 3812,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3498,
									"end": 3818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3873,
									"end": 3877,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3896,
									"end": 3899,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3899,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3899,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3919,
									"end": 3922,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3916,
									"end": 3917,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3909,
									"end": 3923,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3953,
									"end": 3957,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3940,
									"end": 3958,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 3932,
									"end": 3958,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3932,
									"end": 3958,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3824,
									"end": 3965,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4008,
									"end": 4014,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4055,
									"end": 4057,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4043,
									"end": 4048,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4039,
									"end": 4053,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4035,
									"end": 4058,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4025,
									"end": 4058,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4025,
									"end": 4058,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3971,
									"end": 4064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4114,
									"end": 4122,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4164,
									"end": 4169,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4158,
									"end": 4162,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4154,
									"end": 4170,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4133,
									"end": 4170,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4133,
									"end": 4170,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4070,
									"end": 4177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4252,
									"end": 4258,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4302,
									"end": 4303,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4290,
									"end": 4300,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4286,
									"end": 4304,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4355,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4344,
									"end": 4353,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4325,
									"end": 4422,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4325,
									"end": 4422,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4473,
									"end": 4481,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4462,
									"end": 4471,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4443,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4443,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4482,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4482,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4515,
									"end": 4519,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4511,
									"end": 4520,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4504,
									"end": 4509,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4500,
									"end": 4521,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4491,
									"end": 4521,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4491,
									"end": 4521,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4568,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4562,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4550,
									"end": 4569,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4543,
									"end": 4548,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4570,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4530,
									"end": 4570,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4530,
									"end": 4570,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4259,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4183,
									"end": 4576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4619,
									"end": 4626,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4648,
									"end": 4653,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 4653,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4637,
									"end": 4653,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4582,
									"end": 4659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4693,
									"end": 4696,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4714,
									"end": 4719,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4707,
									"end": 4719,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4707,
									"end": 4719,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4665,
									"end": 4725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4781,
									"end": 4790,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4859,
									"end": 4864,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 4841,
									"end": 4865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4841,
									"end": 4865,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 4832,
									"end": 4866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 4832,
									"end": 4866,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 4814,
									"end": 4867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4814,
									"end": 4867,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4801,
									"end": 4867,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4801,
									"end": 4867,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4731,
									"end": 4873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4922,
									"end": 4925,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4943,
									"end": 4948,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4936,
									"end": 4948,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4936,
									"end": 4948,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4954,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5101,
									"end": 5108,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5070,
									"end": 5109,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5070,
									"end": 5109,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5204,
									"end": 5220,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5180,
									"end": 5221,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5180,
									"end": 5221,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5172,
									"end": 5178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5165,
									"end": 5169,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5159,
									"end": 5170,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 5131,
									"end": 5222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5131,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5118,
									"end": 5223,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5036,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 5229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5280,
									"end": 5283,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5235,
									"end": 5308,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5235,
									"end": 5308,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5391,
									"end": 5423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 5391,
									"end": 5423,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5490,
									"end": 5496,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5482,
									"end": 5488,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5476,
									"end": 5480,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5432,
									"end": 5497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5432,
									"end": 5497,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5367,
									"end": 5503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5314,
									"end": 5503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5586,
									"end": 5589,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5579,
									"end": 5584,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5576,
									"end": 5590,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5677,
									"end": 5678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5670,
									"end": 5675,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5640,
									"end": 5679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5640,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5613,
									"end": 5614,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5606,
									"end": 5611,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5602,
									"end": 5615,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5593,
									"end": 5615,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5593,
									"end": 5615,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 5569,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5695,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5804,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5797,
									"end": 5800,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5794,
									"end": 5805,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 5868,
									"end": 5873,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 5836,
									"end": 5874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 5836,
									"end": 5874,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 5938,
									"end": 5948,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 5920,
									"end": 5949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 5920,
									"end": 5949,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5910,
									"end": 5918,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5906,
									"end": 5950,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6103,
									"end": 6105,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6091,
									"end": 6101,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6088,
									"end": 6106,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6124,
									"end": 6132,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6109,
									"end": 6132,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6109,
									"end": 6132,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6085,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6221,
									"end": 6224,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 6203,
									"end": 6225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6203,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6193,
									"end": 6201,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6176,
									"end": 6187,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6147,
									"end": 6227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6147,
									"end": 6227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5806,
									"end": 6237,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5806,
									"end": 6237,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5791,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5701,
									"end": 6244,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6304,
									"end": 6312,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6348,
									"end": 6352,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6344,
									"end": 6360,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 6323,
									"end": 6360,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6323,
									"end": 6360,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6250,
									"end": 6367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6417,
									"end": 6423,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 6498,
									"end": 6499,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6494,
									"end": 6500,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6486,
									"end": 6491,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6483,
									"end": 6484,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 6479,
									"end": 6492,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6450,
									"end": 6501,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 6450,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6446,
									"end": 6502,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6525,
									"end": 6529,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6521,
									"end": 6536,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6511,
									"end": 6536,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6511,
									"end": 6536,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6424,
									"end": 6542,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6373,
									"end": 6542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6623,
									"end": 6627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 6794,
									"end": 6797,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6788,
									"end": 6792,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 6769,
									"end": 6798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 6769,
									"end": 6798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6761,
									"end": 6798,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6761,
									"end": 6798,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6831,
									"end": 6834,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6828,
									"end": 6829,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6824,
									"end": 6835,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6818,
									"end": 6822,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6815,
									"end": 6836,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 6807,
									"end": 6836,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6807,
									"end": 6836,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6547,
									"end": 6842,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 6997,
									"end": 7000,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 6964,
									"end": 7001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 6964,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7066,
									"end": 7084,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7058,
									"end": 7064,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7055,
									"end": 7085,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 7088,
									"end": 7106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7088,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7052,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7164,
									"end": 7168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7158,
									"end": 7169,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 7132,
									"end": 7170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7132,
									"end": 7170,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7277,
									"end": 7283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7269,
									"end": 7275,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7263,
									"end": 7267,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7217,
									"end": 7284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7217,
									"end": 7284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7311,
									"end": 7312,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7335,
									"end": 7339,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7322,
									"end": 7339,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7322,
									"end": 7339,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7367,
									"end": 7369,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7359,
									"end": 7365,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7356,
									"end": 7370,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7384,
									"end": 7385,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8041,
									"end": 8042,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8058,
									"end": 8064,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8107,
									"end": 8116,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8102,
									"end": 8105,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 8098,
									"end": 8117,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8092,
									"end": 8118,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8083,
									"end": 8118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8083,
									"end": 8118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 8055,
									"end": 8132,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8218,
									"end": 8224,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8211,
									"end": 8216,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 8158,
									"end": 8225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8158,
									"end": 8225,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8145,
									"end": 8226,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8014,
									"end": 8236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7379,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7431,
									"end": 7435,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7427,
									"end": 7436,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7419,
									"end": 7425,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7415,
									"end": 7437,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 7497,
									"end": 7501,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 7465,
									"end": 7502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 7465,
									"end": 7502,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7524,
									"end": 7525,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7552,
									"end": 7559,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7549,
									"end": 7550,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7560,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7631,
									"end": 7640,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7626,
									"end": 7629,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7622,
									"end": 7641,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7616,
									"end": 7642,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7608,
									"end": 7614,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7601,
									"end": 7643,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7682,
									"end": 7683,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7674,
									"end": 7680,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7670,
									"end": 7684,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7660,
									"end": 7684,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7660,
									"end": 7684,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7729,
									"end": 7731,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7718,
									"end": 7727,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7714,
									"end": 7732,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7701,
									"end": 7732,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 7701,
									"end": 7732,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7575,
									"end": 7579,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7572,
									"end": 7573,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7568,
									"end": 7580,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7563,
									"end": 7580,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7563,
									"end": 7580,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 7538,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7774,
									"end": 7780,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7765,
									"end": 7772,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7762,
									"end": 7781,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7832,
									"end": 7841,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7827,
									"end": 7830,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7823,
									"end": 7842,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7817,
									"end": 7843,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 7917,
									"end": 7921,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7909,
									"end": 7915,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7905,
									"end": 7922,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7894,
									"end": 7903,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 7875,
									"end": 7923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 7875,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 7873,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7860,
									"end": 7924,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7782,
									"end": 7938,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7759,
									"end": 7938,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7984,
									"end": 7985,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7980,
									"end": 7981,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7972,
									"end": 7978,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 7968,
									"end": 7982,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7964,
									"end": 7986,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7958,
									"end": 7962,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 7951,
									"end": 7987,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7997,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7349,
									"end": 8236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6939,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6847,
									"end": 8242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6847,
									"end": 8242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17120,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205cce5752241f7c260218810d61c12cf3a512a315bde05694555830577c9ac36c64736f6c63430008110033",
									".code": [
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "F242432A"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "FDD58E"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "1FFC9A7"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "2EB2C2D6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 570,
											"end": 17120,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2290,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2397,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1522,
											"end": 1533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1498,
											"end": 1534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4293,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4293,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4305,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4293,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4289,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4332,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4332,
											"end": 4344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4309,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4309,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4285,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4264,
											"end": 4421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4264,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4482,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4431,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4431,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2790,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2753,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2753,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2880,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2960,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3010,
											"end": 3018,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3010,
											"end": 3021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3026,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3023,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3000,
											"end": 3030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3000,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2981,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2962,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 3041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 3078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3259,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3259,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3291,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3240,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3240,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3515,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3488,
											"end": 3525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3807,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3807,
											"end": 3819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3807,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3803,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3846,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3823,
											"end": 3859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3823,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3799,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3778,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3954,
											"end": 3958,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3936,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3936,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6467,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6439,
											"end": 6467,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6431,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6431,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6532,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6522,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6522,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6618,
											"end": 6630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6662,
											"end": 6670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6676,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6678,
											"end": 6680,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6685,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6694,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6700,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6641,
											"end": 6701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6641,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6739,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6746,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6780,
											"end": 6786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6824,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6817,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6827,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6877,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6882,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6926,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6897,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6897,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7027,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7028,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7097,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7098,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7085,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 7123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6748,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 7123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7168,
											"end": 7170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7152,
											"end": 7160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7172,
											"end": 7175,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7184,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7138,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7138,
											"end": 7185,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7216,
											"end": 7224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7236,
											"end": 7239,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7241,
											"end": 7248,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7254,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7196,
											"end": 7255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7196,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7302,
											"end": 7310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7316,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7266,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7266,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 7348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 12931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 12906,
											"end": 12977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 12906,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13005,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13006,
											"end": 13011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13013,
											"end": 13021,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12987,
											"end": 13033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13070,
											"end": 13078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13063,
											"end": 13068,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13080,
											"end": 13088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 13048,
											"end": 13089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 13096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5137,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5113,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5113,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5209,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5209,
											"end": 5221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5272,
											"end": 5274,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5254,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5254,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5330,
											"end": 5336,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5312,
											"end": 5337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5312,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5369,
											"end": 5377,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5383,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5387,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5389,
											"end": 5392,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5348,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5348,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5453,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5454,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5459,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 5470,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5470,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5622,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5592,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5593,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5598,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5599,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5652,
											"end": 5654,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5656,
											"end": 5658,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5642,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5700,
											"end": 5708,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5720,
											"end": 5722,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5685,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5731,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5762,
											"end": 5770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5776,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5794,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5800,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5742,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 5742,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5742,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5812,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5812,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16359,
											"end": 16361,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 16359,
											"end": 16374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16359,
											"end": 16374,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 16359,
											"end": 16374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16411,
											"end": 16413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16437,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 16438,
											"end": 16446,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16448,
											"end": 16452,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16457,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16459,
											"end": 16466,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16468,
											"end": 16472,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 16394,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 16394,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 16390,
											"end": 16903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16779,
											"end": 16785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 16772,
											"end": 16786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 16826,
											"end": 16888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16826,
											"end": 16888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 16390,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16612,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 16564,
											"end": 16612,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16564,
											"end": 16612,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16552,
											"end": 16612,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 16636,
											"end": 16686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16636,
											"end": 16686,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 16548,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16474,
											"end": 16719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 16355,
											"end": 16913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16991,
											"end": 17007,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17019,
											"end": 17041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 17044,
											"end": 17060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17044,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17019,
											"end": 17060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17081,
											"end": 17088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17076,
											"end": 17077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 17070,
											"end": 17078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17106,
											"end": 17111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17099,
											"end": 17111,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17099,
											"end": 17111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17099,
											"end": 17111,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16925,
											"end": 17118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 15603,
											"end": 15605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 15603,
											"end": 15618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15618,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 15603,
											"end": 15618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15655,
											"end": 15657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15676,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 15677,
											"end": 15685,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15687,
											"end": 15691,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 15638,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 15638,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 15634,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A0"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 15634,
											"end": 16105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15981,
											"end": 15987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 15974,
											"end": 15988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15974,
											"end": 15988,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 16028,
											"end": 16090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16090,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 15634,
											"end": 16105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15771,
											"end": 15814,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 15771,
											"end": 15814,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15771,
											"end": 15814,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15814,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 15838,
											"end": 15888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 15755,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15711,
											"end": 15921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 15599,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 16121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 3940,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4064,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4068,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4176,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 4359,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4439,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 4529,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4280,
											"end": 4565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4188,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4782,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 4799,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5061,
											"end": 5138,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5139,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5187,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5282,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5270,
											"end": 5310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5400,
											"end": 5410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5419,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5420,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 5423,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5473,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5242,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5547,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5604,
											"end": 5608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 5576,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5486,
											"end": 5615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 5810,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5860,
											"end": 5864,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5848,
											"end": 5865,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5924,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5621,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 6215,
											"end": 6279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 6199,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6305,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6335,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6322,
											"end": 6327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6315,
											"end": 6336,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6367,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6352,
											"end": 6368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6420,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6414,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6445,
											"end": 6448,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6449,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 6464,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6588,
											"end": 6603,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6733,
											"end": 6736,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6700,
											"end": 6737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6688,
											"end": 6738,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6765,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6758,
											"end": 6772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6622,
											"end": 6626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6566,
											"end": 6587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6912,
											"end": 6929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6908,
											"end": 6935,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 6939,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7156,
											"end": 7160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7144,
											"end": 7161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 7081,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6888,
											"end": 7181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 7181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7298,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 7483,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 7521,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7595,
											"end": 7610,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7715,
											"end": 7718,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7710,
											"end": 7713,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7697,
											"end": 7727,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7736,
											"end": 7763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7623,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 7893,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 7877,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7958,
											"end": 7963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7951,
											"end": 7972,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8003,
											"end": 8007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7996,
											"end": 8001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8027,
											"end": 8030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 8048,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8180,
											"end": 8183,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8178,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 8138,
											"end": 8192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7858,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8272,
											"end": 8277,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8318,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8302,
											"end": 8319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8298,
											"end": 8325,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 8329,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 8545,
											"end": 8548,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8537,
											"end": 8543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8522,
											"end": 8528,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 8471,
											"end": 8549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8278,
											"end": 8555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8715,
											"end": 8721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8731,
											"end": 8737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8745,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8784,
											"end": 8793,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8775,
											"end": 8782,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8771,
											"end": 8794,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8767,
											"end": 8800,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 8803,
											"end": 8882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 8803,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 8764,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 8924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 8993,
											"end": 9000,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8984,
											"end": 8990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8973,
											"end": 8982,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 8991,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 8948,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 8948,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8938,
											"end": 9001,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8938,
											"end": 9001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8894,
											"end": 9011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 9121,
											"end": 9128,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9110,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9097,
											"end": 9119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 9076,
											"end": 9129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 9076,
											"end": 9129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9129,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9206,
											"end": 9208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9195,
											"end": 9204,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9191,
											"end": 9209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9210,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9229,
											"end": 9235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9226,
											"end": 9256,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 9259,
											"end": 9338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 9259,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 9223,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9434,
											"end": 9441,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9425,
											"end": 9431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9414,
											"end": 9423,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9410,
											"end": 9432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 9364,
											"end": 9442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 9364,
											"end": 9442,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9354,
											"end": 9442,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9354,
											"end": 9442,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9519,
											"end": 9521,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9508,
											"end": 9517,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9523,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9542,
											"end": 9548,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9539,
											"end": 9569,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 9572,
											"end": 9651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 9572,
											"end": 9651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 9536,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 9747,
											"end": 9754,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 9723,
											"end": 9745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 9677,
											"end": 9755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 9677,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9667,
											"end": 9755,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9667,
											"end": 9755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9462,
											"end": 9765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 9835,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9821,
											"end": 9830,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9817,
											"end": 9836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9804,
											"end": 9837,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9864,
											"end": 9882,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9856,
											"end": 9862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9883,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 9886,
											"end": 9965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 9886,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 9850,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 10045,
											"end": 10052,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10042,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10034,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 10021,
											"end": 10043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 9991,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9981,
											"end": 10053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9981,
											"end": 10053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9775,
											"end": 10063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 10070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10153,
											"end": 10157,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10235,
											"end": 10241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10232,
											"end": 10262,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 10265,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 10265,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 10229,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10319,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10307,
											"end": 10313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10320,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10295,
											"end": 10320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10379,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10369,
											"end": 10373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10365,
											"end": 10380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10076,
											"end": 10387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10506,
											"end": 10511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 10604,
											"end": 10610,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 10547,
											"end": 10611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 10547,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10531,
											"end": 10612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 10531,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10522,
											"end": 10612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10522,
											"end": 10612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10661,
											"end": 10667,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10654,
											"end": 10659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10647,
											"end": 10668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10695,
											"end": 10699,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10688,
											"end": 10693,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10684,
											"end": 10700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10677,
											"end": 10700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10677,
											"end": 10700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10748,
											"end": 10752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10740,
											"end": 10746,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10736,
											"end": 10753,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10777,
											"end": 10780,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10769,
											"end": 10775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10781,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 10796,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 10796,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 10763,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10911,
											"end": 10917,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10928,
											"end": 10934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10923,
											"end": 10926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10920,
											"end": 10935,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11006,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 11065,
											"end": 11068,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11053,
											"end": 11063,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 11032,
											"end": 11069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11027,
											"end": 11030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11020,
											"end": 11070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11094,
											"end": 11097,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11090,
											"end": 11104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11083,
											"end": 11104,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11083,
											"end": 11104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10970,
											"end": 11114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10954,
											"end": 10958,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10949,
											"end": 10952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10945,
											"end": 10959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10894,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10898,
											"end": 10919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10512,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10512,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10410,
											"end": 11120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11214,
											"end": 11219,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11256,
											"end": 11260,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 11248,
											"end": 11254,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11244,
											"end": 11261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11240,
											"end": 11267,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 11271,
											"end": 11350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 11271,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 11230,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11388,
											"end": 11394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11375,
											"end": 11395,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 11503,
											"end": 11506,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11488,
											"end": 11492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11486,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11476,
											"end": 11493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 11413,
											"end": 11507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 11413,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11507,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11220,
											"end": 11513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11637,
											"end": 11643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11651,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11694,
											"end": 11696,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11682,
											"end": 11691,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11673,
											"end": 11680,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11665,
											"end": 11697,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 11700,
											"end": 11779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 11700,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 11662,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11848,
											"end": 11849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11837,
											"end": 11846,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11833,
											"end": 11850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11851,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11878,
											"end": 11896,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11870,
											"end": 11876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11867,
											"end": 11897,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 11900,
											"end": 11979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 11900,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 11864,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 12075,
											"end": 12082,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12066,
											"end": 12072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12055,
											"end": 12064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 12005,
											"end": 12083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 12005,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11995,
											"end": 12083,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11995,
											"end": 12083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11791,
											"end": 12093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12162,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12149,
											"end": 12158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12145,
											"end": 12163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12132,
											"end": 12164,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 12191,
											"end": 12209,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12183,
											"end": 12189,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12180,
											"end": 12210,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 12213,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 12213,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 12177,
											"end": 12294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 12388,
											"end": 12395,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12379,
											"end": 12385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12368,
											"end": 12377,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12364,
											"end": 12386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 12318,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 12318,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12308,
											"end": 12396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12308,
											"end": 12396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12103,
											"end": 12406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11519,
											"end": 12413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12486,
											"end": 12492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12520,
											"end": 12525,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12514,
											"end": 12526,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12419,
											"end": 12533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12638,
											"end": 12649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12672,
											"end": 12678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12667,
											"end": 12670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12660,
											"end": 12679,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12712,
											"end": 12716,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12703,
											"end": 12717,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12796,
											"end": 12800,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12819,
											"end": 12822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12811,
											"end": 12822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12811,
											"end": 12822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12849,
											"end": 12853,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12844,
											"end": 12847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12840,
											"end": 12854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12832,
											"end": 12854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 12962,
											"end": 12967,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 12944,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 12944,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12939,
											"end": 12942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12932,
											"end": 12969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12867,
											"end": 12975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13050,
											"end": 13060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 13113,
											"end": 13116,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13105,
											"end": 13111,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 13071,
											"end": 13117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 13071,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13149,
											"end": 13153,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13144,
											"end": 13147,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13140,
											"end": 13154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13126,
											"end": 13154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13126,
											"end": 13154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13236,
											"end": 13240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13268,
											"end": 13272,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13263,
											"end": 13266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13259,
											"end": 13273,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13251,
											"end": 13273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13251,
											"end": 13273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13166,
											"end": 13279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13434,
											"end": 13437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 13511,
											"end": 13516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 13463,
											"end": 13517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 13463,
											"end": 13517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 13612,
											"end": 13618,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13607,
											"end": 13610,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 13533,
											"end": 13619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 13533,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13526,
											"end": 13619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 13693,
											"end": 13698,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 13643,
											"end": 13699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 13643,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13722,
											"end": 13729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13753,
											"end": 13754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 13769,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13757,
											"end": 13770,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13839,
											"end": 13845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13833,
											"end": 13846,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 13925,
											"end": 13928,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 13866,
											"end": 13929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 13866,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13859,
											"end": 13929,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 13859,
											"end": 13929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 14005,
											"end": 14011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 13952,
											"end": 14012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 13952,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13942,
											"end": 14012,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13942,
											"end": 14012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13798,
											"end": 14022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13785,
											"end": 13786,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13782,
											"end": 13783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13778,
											"end": 13787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 13738,
											"end": 14022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13742,
											"end": 13756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14038,
											"end": 14041,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14031,
											"end": 14041,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14031,
											"end": 14041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13439,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13439,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13439,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 14047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14196,
											"end": 14200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14234,
											"end": 14236,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14223,
											"end": 14232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14283,
											"end": 14292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14277,
											"end": 14281,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14273,
											"end": 14293,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14269,
											"end": 14270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14254,
											"end": 14271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14247,
											"end": 14294,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 14414,
											"end": 14418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14405,
											"end": 14411,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 14311,
											"end": 14419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 14311,
											"end": 14419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14303,
											"end": 14419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14303,
											"end": 14419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14053,
											"end": 14426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14432,
											"end": 14548,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 14432,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 14517,
											"end": 14522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 14502,
											"end": 14523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 14502,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14495,
											"end": 14500,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14492,
											"end": 14524,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14538,
											"end": 14539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14535,
											"end": 14536,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14528,
											"end": 14540,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 14482,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14432,
											"end": 14548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14432,
											"end": 14548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14597,
											"end": 14602,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14635,
											"end": 14641,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14622,
											"end": 14642,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 14613,
											"end": 14642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14613,
											"end": 14642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 14675,
											"end": 14680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 14651,
											"end": 14681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 14651,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14554,
											"end": 14687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14758,
											"end": 14764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14766,
											"end": 14772,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14817,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14803,
											"end": 14812,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14794,
											"end": 14801,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14790,
											"end": 14813,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14786,
											"end": 14818,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 14821,
											"end": 14900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 14821,
											"end": 14900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 14783,
											"end": 14902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14941,
											"end": 14942,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 15011,
											"end": 15018,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15002,
											"end": 15008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14991,
											"end": 15000,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14987,
											"end": 15009,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 14966,
											"end": 15019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14966,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14956,
											"end": 15019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14956,
											"end": 15019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14912,
											"end": 15029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15068,
											"end": 15070,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 15136,
											"end": 15143,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15127,
											"end": 15133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15116,
											"end": 15125,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15112,
											"end": 15134,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 15094,
											"end": 15144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 15094,
											"end": 15144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15084,
											"end": 15144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15039,
											"end": 15154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 15161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15235,
											"end": 15241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15243,
											"end": 15249,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15292,
											"end": 15294,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15280,
											"end": 15289,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15271,
											"end": 15278,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15267,
											"end": 15290,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15295,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 15298,
											"end": 15377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 15298,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 15260,
											"end": 15379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15418,
											"end": 15419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 15488,
											"end": 15495,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15479,
											"end": 15485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 15477,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15464,
											"end": 15486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 15443,
											"end": 15496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 15443,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15496,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15389,
											"end": 15506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15545,
											"end": 15547,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15616,
											"end": 15623,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15607,
											"end": 15613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15592,
											"end": 15614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 15571,
											"end": 15624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15571,
											"end": 15624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15561,
											"end": 15624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15561,
											"end": 15624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15167,
											"end": 15641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15751,
											"end": 15757,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15759,
											"end": 15765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15767,
											"end": 15773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15781,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15783,
											"end": 15789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15832,
											"end": 15835,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 15820,
											"end": 15829,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15811,
											"end": 15818,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 15807,
											"end": 15830,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15803,
											"end": 15836,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 15839,
											"end": 15918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15839,
											"end": 15918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 15800,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15959,
											"end": 15960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 16029,
											"end": 16036,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16020,
											"end": 16026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16009,
											"end": 16018,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16005,
											"end": 16027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 15984,
											"end": 16037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 15984,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15974,
											"end": 16037,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15974,
											"end": 16037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 16047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16086,
											"end": 16088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 16157,
											"end": 16164,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16148,
											"end": 16154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16137,
											"end": 16146,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16133,
											"end": 16155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 16112,
											"end": 16165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 16112,
											"end": 16165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16102,
											"end": 16165,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 16102,
											"end": 16165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16057,
											"end": 16175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16214,
											"end": 16216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 16285,
											"end": 16292,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16265,
											"end": 16274,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16261,
											"end": 16283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 16240,
											"end": 16293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 16240,
											"end": 16293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16293,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16185,
											"end": 16303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 16413,
											"end": 16420,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16404,
											"end": 16410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16393,
											"end": 16402,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16389,
											"end": 16411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 16368,
											"end": 16421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 16368,
											"end": 16421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16358,
											"end": 16421,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16358,
											"end": 16421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16313,
											"end": 16431,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16498,
											"end": 16501,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16487,
											"end": 16496,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16483,
											"end": 16502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16470,
											"end": 16503,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 16530,
											"end": 16548,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16522,
											"end": 16528,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16519,
											"end": 16549,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 16552,
											"end": 16631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 16552,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16516,
											"end": 16633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 16711,
											"end": 16718,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16702,
											"end": 16708,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16691,
											"end": 16700,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 16687,
											"end": 16709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 16657,
											"end": 16719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 16657,
											"end": 16719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16719,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16647,
											"end": 16719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16441,
											"end": 16729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 16736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16742,
											"end": 16972,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 16742,
											"end": 16972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16882,
											"end": 16916,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 16878,
											"end": 16879,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16870,
											"end": 16876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16866,
											"end": 16880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16859,
											"end": 16917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16951,
											"end": 16964,
											"name": "PUSH",
											"source": 10,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 16946,
											"end": 16948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16938,
											"end": 16944,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16934,
											"end": 16949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16927,
											"end": 16965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16742,
											"end": 16972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16742,
											"end": 16972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16978,
											"end": 17344,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 16978,
											"end": 17344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17120,
											"end": 17123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17141,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 17205,
											"end": 17207,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 17200,
											"end": 17203,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17141,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 17141,
											"end": 17208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17141,
											"end": 17208,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 17141,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17134,
											"end": 17208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17134,
											"end": 17208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17217,
											"end": 17310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 17306,
											"end": 17309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17217,
											"end": 17310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 17217,
											"end": 17310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17217,
											"end": 17310,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 17217,
											"end": 17310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17335,
											"end": 17337,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17330,
											"end": 17333,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17326,
											"end": 17338,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17319,
											"end": 17338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16978,
											"end": 17344,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16978,
											"end": 17344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16978,
											"end": 17344,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16978,
											"end": 17344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17350,
											"end": 17769,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 17350,
											"end": 17769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17516,
											"end": 17520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17554,
											"end": 17556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17543,
											"end": 17552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17539,
											"end": 17557,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17531,
											"end": 17557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17531,
											"end": 17557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17603,
											"end": 17612,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17597,
											"end": 17601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17593,
											"end": 17613,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17589,
											"end": 17590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17578,
											"end": 17587,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17574,
											"end": 17591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17567,
											"end": 17614,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17631,
											"end": 17762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 17757,
											"end": 17761,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17631,
											"end": 17762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 17631,
											"end": 17762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17631,
											"end": 17762,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 17631,
											"end": 17762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17623,
											"end": 17762,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17623,
											"end": 17762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17350,
											"end": 17769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17350,
											"end": 17769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17350,
											"end": 17769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17350,
											"end": 17769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17775,
											"end": 17955,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 17775,
											"end": 17955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17823,
											"end": 17900,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17820,
											"end": 17821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17813,
											"end": 17901,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17920,
											"end": 17924,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 17917,
											"end": 17918,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17910,
											"end": 17925,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17944,
											"end": 17948,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17941,
											"end": 17942,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17934,
											"end": 17949,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17961,
											"end": 18281,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 17961,
											"end": 18281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18005,
											"end": 18011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18042,
											"end": 18043,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 18036,
											"end": 18040,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18032,
											"end": 18044,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 18022,
											"end": 18044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18022,
											"end": 18044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18089,
											"end": 18090,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 18083,
											"end": 18087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18079,
											"end": 18091,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18110,
											"end": 18128,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18100,
											"end": 18181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 18100,
											"end": 18181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18166,
											"end": 18170,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 18158,
											"end": 18164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18154,
											"end": 18171,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18144,
											"end": 18171,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18144,
											"end": 18171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18100,
											"end": 18181,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 18100,
											"end": 18181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18230,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18220,
											"end": 18226,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18217,
											"end": 18231,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 18197,
											"end": 18215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18194,
											"end": 18232,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18191,
											"end": 18275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18191,
											"end": 18275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 18247,
											"end": 18265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18191,
											"end": 18275,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18191,
											"end": 18275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18012,
											"end": 18281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17961,
											"end": 18281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17961,
											"end": 18281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17961,
											"end": 18281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17961,
											"end": 18281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18287,
											"end": 18524,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 18287,
											"end": 18524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18427,
											"end": 18461,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 18423,
											"end": 18424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18415,
											"end": 18421,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18411,
											"end": 18425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18404,
											"end": 18462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18496,
											"end": 18516,
											"name": "PUSH",
											"source": 10,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 18491,
											"end": 18493,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18483,
											"end": 18489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18479,
											"end": 18494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18472,
											"end": 18517,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18287,
											"end": 18524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18287,
											"end": 18524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18530,
											"end": 18896,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 18530,
											"end": 18896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18672,
											"end": 18675,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18693,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 18757,
											"end": 18759,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 18752,
											"end": 18755,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18693,
											"end": 18760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 18693,
											"end": 18760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18693,
											"end": 18760,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 18693,
											"end": 18760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18686,
											"end": 18760,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18686,
											"end": 18760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18769,
											"end": 18862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 18858,
											"end": 18861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18769,
											"end": 18862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 18769,
											"end": 18862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18769,
											"end": 18862,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 18769,
											"end": 18862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18887,
											"end": 18889,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18882,
											"end": 18885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18878,
											"end": 18890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18871,
											"end": 18890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18871,
											"end": 18890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18530,
											"end": 18896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18530,
											"end": 18896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18530,
											"end": 18896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18530,
											"end": 18896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 19321,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 18902,
											"end": 19321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19068,
											"end": 19072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19106,
											"end": 19108,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19095,
											"end": 19104,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19091,
											"end": 19109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19083,
											"end": 19109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19083,
											"end": 19109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19155,
											"end": 19164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19153,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19145,
											"end": 19165,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19141,
											"end": 19142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19130,
											"end": 19139,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19119,
											"end": 19166,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19183,
											"end": 19314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19309,
											"end": 19313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19183,
											"end": 19314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 19183,
											"end": 19314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19183,
											"end": 19314,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19183,
											"end": 19314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19175,
											"end": 19314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19175,
											"end": 19314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 19321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 19321,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 19321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18902,
											"end": 19321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19327,
											"end": 19555,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 19327,
											"end": 19555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19467,
											"end": 19501,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 19463,
											"end": 19464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19455,
											"end": 19461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19451,
											"end": 19465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19444,
											"end": 19502,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19536,
											"end": 19547,
											"name": "PUSH",
											"source": 10,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19531,
											"end": 19533,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19523,
											"end": 19529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19519,
											"end": 19534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19512,
											"end": 19548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19327,
											"end": 19555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19327,
											"end": 19555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19561,
											"end": 19927,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 19561,
											"end": 19927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19703,
											"end": 19706,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19724,
											"end": 19791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 19788,
											"end": 19790,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 19783,
											"end": 19786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19724,
											"end": 19791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 19724,
											"end": 19791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19724,
											"end": 19791,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 19724,
											"end": 19791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19717,
											"end": 19791,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19717,
											"end": 19791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19800,
											"end": 19893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 19889,
											"end": 19892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19800,
											"end": 19893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 19800,
											"end": 19893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19800,
											"end": 19893,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 19800,
											"end": 19893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19918,
											"end": 19920,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19913,
											"end": 19916,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19909,
											"end": 19921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 19921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 19921,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19561,
											"end": 19927,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19561,
											"end": 19927,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19561,
											"end": 19927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19561,
											"end": 19927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19933,
											"end": 20352,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 19933,
											"end": 20352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20099,
											"end": 20103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20137,
											"end": 20139,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20126,
											"end": 20135,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20122,
											"end": 20140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20114,
											"end": 20140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20114,
											"end": 20140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20186,
											"end": 20195,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20180,
											"end": 20184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20176,
											"end": 20196,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20172,
											"end": 20173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20161,
											"end": 20170,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20157,
											"end": 20174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20150,
											"end": 20197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20214,
											"end": 20345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 20340,
											"end": 20344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20214,
											"end": 20345,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 20214,
											"end": 20345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20214,
											"end": 20345,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 20214,
											"end": 20345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20206,
											"end": 20345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20206,
											"end": 20345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19933,
											"end": 20352,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19933,
											"end": 20352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19933,
											"end": 20352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19933,
											"end": 20352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20358,
											"end": 20538,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 20358,
											"end": 20538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20406,
											"end": 20483,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20403,
											"end": 20404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20396,
											"end": 20484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20503,
											"end": 20507,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 20500,
											"end": 20501,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20493,
											"end": 20508,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20527,
											"end": 20531,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20524,
											"end": 20525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20517,
											"end": 20532,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20544,
											"end": 20724,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 20544,
											"end": 20724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20592,
											"end": 20669,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20589,
											"end": 20590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20582,
											"end": 20670,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20689,
											"end": 20693,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 20686,
											"end": 20687,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20679,
											"end": 20694,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20713,
											"end": 20717,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20710,
											"end": 20711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20703,
											"end": 20718,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20730,
											"end": 20963,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 20730,
											"end": 20963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20769,
											"end": 20772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20792,
											"end": 20816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 20810,
											"end": 20815,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20792,
											"end": 20816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 20792,
											"end": 20816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20792,
											"end": 20816,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 20792,
											"end": 20816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20783,
											"end": 20816,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20783,
											"end": 20816,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20838,
											"end": 20904,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20831,
											"end": 20836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20828,
											"end": 20905,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20825,
											"end": 20928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 20825,
											"end": 20928,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20908,
											"end": 20926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 20908,
											"end": 20926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 20908,
											"end": 20926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20908,
											"end": 20926,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 20908,
											"end": 20926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20825,
											"end": 20928,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 20825,
											"end": 20928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20955,
											"end": 20956,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20948,
											"end": 20953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20944,
											"end": 20957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20937,
											"end": 20957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20937,
											"end": 20957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20730,
											"end": 20963,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20730,
											"end": 20963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20730,
											"end": 20963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20730,
											"end": 20963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20969,
											"end": 21197,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 20969,
											"end": 21197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21109,
											"end": 21143,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 21105,
											"end": 21106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21097,
											"end": 21103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21093,
											"end": 21107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21086,
											"end": 21144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21178,
											"end": 21189,
											"name": "PUSH",
											"source": 10,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21173,
											"end": 21175,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21165,
											"end": 21171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21161,
											"end": 21176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21154,
											"end": 21190,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20969,
											"end": 21197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20969,
											"end": 21197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21203,
											"end": 21569,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 21203,
											"end": 21569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21345,
											"end": 21348,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21366,
											"end": 21433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 21430,
											"end": 21432,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 21425,
											"end": 21428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21366,
											"end": 21433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 21366,
											"end": 21433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21366,
											"end": 21433,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 21366,
											"end": 21433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21359,
											"end": 21433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21359,
											"end": 21433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21442,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 21531,
											"end": 21534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21442,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 21442,
											"end": 21535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21442,
											"end": 21535,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 21442,
											"end": 21535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21560,
											"end": 21562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21555,
											"end": 21558,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21551,
											"end": 21563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21544,
											"end": 21563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21544,
											"end": 21563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21203,
											"end": 21569,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21203,
											"end": 21569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21203,
											"end": 21569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21203,
											"end": 21569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21575,
											"end": 21994,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 21575,
											"end": 21994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21741,
											"end": 21745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21779,
											"end": 21781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21768,
											"end": 21777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21764,
											"end": 21782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21756,
											"end": 21782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21756,
											"end": 21782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21828,
											"end": 21837,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21822,
											"end": 21826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21818,
											"end": 21838,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21814,
											"end": 21815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21803,
											"end": 21812,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21799,
											"end": 21816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21792,
											"end": 21839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21856,
											"end": 21987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 21982,
											"end": 21986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21856,
											"end": 21987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 21856,
											"end": 21987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21856,
											"end": 21987,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 21856,
											"end": 21987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21848,
											"end": 21987,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21848,
											"end": 21987,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21575,
											"end": 21994,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21575,
											"end": 21994,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21575,
											"end": 21994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21575,
											"end": 21994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22000,
											"end": 22227,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 22000,
											"end": 22227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22140,
											"end": 22174,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 22136,
											"end": 22137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22128,
											"end": 22134,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22124,
											"end": 22138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22117,
											"end": 22175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22209,
											"end": 22219,
											"name": "PUSH",
											"source": 10,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22204,
											"end": 22206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22196,
											"end": 22202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22192,
											"end": 22207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22185,
											"end": 22220,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22000,
											"end": 22227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22000,
											"end": 22227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22599,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 22233,
											"end": 22599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22375,
											"end": 22378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22396,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 22460,
											"end": 22462,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 22455,
											"end": 22458,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22396,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 22396,
											"end": 22463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22396,
											"end": 22463,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 22396,
											"end": 22463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22389,
											"end": 22463,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22389,
											"end": 22463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 22561,
											"end": 22564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 22472,
											"end": 22565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22472,
											"end": 22565,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 22472,
											"end": 22565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22590,
											"end": 22592,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22585,
											"end": 22588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22581,
											"end": 22593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22574,
											"end": 22593,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22574,
											"end": 22593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22599,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22233,
											"end": 22599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22605,
											"end": 23024,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 22605,
											"end": 23024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22771,
											"end": 22775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22809,
											"end": 22811,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22798,
											"end": 22807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22794,
											"end": 22812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22786,
											"end": 22812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22786,
											"end": 22812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22858,
											"end": 22867,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22852,
											"end": 22856,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22848,
											"end": 22868,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22844,
											"end": 22845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22833,
											"end": 22842,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22829,
											"end": 22846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22822,
											"end": 22869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22886,
											"end": 23017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 23012,
											"end": 23016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22886,
											"end": 23017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 22886,
											"end": 23017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22886,
											"end": 23017,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 22886,
											"end": 23017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22878,
											"end": 23017,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22878,
											"end": 23017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22605,
											"end": 23024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22605,
											"end": 23024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22605,
											"end": 23024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22605,
											"end": 23024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23030,
											"end": 23254,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 23030,
											"end": 23254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23170,
											"end": 23204,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 23166,
											"end": 23167,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23158,
											"end": 23164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23154,
											"end": 23168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23147,
											"end": 23205,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23239,
											"end": 23246,
											"name": "PUSH",
											"source": 10,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23234,
											"end": 23236,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23226,
											"end": 23232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23222,
											"end": 23237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23215,
											"end": 23247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23030,
											"end": 23254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23030,
											"end": 23254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23260,
											"end": 23626,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 23260,
											"end": 23626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23402,
											"end": 23405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23423,
											"end": 23490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 23487,
											"end": 23489,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 23482,
											"end": 23485,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23423,
											"end": 23490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 23423,
											"end": 23490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23423,
											"end": 23490,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 23423,
											"end": 23490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23416,
											"end": 23490,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23416,
											"end": 23490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23499,
											"end": 23592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 23588,
											"end": 23591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23499,
											"end": 23592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 23499,
											"end": 23592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23499,
											"end": 23592,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 23499,
											"end": 23592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23617,
											"end": 23619,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23612,
											"end": 23615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23608,
											"end": 23620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23601,
											"end": 23620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23601,
											"end": 23620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23260,
											"end": 23626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23260,
											"end": 23626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23260,
											"end": 23626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23260,
											"end": 23626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23632,
											"end": 24051,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 23632,
											"end": 24051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23798,
											"end": 23802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23836,
											"end": 23838,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23825,
											"end": 23834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23821,
											"end": 23839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23813,
											"end": 23839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23813,
											"end": 23839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23885,
											"end": 23894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23879,
											"end": 23883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23875,
											"end": 23895,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23871,
											"end": 23872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23860,
											"end": 23869,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23856,
											"end": 23873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23849,
											"end": 23896,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23913,
											"end": 24044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 24039,
											"end": 24043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23913,
											"end": 24044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 23913,
											"end": 24044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23913,
											"end": 24044,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 23913,
											"end": 24044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23905,
											"end": 24044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23905,
											"end": 24044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23632,
											"end": 24051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23632,
											"end": 24051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23632,
											"end": 24051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23632,
											"end": 24051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24057,
											"end": 24286,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 24057,
											"end": 24286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24197,
											"end": 24231,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 24193,
											"end": 24194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24185,
											"end": 24191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24181,
											"end": 24195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24174,
											"end": 24232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24266,
											"end": 24278,
											"name": "PUSH",
											"source": 10,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 24261,
											"end": 24263,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24253,
											"end": 24259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24249,
											"end": 24264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24242,
											"end": 24279,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24057,
											"end": 24286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24057,
											"end": 24286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24292,
											"end": 24658,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 24292,
											"end": 24658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24434,
											"end": 24437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24455,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 24519,
											"end": 24521,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 24514,
											"end": 24517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24455,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 24455,
											"end": 24522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24455,
											"end": 24522,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 24455,
											"end": 24522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24448,
											"end": 24522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24448,
											"end": 24522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24531,
											"end": 24624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 24620,
											"end": 24623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24531,
											"end": 24624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 24531,
											"end": 24624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24531,
											"end": 24624,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 24531,
											"end": 24624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24649,
											"end": 24651,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24644,
											"end": 24647,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24640,
											"end": 24652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24633,
											"end": 24652,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24633,
											"end": 24652,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24292,
											"end": 24658,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24292,
											"end": 24658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24292,
											"end": 24658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24292,
											"end": 24658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24664,
											"end": 25083,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 24664,
											"end": 25083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24830,
											"end": 24834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24868,
											"end": 24870,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24857,
											"end": 24866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24853,
											"end": 24871,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24845,
											"end": 24871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24845,
											"end": 24871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24917,
											"end": 24926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24911,
											"end": 24915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24907,
											"end": 24927,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24903,
											"end": 24904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24892,
											"end": 24901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24888,
											"end": 24905,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24881,
											"end": 24928,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24945,
											"end": 25076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 25071,
											"end": 25075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24945,
											"end": 25076,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 24945,
											"end": 25076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24945,
											"end": 25076,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 24945,
											"end": 25076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24937,
											"end": 25076,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24937,
											"end": 25076,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24664,
											"end": 25083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24664,
											"end": 25083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24664,
											"end": 25083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24664,
											"end": 25083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25089,
											"end": 25280,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 25089,
											"end": 25280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25129,
											"end": 25132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25148,
											"end": 25168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 25166,
											"end": 25167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25148,
											"end": 25168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 25148,
											"end": 25168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25148,
											"end": 25168,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 25148,
											"end": 25168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25143,
											"end": 25168,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25143,
											"end": 25168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25182,
											"end": 25202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 25200,
											"end": 25201,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25182,
											"end": 25202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 25182,
											"end": 25202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25182,
											"end": 25202,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 25182,
											"end": 25202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25177,
											"end": 25202,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25177,
											"end": 25202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25225,
											"end": 25226,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25222,
											"end": 25223,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25218,
											"end": 25227,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25246,
											"end": 25249,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 25243,
											"end": 25244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25240,
											"end": 25250,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 25237,
											"end": 25273,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 25237,
											"end": 25273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 25237,
											"end": 25273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 25253,
											"end": 25271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 25253,
											"end": 25271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 25253,
											"end": 25271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25253,
											"end": 25271,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 25253,
											"end": 25271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25237,
											"end": 25273,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 25237,
											"end": 25273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25089,
											"end": 25280,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25089,
											"end": 25280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25089,
											"end": 25280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25089,
											"end": 25280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25089,
											"end": 25280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25286,
											"end": 25920,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 25286,
											"end": 25920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25507,
											"end": 25511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25545,
											"end": 25547,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25534,
											"end": 25543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25530,
											"end": 25548,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25522,
											"end": 25548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25522,
											"end": 25548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25594,
											"end": 25603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25588,
											"end": 25592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25584,
											"end": 25604,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25580,
											"end": 25581,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25569,
											"end": 25578,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25565,
											"end": 25582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25558,
											"end": 25605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25622,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 25725,
											"end": 25729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25716,
											"end": 25722,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25622,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 25622,
											"end": 25730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25622,
											"end": 25730,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 25622,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25614,
											"end": 25730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25614,
											"end": 25730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25777,
											"end": 25786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25771,
											"end": 25775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25767,
											"end": 25787,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25762,
											"end": 25764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25751,
											"end": 25760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25747,
											"end": 25765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25740,
											"end": 25788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25805,
											"end": 25913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 25908,
											"end": 25912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25899,
											"end": 25905,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25805,
											"end": 25913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 25805,
											"end": 25913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25805,
											"end": 25913,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 25805,
											"end": 25913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25797,
											"end": 25913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25797,
											"end": 25913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25286,
											"end": 25920,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 25286,
											"end": 25920,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25286,
											"end": 25920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25286,
											"end": 25920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25286,
											"end": 25920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25286,
											"end": 25920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25926,
											"end": 26154,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 25926,
											"end": 26154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26066,
											"end": 26100,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 26062,
											"end": 26063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26054,
											"end": 26060,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26050,
											"end": 26064,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26043,
											"end": 26101,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26135,
											"end": 26146,
											"name": "PUSH",
											"source": 10,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26130,
											"end": 26132,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26122,
											"end": 26128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26118,
											"end": 26133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26111,
											"end": 26147,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25926,
											"end": 26154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25926,
											"end": 26154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26526,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 26160,
											"end": 26526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26302,
											"end": 26305,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26323,
											"end": 26390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 26387,
											"end": 26389,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 26382,
											"end": 26385,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26323,
											"end": 26390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 26323,
											"end": 26390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26323,
											"end": 26390,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 26323,
											"end": 26390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26316,
											"end": 26390,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26316,
											"end": 26390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26399,
											"end": 26492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 26488,
											"end": 26491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26399,
											"end": 26492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 26399,
											"end": 26492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26399,
											"end": 26492,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 26399,
											"end": 26492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26517,
											"end": 26519,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 26512,
											"end": 26515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26508,
											"end": 26520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26501,
											"end": 26520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26501,
											"end": 26520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26526,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26526,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26532,
											"end": 26951,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 26532,
											"end": 26951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26698,
											"end": 26702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26736,
											"end": 26738,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26725,
											"end": 26734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26721,
											"end": 26739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26713,
											"end": 26739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26713,
											"end": 26739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26785,
											"end": 26794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26779,
											"end": 26783,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26775,
											"end": 26795,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26771,
											"end": 26772,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26760,
											"end": 26769,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26756,
											"end": 26773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26749,
											"end": 26796,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26813,
											"end": 26944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 26939,
											"end": 26943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26813,
											"end": 26944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 26813,
											"end": 26944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26813,
											"end": 26944,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 26813,
											"end": 26944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26805,
											"end": 26944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26805,
											"end": 26944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26532,
											"end": 26951,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26532,
											"end": 26951,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26532,
											"end": 26951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26532,
											"end": 26951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26957,
											"end": 27289,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 26957,
											"end": 27289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27078,
											"end": 27082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27116,
											"end": 27118,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 27105,
											"end": 27114,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27101,
											"end": 27119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27093,
											"end": 27119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27093,
											"end": 27119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27129,
											"end": 27200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 27197,
											"end": 27198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27186,
											"end": 27195,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27182,
											"end": 27199,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27173,
											"end": 27179,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 27129,
											"end": 27200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 27129,
											"end": 27200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27129,
											"end": 27200,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 27129,
											"end": 27200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27210,
											"end": 27282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 27278,
											"end": 27280,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27267,
											"end": 27276,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27263,
											"end": 27281,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27254,
											"end": 27260,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27210,
											"end": 27282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 27210,
											"end": 27282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27210,
											"end": 27282,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 27210,
											"end": 27282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26957,
											"end": 27289,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 26957,
											"end": 27289,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26957,
											"end": 27289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26957,
											"end": 27289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26957,
											"end": 27289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26957,
											"end": 27289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27295,
											"end": 27413,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 27295,
											"end": 27413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27382,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 27400,
											"end": 27405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27382,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 27382,
											"end": 27406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27382,
											"end": 27406,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 27382,
											"end": 27406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27377,
											"end": 27380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27370,
											"end": 27407,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27295,
											"end": 27413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27295,
											"end": 27413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27295,
											"end": 27413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27419,
											"end": 27517,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 27419,
											"end": 27517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27470,
											"end": 27476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27509,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27498,
											"end": 27510,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 27488,
											"end": 27510,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27488,
											"end": 27510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27419,
											"end": 27517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27419,
											"end": 27517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27419,
											"end": 27517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27419,
											"end": 27517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27523,
											"end": 27691,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 27523,
											"end": 27691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27606,
											"end": 27617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27640,
											"end": 27646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27635,
											"end": 27638,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27628,
											"end": 27647,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27680,
											"end": 27684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27675,
											"end": 27678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27671,
											"end": 27685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27656,
											"end": 27685,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27656,
											"end": 27685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27523,
											"end": 27691,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 27523,
											"end": 27691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27523,
											"end": 27691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27523,
											"end": 27691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27523,
											"end": 27691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27697,
											"end": 28070,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 27697,
											"end": 28070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27783,
											"end": 27786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27811,
											"end": 27849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 27843,
											"end": 27848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27811,
											"end": 27849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 27811,
											"end": 27849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27811,
											"end": 27849,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 27811,
											"end": 27849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27865,
											"end": 27935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 27928,
											"end": 27934,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27923,
											"end": 27926,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 27865,
											"end": 27935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 27865,
											"end": 27935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27865,
											"end": 27935,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 27865,
											"end": 27935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27858,
											"end": 27935,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 27858,
											"end": 27935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27944,
											"end": 28009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 28002,
											"end": 28008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27997,
											"end": 28000,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 27990,
											"end": 27994,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27983,
											"end": 27988,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 27979,
											"end": 27995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27944,
											"end": 28009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 27944,
											"end": 28009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27944,
											"end": 28009,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 27944,
											"end": 28009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28034,
											"end": 28063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 28056,
											"end": 28062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28034,
											"end": 28063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 28034,
											"end": 28063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28034,
											"end": 28063,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 28034,
											"end": 28063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28029,
											"end": 28032,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28025,
											"end": 28064,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28018,
											"end": 28064,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28018,
											"end": 28064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27787,
											"end": 28070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27697,
											"end": 28070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 27697,
											"end": 28070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27697,
											"end": 28070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27697,
											"end": 28070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27697,
											"end": 28070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28399,
											"end": 28403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28437,
											"end": 28440,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 28426,
											"end": 28435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28422,
											"end": 28441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28414,
											"end": 28441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28414,
											"end": 28441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28451,
											"end": 28522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 28519,
											"end": 28520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28508,
											"end": 28517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28504,
											"end": 28521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28495,
											"end": 28501,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 28451,
											"end": 28522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 28451,
											"end": 28522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28451,
											"end": 28522,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 28451,
											"end": 28522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28532,
											"end": 28604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 28600,
											"end": 28602,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28589,
											"end": 28598,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28585,
											"end": 28603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28576,
											"end": 28582,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 28532,
											"end": 28604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 28532,
											"end": 28604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28532,
											"end": 28604,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 28532,
											"end": 28604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28651,
											"end": 28660,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28645,
											"end": 28649,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28641,
											"end": 28661,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 28636,
											"end": 28638,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 28625,
											"end": 28634,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28621,
											"end": 28639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28614,
											"end": 28662,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28679,
											"end": 28787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 28782,
											"end": 28786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28773,
											"end": 28779,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 28679,
											"end": 28787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 28679,
											"end": 28787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28679,
											"end": 28787,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 28679,
											"end": 28787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28671,
											"end": 28787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28671,
											"end": 28787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28834,
											"end": 28843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28828,
											"end": 28832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28824,
											"end": 28844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 28819,
											"end": 28821,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 28808,
											"end": 28817,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28804,
											"end": 28822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28797,
											"end": 28845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28862,
											"end": 28970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 28965,
											"end": 28969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28956,
											"end": 28962,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 28862,
											"end": 28970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 28862,
											"end": 28970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28862,
											"end": 28970,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 28862,
											"end": 28970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28854,
											"end": 28970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28854,
											"end": 28970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29018,
											"end": 29027,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29012,
											"end": 29016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29008,
											"end": 29028,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 29002,
											"end": 29005,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 28991,
											"end": 29000,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28987,
											"end": 29006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28980,
											"end": 29029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29046,
											"end": 29122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 29117,
											"end": 29121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29108,
											"end": 29114,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 29046,
											"end": 29122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 29046,
											"end": 29122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29046,
											"end": 29122,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 29046,
											"end": 29122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29038,
											"end": 29122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29038,
											"end": 29122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28076,
											"end": 29129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29135,
											"end": 29276,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 29135,
											"end": 29276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29191,
											"end": 29196,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29222,
											"end": 29228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29216,
											"end": 29229,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 29207,
											"end": 29229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29207,
											"end": 29229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29238,
											"end": 29270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 29264,
											"end": 29269,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29238,
											"end": 29270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 29238,
											"end": 29270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29238,
											"end": 29270,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 29238,
											"end": 29270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29135,
											"end": 29276,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 29135,
											"end": 29276,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29135,
											"end": 29276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29135,
											"end": 29276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29135,
											"end": 29276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29282,
											"end": 29631,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 29282,
											"end": 29631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29351,
											"end": 29357,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29400,
											"end": 29402,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29388,
											"end": 29397,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29379,
											"end": 29386,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 29375,
											"end": 29398,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 29371,
											"end": 29403,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 29368,
											"end": 29487,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 29368,
											"end": 29487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 29368,
											"end": 29487,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29406,
											"end": 29485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 29406,
											"end": 29485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 29406,
											"end": 29485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29406,
											"end": 29485,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 29406,
											"end": 29485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29368,
											"end": 29487,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 29368,
											"end": 29487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29526,
											"end": 29527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29551,
											"end": 29614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 29606,
											"end": 29613,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 29597,
											"end": 29603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29586,
											"end": 29595,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 29582,
											"end": 29604,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29551,
											"end": 29614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 29551,
											"end": 29614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29551,
											"end": 29614,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 29551,
											"end": 29614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29541,
											"end": 29614,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29541,
											"end": 29614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29497,
											"end": 29624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29282,
											"end": 29631,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 29282,
											"end": 29631,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29282,
											"end": 29631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29282,
											"end": 29631,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29282,
											"end": 29631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29637,
											"end": 29743,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 29637,
											"end": 29743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29681,
											"end": 29689,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29730,
											"end": 29735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29725,
											"end": 29728,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 29721,
											"end": 29736,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 29700,
											"end": 29736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29700,
											"end": 29736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29637,
											"end": 29743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29637,
											"end": 29743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29637,
											"end": 29743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29637,
											"end": 29743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29749,
											"end": 29932,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 29749,
											"end": 29932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29784,
											"end": 29787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29822,
											"end": 29823,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 29804,
											"end": 29820,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 29801,
											"end": 29824,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 29798,
											"end": 29926,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 29798,
											"end": 29926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 29798,
											"end": 29926,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29860,
											"end": 29861,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 29857,
											"end": 29858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29854,
											"end": 29855,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29839,
											"end": 29862,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 29882,
											"end": 29916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 29913,
											"end": 29914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29907,
											"end": 29915,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 29882,
											"end": 29916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 29882,
											"end": 29916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29882,
											"end": 29916,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 29882,
											"end": 29916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29875,
											"end": 29916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29875,
											"end": 29916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29798,
											"end": 29926,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 29798,
											"end": 29926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29749,
											"end": 29932,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29749,
											"end": 29932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29938,
											"end": 30649,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 29938,
											"end": 30649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29977,
											"end": 29980,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30015,
											"end": 30019,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 29997,
											"end": 30013,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 29994,
											"end": 30020,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 30023,
											"end": 30028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 29991,
											"end": 30030,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30052,
											"end": 30072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 30052,
											"end": 30072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 30052,
											"end": 30072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30052,
											"end": 30072,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 30052,
											"end": 30072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30127,
											"end": 30128,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 30109,
											"end": 30125,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 30105,
											"end": 30129,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 30102,
											"end": 30103,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 30096,
											"end": 30100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30081,
											"end": 30130,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 30160,
											"end": 30164,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 30154,
											"end": 30165,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 30259,
											"end": 30275,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 30252,
											"end": 30256,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 30244,
											"end": 30250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30240,
											"end": 30257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30237,
											"end": 30276,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 30204,
											"end": 30222,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30196,
											"end": 30202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30193,
											"end": 30223,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 30177,
											"end": 30290,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 30174,
											"end": 30320,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 30174,
											"end": 30320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 30174,
											"end": 30320,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30305,
											"end": 30310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30305,
											"end": 30310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30305,
											"end": 30310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 30305,
											"end": 30310,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30174,
											"end": 30320,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 30174,
											"end": 30320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30351,
											"end": 30357,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 30345,
											"end": 30349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30341,
											"end": 30358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30387,
											"end": 30390,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 30381,
											"end": 30391,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 30414,
											"end": 30432,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30406,
											"end": 30412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30403,
											"end": 30433,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 30400,
											"end": 30443,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 30400,
											"end": 30443,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 30400,
											"end": 30443,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30436,
											"end": 30441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30436,
											"end": 30441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30436,
											"end": 30441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30436,
											"end": 30441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30436,
											"end": 30441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 30436,
											"end": 30441,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30400,
											"end": 30443,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 30400,
											"end": 30443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30484,
											"end": 30490,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 30477,
											"end": 30481,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30472,
											"end": 30475,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30468,
											"end": 30482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30464,
											"end": 30491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30543,
											"end": 30544,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 30525,
											"end": 30541,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 30521,
											"end": 30545,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 30515,
											"end": 30519,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 30511,
											"end": 30546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30506,
											"end": 30509,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30503,
											"end": 30547,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 30500,
											"end": 30557,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 30500,
											"end": 30557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 30500,
											"end": 30557,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30550,
											"end": 30555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30550,
											"end": 30555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30550,
											"end": 30555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30550,
											"end": 30555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30550,
											"end": 30555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30550,
											"end": 30555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 30550,
											"end": 30555,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30500,
											"end": 30557,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 30500,
											"end": 30557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30567,
											"end": 30624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 30615,
											"end": 30621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30609,
											"end": 30613,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30605,
											"end": 30622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30597,
											"end": 30603,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 30593,
											"end": 30623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30587,
											"end": 30591,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 30567,
											"end": 30624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 30567,
											"end": 30624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30567,
											"end": 30624,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 30567,
											"end": 30624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30640,
											"end": 30643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30633,
											"end": 30643,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 30633,
											"end": 30643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29981,
											"end": 30649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29981,
											"end": 30649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29981,
											"end": 30649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29981,
											"end": 30649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29981,
											"end": 30649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29938,
											"end": 30649,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 29938,
											"end": 30649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29938,
											"end": 30649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29938,
											"end": 30649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30655,
											"end": 30894,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 30655,
											"end": 30894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30795,
											"end": 30829,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 30791,
											"end": 30792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30783,
											"end": 30789,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30779,
											"end": 30793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30772,
											"end": 30830,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30864,
											"end": 30886,
											"name": "PUSH",
											"source": 10,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 30859,
											"end": 30861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30851,
											"end": 30857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30847,
											"end": 30862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30840,
											"end": 30887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30655,
											"end": 30894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30655,
											"end": 30894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30900,
											"end": 31266,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 30900,
											"end": 31266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31042,
											"end": 31045,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31063,
											"end": 31130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 31127,
											"end": 31129,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 31122,
											"end": 31125,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31063,
											"end": 31130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 31063,
											"end": 31130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31063,
											"end": 31130,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 31063,
											"end": 31130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31056,
											"end": 31130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31056,
											"end": 31130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31139,
											"end": 31232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 31228,
											"end": 31231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31139,
											"end": 31232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 31139,
											"end": 31232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31139,
											"end": 31232,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 31139,
											"end": 31232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31257,
											"end": 31259,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 31252,
											"end": 31255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31248,
											"end": 31260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31241,
											"end": 31260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31241,
											"end": 31260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30900,
											"end": 31266,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30900,
											"end": 31266,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30900,
											"end": 31266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30900,
											"end": 31266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31272,
											"end": 31691,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 31272,
											"end": 31691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31438,
											"end": 31442,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31476,
											"end": 31478,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 31465,
											"end": 31474,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31461,
											"end": 31479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31453,
											"end": 31479,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31453,
											"end": 31479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31525,
											"end": 31534,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31519,
											"end": 31523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31515,
											"end": 31535,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 31511,
											"end": 31512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31500,
											"end": 31509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31496,
											"end": 31513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31489,
											"end": 31536,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 31553,
											"end": 31684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 31679,
											"end": 31683,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31553,
											"end": 31684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 31553,
											"end": 31684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31553,
											"end": 31684,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 31553,
											"end": 31684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31545,
											"end": 31684,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31545,
											"end": 31684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31272,
											"end": 31691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31272,
											"end": 31691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31272,
											"end": 31691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31272,
											"end": 31691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31697,
											"end": 31924,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 31697,
											"end": 31924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31837,
											"end": 31871,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 31833,
											"end": 31834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31825,
											"end": 31831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31821,
											"end": 31835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31814,
											"end": 31872,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 31906,
											"end": 31916,
											"name": "PUSH",
											"source": 10,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31901,
											"end": 31903,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 31893,
											"end": 31899,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31889,
											"end": 31904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31882,
											"end": 31917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 31697,
											"end": 31924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31697,
											"end": 31924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31930,
											"end": 32296,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 31930,
											"end": 32296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32072,
											"end": 32075,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32093,
											"end": 32160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 32157,
											"end": 32159,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 32152,
											"end": 32155,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32093,
											"end": 32160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 32093,
											"end": 32160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32093,
											"end": 32160,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 32093,
											"end": 32160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32086,
											"end": 32160,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 32086,
											"end": 32160,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32169,
											"end": 32262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 32258,
											"end": 32261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32169,
											"end": 32262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 32169,
											"end": 32262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32169,
											"end": 32262,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 32169,
											"end": 32262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32287,
											"end": 32289,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 32282,
											"end": 32285,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32278,
											"end": 32290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32271,
											"end": 32290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32271,
											"end": 32290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31930,
											"end": 32296,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31930,
											"end": 32296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31930,
											"end": 32296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31930,
											"end": 32296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32302,
											"end": 32721,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 32302,
											"end": 32721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32468,
											"end": 32472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32506,
											"end": 32508,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 32495,
											"end": 32504,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32491,
											"end": 32509,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32483,
											"end": 32509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32483,
											"end": 32509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32555,
											"end": 32564,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32549,
											"end": 32553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32545,
											"end": 32565,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 32541,
											"end": 32542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32530,
											"end": 32539,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32526,
											"end": 32543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32519,
											"end": 32566,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 32583,
											"end": 32714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 32709,
											"end": 32713,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32583,
											"end": 32714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 32583,
											"end": 32714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32583,
											"end": 32714,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 32583,
											"end": 32714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32575,
											"end": 32714,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32575,
											"end": 32714,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32302,
											"end": 32721,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 32302,
											"end": 32721,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32302,
											"end": 32721,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32302,
											"end": 32721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32950,
											"end": 32954,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32988,
											"end": 32991,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 32977,
											"end": 32986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32973,
											"end": 32992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 32965,
											"end": 32992,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32965,
											"end": 32992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33002,
											"end": 33073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 33070,
											"end": 33071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 33059,
											"end": 33068,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 33055,
											"end": 33072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33046,
											"end": 33052,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 33002,
											"end": 33073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 33002,
											"end": 33073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33002,
											"end": 33073,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 33002,
											"end": 33073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33083,
											"end": 33155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 33151,
											"end": 33153,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 33140,
											"end": 33149,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 33136,
											"end": 33154,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33127,
											"end": 33133,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 33083,
											"end": 33155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 33083,
											"end": 33155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33083,
											"end": 33155,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 33083,
											"end": 33155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33165,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 33233,
											"end": 33235,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 33222,
											"end": 33231,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 33218,
											"end": 33236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33209,
											"end": 33215,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 33165,
											"end": 33237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 33165,
											"end": 33237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33165,
											"end": 33237,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 33165,
											"end": 33237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33247,
											"end": 33319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 33315,
											"end": 33317,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 33304,
											"end": 33313,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 33300,
											"end": 33318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33291,
											"end": 33297,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 33247,
											"end": 33319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 33247,
											"end": 33319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33247,
											"end": 33319,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 33247,
											"end": 33319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33367,
											"end": 33376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33361,
											"end": 33365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33357,
											"end": 33377,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 33351,
											"end": 33354,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 33340,
											"end": 33349,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 33336,
											"end": 33355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33329,
											"end": 33378,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 33395,
											"end": 33471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 33466,
											"end": 33470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33457,
											"end": 33463,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 33395,
											"end": 33471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 33395,
											"end": 33471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33395,
											"end": 33471,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 33395,
											"end": 33471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33387,
											"end": 33471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 33387,
											"end": 33471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32727,
											"end": 33478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"CupCake_DEX_contracts/cupexERC1155.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 76,
								"contract": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 78,
								"contract": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ERC1155Supply": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply(uint256)": {
								"details": "Total amount of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply(uint256)\":{\"details\":\"Total amount of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xe3deb5f3b0c9d12944f62ab680f041bbf1910d9d3ac6b545b4b8e399643c538d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1f5bc920c2f9859b02dce02d7d0211608398287c643d42ad048555c9b204dc8\",\"dweb:/ipfs/QmSu2MFkCSPNG6pRsXxMai7Do7EDqLwpnnHVDB7q2wHJnr\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 70,
								"contract": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 76,
								"contract": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 78,
								"contract": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1440,
								"contract": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009f8f183f2c5616071358ff322f9e0847aefc13a0b2342f268eec7d5526b6e4864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009f8f183f2c5616071358ff322f9e0847aefc13a0b2342f268eec7d5526b6e4864736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xF8 CALL DUP4 CALLCODE 0xC5 PUSH2 0x6071 CALLDATALOAD DUP16 RETURN 0x22 0xF9 0xE0 DUP5 PUSH27 0xEFC13A0B2342F268EEC7D5526B6E4864736F6C6343000811003300 ",
							"sourceMap": "194:8061:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122009f8f183f2c5616071358ff322f9e0847aefc13a0b2342f268eec7d5526b6e4864736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xF8 CALL DUP4 CALLCODE 0xC5 PUSH2 0x6071 CALLDATALOAD DUP16 RETURN 0x22 0xF9 0xE0 DUP5 PUSH27 0xEFC13A0B2342F268EEC7D5526B6E4864736F6C6343000811003300 ",
							"sourceMap": "194:8061:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009f8f183f2c5616071358ff322f9e0847aefc13a0b2342f268eec7d5526b6e4864736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"CupCake_DEX_contracts/cupexERC1155.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol",
								"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"CupCake_DEX_contracts/cupexERC1155.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/cupexERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1897
						],
						"Context": [
							1919
						],
						"ERC1155": [
							1267
						],
						"ERC1155Supply": [
							1587
						],
						"ERC165": [
							1943
						],
						"IERC1155": [
							1389
						],
						"IERC1155MetadataURI": [
							1602
						],
						"IERC1155Receiver": [
							1430
						],
						"IERC165": [
							1955
						],
						"cupexERC1155": [
							44
						]
					},
					"id": 45,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"file": "./openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 1588,
							"src": "58:93:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC1155Supply",
										"nameLocations": [
											"187:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1587,
										"src": "187:13:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "187:13:0"
								}
							],
							"canonicalName": "cupexERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44,
								1587,
								1267,
								1602,
								1389,
								1943,
								1955,
								1919
							],
							"name": "cupexERC1155",
							"nameLocation": "171:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "contractName",
									"nameLocation": "212:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "205:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 5,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "205:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "43757043616b655f444558",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "227:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_86eaffdac04834f6a42b9e2b6b933d83ad03e647213536c19941c44d2afaeded",
											"typeString": "literal_string \"CupCake_DEX\""
										},
										"value": "CupCake_DEX"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "contractSymbol",
									"nameLocation": "251:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "244:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 8,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "244:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4355504558",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "268:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b4460bff7f97349e815d3f11fce3914994cdc924bf1b42243e6ffe850c79c76a",
											"typeString": "literal_string \"CUPEX\""
										},
										"value": "CUPEX"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "urlPrefix",
									"nameLocation": "286:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "279:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 11,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "279:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "326:2:0",
										"statements": []
									},
									"id": 19,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "322:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 16,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 14,
												"name": "ERC1155",
												"nameLocations": [
													"314:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1267,
												"src": "314:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "314:11:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "326:0:0"
									},
									"scope": 44,
									"src": "300:28:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "386:30:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"name": "contractName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "399:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 23,
												"id": 25,
												"nodeType": "Return",
												"src": "392:19:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "341:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "371:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 21,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "371:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:15:0"
									},
									"scope": 44,
									"src": "332:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "476:32:0",
										"statements": [
											{
												"expression": {
													"id": 32,
													"name": "contractSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "489:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 31,
												"id": 33,
												"nodeType": "Return",
												"src": "482:21:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "429:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "461:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "461:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:15:0"
									},
									"scope": 44,
									"src": "420:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "564:20:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "577:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 39,
												"id": 41,
												"nodeType": "Return",
												"src": "570:9:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "521:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "555:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:9:0"
									},
									"scope": 44,
									"src": "512:72:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 45,
							"src": "153:433:0",
							"usedErrors": []
						}
					],
					"src": "32:555:0"
				},
				"id": 0
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1897
						],
						"Context": [
							1919
						],
						"ERC1155": [
							1267
						],
						"ERC165": [
							1943
						],
						"IERC1155": [
							1389
						],
						"IERC1155MetadataURI": [
							1602
						],
						"IERC1155Receiver": [
							1430
						],
						"IERC165": [
							1955
						]
					},
					"id": 1268,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 46,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:1"
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 47,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1268,
							"sourceUnit": 1390,
							"src": "134:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 48,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1268,
							"sourceUnit": 1431,
							"src": "159:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1268,
							"sourceUnit": 1603,
							"src": "192:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 50,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1268,
							"sourceUnit": 1898,
							"src": "239:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1268,
							"sourceUnit": 1920,
							"src": "273:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 52,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1268,
							"sourceUnit": 1944,
							"src": "307:46:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 54,
										"name": "Context",
										"nameLocations": [
											"590:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1919,
										"src": "590:7:1"
									},
									"id": 55,
									"nodeType": "InheritanceSpecifier",
									"src": "590:7:1"
								},
								{
									"baseName": {
										"id": 56,
										"name": "ERC165",
										"nameLocations": [
											"599:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1943,
										"src": "599:6:1"
									},
									"id": 57,
									"nodeType": "InheritanceSpecifier",
									"src": "599:6:1"
								},
								{
									"baseName": {
										"id": 58,
										"name": "IERC1155",
										"nameLocations": [
											"607:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1389,
										"src": "607:8:1"
									},
									"id": 59,
									"nodeType": "InheritanceSpecifier",
									"src": "607:8:1"
								},
								{
									"baseName": {
										"id": 60,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"617:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1602,
										"src": "617:19:1"
									},
									"id": 61,
									"nodeType": "InheritanceSpecifier",
									"src": "617:19:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 53,
								"nodeType": "StructuredDocumentation",
								"src": "355:214:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1267,
							"linearizedBaseContracts": [
								1267,
								1602,
								1389,
								1943,
								1955,
								1919
							],
							"name": "ERC1155",
							"nameLocation": "579:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 64,
									"libraryName": {
										"id": 62,
										"name": "Address",
										"nameLocations": [
											"649:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1897,
										"src": "649:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "643:26:1",
									"typeName": {
										"id": 63,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 70,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "780:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1267,
									"src": "724:65:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 69,
										"keyType": {
											"id": 65,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "724:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 68,
											"keyType": {
												"id": 66,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "751:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "743:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 67,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 76,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "899:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1267,
									"src": "846:71:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 75,
										"keyType": {
											"id": 71,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "854:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "846:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 74,
											"keyType": {
												"id": 72,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "865:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 73,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "884:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 78,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1053:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1267,
									"src": "1038:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 77,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1139:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1157:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 84,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "1149:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1149:13:1"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1064:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 89,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1133:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1119:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 80,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:20:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:1"
									},
									"scope": 1267,
									"src": "1107:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1942,
										1954
									],
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1344:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 100,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "1373:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 102,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1389,
																			"src": "1393:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1389_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1389_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 101,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1388:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1388:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1389",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1403:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1388:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1373:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 106,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "1430:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 108,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1602,
																			"src": "1450:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1602_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1602_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 107,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1445:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1445:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1602",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1471:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1445:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1430:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1373:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 115,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "1522:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 113,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1498:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1267_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1504:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1942,
															"src": "1498:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 99,
												"id": 118,
												"nodeType": "Return",
												"src": "1354:180:1"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "1175:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1245:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 96,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 94,
												"name": "ERC165",
												"nameLocations": [
													"1312:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1943,
												"src": "1312:6:1"
											},
											{
												"id": 95,
												"name": "IERC165",
												"nameLocations": [
													"1320:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1955,
												"src": "1320:7:1"
											}
										],
										"src": "1303:25:1"
									},
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1270:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1263:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 91,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1338:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 97,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:1"
									},
									"scope": 1267,
									"src": "1236:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1601
									],
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2015:28:1",
										"statements": [
											{
												"expression": {
													"id": 129,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "2032:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 128,
												"id": 130,
												"nodeType": "Return",
												"src": "2025:11:1"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1547:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1949:3:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1982:8:1"
									},
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1953:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:9:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2000:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:15:1"
									},
									"scope": 1267,
									"src": "1940:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2280:133:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2298:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2317:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2309:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 145,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2298:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "2290:77:1"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 153,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "2384:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 155,
														"indexExpression": {
															"id": 154,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "2394:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2384:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 157,
													"indexExpression": {
														"id": 156,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2398:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2384:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 142,
												"id": 158,
												"nodeType": "Return",
												"src": "2377:29:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2049:131:1",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 139,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2253:8:1"
									},
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2204:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:29:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2271:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:1"
									},
									"scope": 1267,
									"src": "2185:228:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1340
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2743:335:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 175,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "2761:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2770:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2761:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 177,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "2780:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2784:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2780:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2761:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2792:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2753:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "2753:83:1"
											},
											{
												"assignments": [
													187
												],
												"declarations": [
													{
														"constant": false,
														"id": 187,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2864:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 223,
														"src": "2847:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 185,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2847:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 186,
															"nodeType": "ArrayTypeName",
															"src": "2847:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 194,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 191,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2894:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2903:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2894:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2880:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 188,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2884:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 189,
															"nodeType": "ArrayTypeName",
															"src": "2884:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2847:63:1"
											},
											{
												"body": {
													"id": 219,
													"nodeType": "Block",
													"src": "2967:74:1",
													"statements": [
														{
															"expression": {
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 206,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2981:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 208,
																	"indexExpression": {
																		"id": 207,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "2995:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2981:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 210,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 164,
																				"src": "3010:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 212,
																			"indexExpression": {
																				"id": 211,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 196,
																				"src": "3019:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3010:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 213,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 167,
																				"src": "3023:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 215,
																			"indexExpression": {
																				"id": 214,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 196,
																				"src": "3027:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3023:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 209,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "3000:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3000:30:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2981:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 218,
															"nodeType": "ExpressionStatement",
															"src": "2981:49:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 199,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "2941:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 200,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "2945:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2954:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2945:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2941:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 220,
												"initializationExpression": {
													"assignments": [
														196
													],
													"declarations": [
														{
															"constant": false,
															"id": 196,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2934:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 220,
															"src": "2926:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 195,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2926:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 198,
													"initialValue": {
														"hexValue": "30",
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2926:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2962:3:1",
														"subExpression": {
															"id": 203,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2964:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 205,
													"nodeType": "ExpressionStatement",
													"src": "2962:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2921:120:1"
											},
											{
												"expression": {
													"id": 221,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 187,
													"src": "3058:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 173,
												"id": 222,
												"nodeType": "Return",
												"src": "3051:20:1"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2419:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2579:14:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2695:8:1"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2611:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2594:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 162,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2594:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 163,
													"nodeType": "ArrayTypeName",
													"src": "2594:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2638:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2621:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 165,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2621:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 166,
													"nodeType": "ArrayTypeName",
													"src": "2621:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:49:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2721:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 170,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2721:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 171,
													"nodeType": "ArrayTypeName",
													"src": "2721:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2720:18:1"
									},
									"scope": 1267,
									"src": "2570:508:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1348
									],
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "3230:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 234,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "3259:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3259:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 236,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "3273:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 237,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "3283:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 233,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "3240:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3240:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "3240:52:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3084:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3155:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 231,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3221:8:1"
									},
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3181:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3173:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3196:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3191:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3191:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3172:33:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:0:1"
									},
									"scope": 1267,
									"src": "3146:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "3471:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 252,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "3488:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 254,
														"indexExpression": {
															"id": 253,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3507:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3488:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 256,
													"indexExpression": {
														"id": 255,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3516:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3488:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 251,
												"id": 257,
												"nodeType": "Return",
												"src": "3481:44:1"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3305:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3375:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 248,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3447:8:1"
									},
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3400:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3392:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3417:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3409:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3409:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:35:1"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "3465:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3465:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:6:1"
									},
									"scope": 1267,
									"src": "3366:166:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1372
									],
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "3768:220:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 275,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "3799:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 276,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "3807:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3807:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3799:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "3840:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "3846:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3846:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "3823:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3823:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3799:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3873:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3778:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "3778:148:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 289,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "3954:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 290,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3960:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3964:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "3968:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 293,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "3976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 288,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "3936:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3936:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "3936:45:1"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "3538:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3608:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3759:8:1"
									},
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3642:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3634:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3664:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3656:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3656:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3684:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3676:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3704:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3696:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3720:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3720:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:119:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3768:0:1"
									},
									"scope": 1267,
									"src": "3599:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1388
									],
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "4254:236:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 315,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "4285:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 316,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "4293:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4293:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4285:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 320,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "4326:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 321,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "4332:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4332:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 319,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "4309:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4309:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4285:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4359:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4264:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4264:157:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "4264:157:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4454:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "4460:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4464:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 332,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4469:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 333,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "4478:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 328,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "4431:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "4431:52:1"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "3994:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4069:21:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 312,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4245:8:1"
									},
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4108:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4100:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4130:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4122:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4122:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4159:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4142:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 303,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4142:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 304,
													"nodeType": "ArrayTypeName",
													"src": "4142:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4189:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4172:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 306,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4172:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 307,
													"nodeType": "ArrayTypeName",
													"src": "4172:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "4206:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4090:139:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4254:0:1"
									},
									"scope": 1267,
									"src": "4060:430:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "5103:784:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 352,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "5121:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5135:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5127:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 353,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5127:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5127:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5121:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5139:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5113:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "5113:66:1"
											},
											{
												"assignments": [
													362
												],
												"declarations": [
													{
														"constant": false,
														"id": 362,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5198:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5190:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 361,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 365,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 363,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "5209:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:31:1"
											},
											{
												"assignments": [
													370
												],
												"declarations": [
													{
														"constant": false,
														"id": 370,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5248:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5231:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 368,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5231:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 369,
															"nodeType": "ArrayTypeName",
															"src": "5231:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [
														{
															"id": 372,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5272:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "5254:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5254:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5231:44:1"
											},
											{
												"assignments": [
													379
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5302:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5285:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 377,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5285:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 378,
															"nodeType": "ArrayTypeName",
															"src": "5285:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"arguments": [
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5330:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 380,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "5312:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5369:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5385:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5389:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 389,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "5394:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 390,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5403:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 384,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "5348:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5348:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "5348:60:1"
											},
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5427:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5419:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 400,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 395,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "5441:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 397,
														"indexExpression": {
															"id": 396,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5451:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5441:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 399,
													"indexExpression": {
														"id": 398,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "5455:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5441:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5419:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 402,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5478:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 403,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "5493:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5478:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5501:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5470:76:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "5470:76:1"
											},
											{
												"id": 418,
												"nodeType": "UncheckedBlock",
												"src": "5556:77:1",
												"statements": [
													{
														"expression": {
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 408,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "5580:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 411,
																	"indexExpression": {
																		"id": 409,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "5590:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5580:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 412,
																"indexExpression": {
																	"id": 410,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "5594:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5580:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 413,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "5602:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 414,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "5616:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5602:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5580:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 417,
														"nodeType": "ExpressionStatement",
														"src": "5580:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 419,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "5642:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 422,
															"indexExpression": {
																"id": 420,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "5652:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5642:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 423,
														"indexExpression": {
															"id": 421,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5656:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5642:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 424,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5663:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5642:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "5642:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 428,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5700:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5710:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5716:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5720:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5724:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "5685:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5685:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "EmitStatement",
												"src": "5680:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5762:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5772:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5778:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5782:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 440,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "5787:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 441,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5796:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 435,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "5742:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "5742:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5843:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5853:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5859:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5863:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5867:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 450,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5875:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 444,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "5812:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5812:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "5812:68:1"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "4496:439:1",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4949:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4984:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "4976:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4976:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5006:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "4998:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5026:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5018:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5046:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5038:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5075:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5062:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5062:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:119:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5103:0:1"
									},
									"scope": 1267,
									"src": "4940:947:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "6421:927:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 471,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6439:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6443:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6439:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 473,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "6453:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6461:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6453:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6439:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6469:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "6431:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 480,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "6530:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6544:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6536:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6536:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6536:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6530:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6548:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6522:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "6522:66:1"
											},
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6607:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "6599:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 489,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6599:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 493,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "6618:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6599:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "6662:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6672:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "6678:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "6682:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 499,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "6687:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 500,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "6696:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 494,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "6641:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6641:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "6641:60:1"
											},
											{
												"body": {
													"id": 560,
													"nodeType": "Block",
													"src": "6753:370:1",
													"statements": [
														{
															"assignments": [
																515
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 515,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6775:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 560,
																	"src": "6767:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 514,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6767:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 519,
															"initialValue": {
																"baseExpression": {
																	"id": 516,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6780:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 518,
																"indexExpression": {
																	"id": 517,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "6784:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6780:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6767:19:1"
														},
														{
															"assignments": [
																521
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 521,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6808:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 560,
																	"src": "6800:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 520,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6800:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 525,
															"initialValue": {
																"baseExpression": {
																	"id": 522,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "6817:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 524,
																"indexExpression": {
																	"id": 523,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "6825:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6817:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6800:27:1"
														},
														{
															"assignments": [
																527
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 527,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6850:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 560,
																	"src": "6842:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6842:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 533,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 528,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "6864:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 530,
																	"indexExpression": {
																		"id": 529,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "6874:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6864:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 532,
																"indexExpression": {
																	"id": 531,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "6878:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6864:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6842:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 535,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "6905:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 536,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "6920:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6905:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6928:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 534,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6897:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6897:76:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 540,
															"nodeType": "ExpressionStatement",
															"src": "6897:76:1"
														},
														{
															"id": 551,
															"nodeType": "UncheckedBlock",
															"src": "6987:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 541,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "7015:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 544,
																				"indexExpression": {
																					"id": 542,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 515,
																					"src": "7025:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7015:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 545,
																			"indexExpression": {
																				"id": 543,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "7029:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7015:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 546,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 527,
																				"src": "7037:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 547,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 521,
																				"src": "7051:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7037:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7015:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 550,
																	"nodeType": "ExpressionStatement",
																	"src": "7015:42:1"
																}
															]
														},
														{
															"expression": {
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 552,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "7085:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 555,
																		"indexExpression": {
																			"id": 553,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 515,
																			"src": "7095:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7085:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 556,
																	"indexExpression": {
																		"id": 554,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "7099:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7085:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 557,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "7106:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7085:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "7085:27:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "6732:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 508,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "6736:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6740:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6736:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6732:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"initializationExpression": {
													"assignments": [
														504
													],
													"declarations": [
														{
															"constant": false,
															"id": 504,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6725:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 561,
															"src": "6717:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 503,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6717:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 506,
													"initialValue": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6729:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6717:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6748:3:1",
														"subExpression": {
															"id": 511,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "6750:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"nodeType": "ExpressionStatement",
													"src": "6748:3:1"
												},
												"nodeType": "ForStatement",
												"src": "6712:411:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 563,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "7152:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "7168:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7172:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 567,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "7177:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 562,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "7138:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7138:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "EmitStatement",
												"src": "7133:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "7216:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7226:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "7232:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7236:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 575,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "7241:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 576,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "7250:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 570,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "7196:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7196:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "7196:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "7302:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "7312:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "7318:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7322:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 584,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "7327:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 585,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "7336:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 579,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "7266:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:75:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "7266:75:1"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "5893:335:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6242:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6282:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6274:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6274:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6304:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6296:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6333:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6316:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 460,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6316:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 461,
													"nodeType": "ArrayTypeName",
													"src": "6316:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6363:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6346:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 463,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6346:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 464,
													"nodeType": "ArrayTypeName",
													"src": "6346:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6393:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "6380:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6380:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6264:139:1"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:1"
									},
									"scope": 1267,
									"src": "6233:1115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "8227:30:1",
										"statements": [
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 595,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "8237:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 596,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "8244:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8237:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "8237:13:1"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "7354:812:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8180:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8202:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "8188:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8188:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8187:22:1"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8227:0:1"
									},
									"scope": 1267,
									"src": "8171:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "8759:580:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 613,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "8777:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8791:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8783:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 614,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8783:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8783:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8777:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8795:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8769:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8769:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "8769:62:1"
											},
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8850:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "8842:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 622,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8842:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 624,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "8861:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8861:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8842:31:1"
											},
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8900:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "8883:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 629,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8883:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 630,
															"nodeType": "ArrayTypeName",
															"src": "8883:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [
														{
															"id": 633,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "8924:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 632,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "8906:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8906:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8883:44:1"
											},
											{
												"assignments": [
													640
												],
												"declarations": [
													{
														"constant": false,
														"id": 640,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8954:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 700,
														"src": "8937:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 638,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8937:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 639,
															"nodeType": "ArrayTypeName",
															"src": "8937:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 644,
												"initialValue": {
													"arguments": [
														{
															"id": 642,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "8982:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 641,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "8964:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8964:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8937:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "9021:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9039:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9031:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 647,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9031:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9031:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 651,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "9043:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "9047:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 653,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "9052:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 654,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "9061:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 645,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "9000:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "9000:66:1"
											},
											{
												"expression": {
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 657,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "9077:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 660,
															"indexExpression": {
																"id": 658,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "9087:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9077:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 661,
														"indexExpression": {
															"id": 659,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "9091:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9077:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 662,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "9098:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9077:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "9077:27:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 666,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "9134:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9152:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9144:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9144:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9144:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "9156:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "9160:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9164:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 665,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "9119:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9119:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "EmitStatement",
												"src": "9114:57:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 677,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "9202:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9220:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9212:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 678,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9212:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9212:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "9224:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "9228:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 684,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "9233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 685,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "9242:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 676,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "9182:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9182:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "9182:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "9289:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9307:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9299:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 690,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9299:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9299:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "9311:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "9315:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 696,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "9319:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 697,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "9327:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 688,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "9258:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9258:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "9258:74:1"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "8263:362:1",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8639:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8662:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "8654:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8682:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "8674:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "8694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8731:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "8718:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8718:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8644:97:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8759:0:1"
									},
									"scope": 1267,
									"src": "8630:709:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "9838:637:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 716,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "9856:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9870:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9862:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 717,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9862:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9862:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9856:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9874:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9848:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9848:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "9848:62:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 726,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "9928:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9932:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9928:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 728,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "9942:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9950:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9942:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9928:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9958:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9920:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:1"
											},
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10020:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 811,
														"src": "10012:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 734,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10012:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "10031:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10031:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10012:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "10075:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10093:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10085:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10085:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10085:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "10097:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10101:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 747,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "10106:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 748,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "10115:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 739,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "10054:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10054:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "10054:66:1"
											},
											{
												"body": {
													"id": 774,
													"nodeType": "Block",
													"src": "10172:60:1",
													"statements": [
														{
															"expression": {
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 762,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "10186:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 767,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 763,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "10196:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 765,
																			"indexExpression": {
																				"id": 764,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "10200:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10196:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10186:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 768,
																	"indexExpression": {
																		"id": 766,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 704,
																		"src": "10204:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10186:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 769,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "10211:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 771,
																	"indexExpression": {
																		"id": 770,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "10219:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10211:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10186:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 773,
															"nodeType": "ExpressionStatement",
															"src": "10186:35:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "10151:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 756,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10155:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10159:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10155:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10151:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 775,
												"initializationExpression": {
													"assignments": [
														752
													],
													"declarations": [
														{
															"constant": false,
															"id": 752,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10144:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 775,
															"src": "10136:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 751,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10136:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 754,
													"initialValue": {
														"hexValue": "30",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10148:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10136:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10167:3:1",
														"subExpression": {
															"id": 759,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "10167:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 761,
													"nodeType": "ExpressionStatement",
													"src": "10167:3:1"
												},
												"nodeType": "ForStatement",
												"src": "10131:101:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 777,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "10261:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10279:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10271:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 778,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10271:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10271:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "10283:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10287:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 784,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "10292:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 776,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "10247:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10247:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "EmitStatement",
												"src": "10242:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 788,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "10331:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10349:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10341:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 789,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10341:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10341:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "10353:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10357:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 795,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "10362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 796,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "10371:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 787,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "10311:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "10311:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 800,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "10423:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10441:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10433:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 801,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10433:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10433:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 805,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "10445:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10449:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 807,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "10454:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 808,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "10463:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 799,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "10387:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10387:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "10387:81:1"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "9345:334:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9693:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9721:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "9713:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9713:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9750:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "9733:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 705,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9733:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 706,
													"nodeType": "ArrayTypeName",
													"src": "9733:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9780:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "9763:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 708,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9763:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 709,
													"nodeType": "ArrayTypeName",
													"src": "9763:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9810:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "9797:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9797:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9703:117:1"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9838:0:1"
									},
									"scope": 1267,
									"src": "9684:791:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "10819:682:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 823,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "10837:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10853:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10845:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 824,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10845:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10845:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10837:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10857:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10829:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10829:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "10829:66:1"
											},
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10914:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 916,
														"src": "10906:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 832,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10906:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 834,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "10925:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10925:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10906:31:1"
											},
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10964:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 916,
														"src": "10947:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10947:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ArrayTypeName",
															"src": "10947:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"arguments": [
														{
															"id": 843,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "10988:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "10970:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10970:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10947:44:1"
											},
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11018:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 916,
														"src": "11001:24:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 848,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11001:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 849,
															"nodeType": "ArrayTypeName",
															"src": "11001:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 854,
												"initialValue": {
													"arguments": [
														{
															"id": 852,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11046:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "11028:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11028:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11001:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "11085:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11095:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11109:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11101:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 858,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11101:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11101:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11113:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 863,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "11118:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11127:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 855,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "11064:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11064:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "11064:66:1"
											},
											{
												"assignments": [
													868
												],
												"declarations": [
													{
														"constant": false,
														"id": 868,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11149:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 916,
														"src": "11141:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 867,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 869,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "11163:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 871,
														"indexExpression": {
															"id": 870,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11173:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11163:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 873,
													"indexExpression": {
														"id": 872,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "11177:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11163:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11141:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 876,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "11200:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 877,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "11215:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11200:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11223:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 875,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11192:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11192:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "11192:70:1"
											},
											{
												"id": 892,
												"nodeType": "UncheckedBlock",
												"src": "11272:77:1",
												"statements": [
													{
														"expression": {
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 882,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "11296:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 885,
																	"indexExpression": {
																		"id": 883,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "11306:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11296:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 886,
																"indexExpression": {
																	"id": 884,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "11310:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11296:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 887,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "11318:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 888,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "11332:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11318:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11296:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 891,
														"nodeType": "ExpressionStatement",
														"src": "11296:42:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 894,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "11379:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11389:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11403:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11395:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 896,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11395:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11395:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11407:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 901,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11411:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "11364:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11364:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "EmitStatement",
												"src": "11359:59:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 905,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "11449:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11459:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11473:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11465:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 907,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11465:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11465:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11477:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 912,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "11482:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11491:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 904,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "11429:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11429:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "11429:65:1"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "10481:229:1",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10724:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10747:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "10739:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10769:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "10761:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10789:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "10781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10729:72:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10819:0:1"
									},
									"scope": 1267,
									"src": "10715:786:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "11824:814:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "11842:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11858:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11850:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 931,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11850:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11850:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11842:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11862:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11834:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11834:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "11834:66:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 940,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "11918:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11922:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11918:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 942,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "11932:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11940:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11932:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11918:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11948:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11910:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11910:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "11910:81:1"
											},
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12010:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1039,
														"src": "12002:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 948,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12002:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 952,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 950,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "12021:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12021:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12002:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 954,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "12065:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "12075:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12089:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12081:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12081:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12081:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 960,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "12093:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 961,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12098:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12107:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 953,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "12044:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12044:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "12044:66:1"
											},
											{
												"body": {
													"id": 1014,
													"nodeType": "Block",
													"src": "12162:323:1",
													"statements": [
														{
															"assignments": [
																977
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 977,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12184:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1014,
																	"src": "12176:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 976,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12176:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 981,
															"initialValue": {
																"baseExpression": {
																	"id": 978,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "12189:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 980,
																"indexExpression": {
																	"id": 979,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "12193:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12189:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12176:19:1"
														},
														{
															"assignments": [
																983
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 983,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12217:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1014,
																	"src": "12209:14:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 982,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12209:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 987,
															"initialValue": {
																"baseExpression": {
																	"id": 984,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "12226:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 986,
																"indexExpression": {
																	"id": 985,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "12234:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12226:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12209:27:1"
														},
														{
															"assignments": [
																989
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 989,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12259:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1014,
																	"src": "12251:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 988,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12251:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 995,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 990,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "12273:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 992,
																	"indexExpression": {
																		"id": 991,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "12283:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12273:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 994,
																"indexExpression": {
																	"id": 993,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "12287:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12273:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12251:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 997,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "12314:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 998,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "12329:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12314:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12337:38:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 996,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12306:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12306:70:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "ExpressionStatement",
															"src": "12306:70:1"
														},
														{
															"id": 1013,
															"nodeType": "UncheckedBlock",
															"src": "12390:85:1",
															"statements": [
																{
																	"expression": {
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1003,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 70,
																					"src": "12418:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1006,
																				"indexExpression": {
																					"id": 1004,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 977,
																					"src": "12428:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12418:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1007,
																			"indexExpression": {
																				"id": 1005,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 920,
																				"src": "12432:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12418:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1008,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 989,
																				"src": "12440:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1009,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "12454:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12440:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12418:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1012,
																	"nodeType": "ExpressionStatement",
																	"src": "12418:42:1"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 969,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "12141:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 970,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "12145:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12149:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12145:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12141:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"initializationExpression": {
													"assignments": [
														966
													],
													"declarations": [
														{
															"constant": false,
															"id": 966,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12134:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 1015,
															"src": "12126:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 965,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12126:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 968,
													"initialValue": {
														"hexValue": "30",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12138:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12126:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12157:3:1",
														"subExpression": {
															"id": 973,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "12157:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 975,
													"nodeType": "ExpressionStatement",
													"src": "12157:3:1"
												},
												"nodeType": "ForStatement",
												"src": "12121:364:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1017,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "12514:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "12524:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12538:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12530:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1019,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12530:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12530:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "12542:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1024,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12547:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1016,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "12500:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12500:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "EmitStatement",
												"src": "12495:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1028,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "12586:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "12596:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12610:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12602:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1030,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12602:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12602:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1034,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "12614:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1035,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "12619:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12628:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1027,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "12566:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12566:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "12566:65:1"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "11507:183:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11704:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11732:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "11724:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11763:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "11746:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 921,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11746:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 922,
													"nodeType": "ArrayTypeName",
													"src": "11746:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11793:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "11776:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 924,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11776:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 925,
													"nodeType": "ArrayTypeName",
													"src": "11776:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11714:92:1"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11824:0:1"
									},
									"scope": 1267,
									"src": "11695:943:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "12896:200:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1051,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "12914:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1052,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "12923:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12914:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12933:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12906:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12906:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "12906:71:1"
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1057,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "12987:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1060,
															"indexExpression": {
																"id": 1058,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "13006:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12987:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1061,
														"indexExpression": {
															"id": 1059,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "13013:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12987:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1062,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "13025:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12987:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "12987:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1066,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "13063:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "13070:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "13080:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1065,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "13048:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13048:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "EmitStatement",
												"src": "13043:46:1"
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "12644:124:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12782:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12818:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "12810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12841:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "12833:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12833:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12864:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "12859:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12859:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12800:78:1"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12896:0:1"
									},
									"scope": 1267,
									"src": "12773:323:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "14242:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "13102:923:1",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14039:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14077:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "14069:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14069:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14103:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "14095:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14095:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14125:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "14117:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14154:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "14137:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1080,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14137:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1081,
													"nodeType": "ArrayTypeName",
													"src": "14137:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14184:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "14167:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1083,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14167:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1084,
													"nodeType": "ArrayTypeName",
													"src": "14167:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14214:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "14201:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14201:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14059:165:1"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14242:0:1"
									},
									"scope": 1267,
									"src": "14030:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "15388:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "14250:922:1",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15186:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15223:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "15215:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "15241:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15241:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15271:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "15263:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15263:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15300:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "15283:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1099,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15283:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1100,
													"nodeType": "ArrayTypeName",
													"src": "15283:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15330:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "15313:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1102,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15313:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1103,
													"nodeType": "ArrayTypeName",
													"src": "15313:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15360:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "15347:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1105,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15347:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15205:165:1"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15388:0:1"
									},
									"scope": 1267,
									"src": "15177:213:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "15589:532:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1125,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "15603:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15606:10:1",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1620,
														"src": "15603:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15603:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "15599:516:1",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "15620:495:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1152,
																		"nodeType": "Block",
																		"src": "15737:184:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1145,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1141,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1139,
																						"src": "15759:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1142,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1430,
																								"src": "15771:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1430_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1143,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15788:17:1",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1411,
																							"src": "15771:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1144,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15806:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15771:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15759:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1151,
																				"nodeType": "IfStatement",
																				"src": "15755:152:1",
																				"trueBody": {
																					"id": 1150,
																					"nodeType": "Block",
																					"src": "15816:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1147,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15845:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1146,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15838:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1148,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15838:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1149,
																							"nodeType": "ExpressionStatement",
																							"src": "15838:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1153,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1140,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1139,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15727:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1153,
																				"src": "15720:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1138,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15720:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15719:17:1"
																	},
																	"src": "15711:210:1"
																},
																{
																	"block": {
																		"id": 1161,
																		"nodeType": "Block",
																		"src": "15956:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1158,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1155,
																							"src": "15981:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1157,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "15974:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1159,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15974:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1160,
																				"nodeType": "ExpressionStatement",
																				"src": "15974:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1162,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1156,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1155,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15948:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1162,
																				"src": "15934:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1154,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "15934:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15933:22:1"
																	},
																	"src": "15922:81:1"
																},
																{
																	"block": {
																		"id": 1167,
																		"nodeType": "Block",
																		"src": "16010:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16035:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1163,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16028:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16028:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1166,
																				"nodeType": "ExpressionStatement",
																				"src": "16028:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1168,
																	"nodeType": "TryCatchClause",
																	"src": "16004:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1132,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "15677:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1133,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "15687:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1134,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1118,
																		"src": "15693:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1135,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "15697:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "15705:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1129,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "15655:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1128,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "15638:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1430_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15638:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1430",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15659:17:1",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1411,
																	"src": "15638:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15638:72:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1169,
															"nodeType": "TryStatement",
															"src": "15634:471:1"
														}
													]
												}
											}
										]
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15405:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15453:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "15445:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15479:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "15471:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15501:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "15493:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15493:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15521:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "15513:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15541:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "15533:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15533:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15570:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "15557:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15557:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15435:145:1"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15589:0:1"
									},
									"scope": 1267,
									"src": "15396:725:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "16345:574:1",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1190,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "16359:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16362:10:1",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1620,
														"src": "16359:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16359:15:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1236,
												"nodeType": "IfStatement",
												"src": "16355:558:1",
												"trueBody": {
													"id": 1235,
													"nodeType": "Block",
													"src": "16376:537:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1217,
																		"nodeType": "Block",
																		"src": "16530:189:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1210,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1206,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1204,
																						"src": "16552:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1207,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1430,
																								"src": "16564:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1430_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1208,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "16581:22:1",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1429,
																							"src": "16564:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1209,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "16604:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16564:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16552:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1216,
																				"nodeType": "IfStatement",
																				"src": "16548:157:1",
																				"trueBody": {
																					"id": 1215,
																					"nodeType": "Block",
																					"src": "16614:91:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1212,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16643:42:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1211,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16636:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1213,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16636:50:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1214,
																							"nodeType": "ExpressionStatement",
																							"src": "16636:50:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1218,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1205,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1204,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16507:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1218,
																				"src": "16500:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1203,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16500:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16482:47:1"
																	},
																	"src": "16474:245:1"
																},
																{
																	"block": {
																		"id": 1226,
																		"nodeType": "Block",
																		"src": "16754:47:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1223,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1220,
																							"src": "16779:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1222,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16772:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1224,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16772:14:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1225,
																				"nodeType": "ExpressionStatement",
																				"src": "16772:14:1"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1227,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1221,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1220,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16746:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1227,
																				"src": "16732:20:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1219,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16732:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16731:22:1"
																	},
																	"src": "16720:81:1"
																},
																{
																	"block": {
																		"id": 1232,
																		"nodeType": "Block",
																		"src": "16808:95:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1229,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16833:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1228,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16826:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16826:62:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1231,
																				"nodeType": "ExpressionStatement",
																				"src": "16826:62:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1233,
																	"nodeType": "TryCatchClause",
																	"src": "16802:101:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1197,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "16438:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1198,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "16448:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1199,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "16454:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1200,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "16459:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1201,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "16468:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1194,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1179,
																				"src": "16411:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1193,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "16394:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1430_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16394:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1430",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16415:22:1",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1429,
																	"src": "16394:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16394:79:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1234,
															"nodeType": "TryStatement",
															"src": "16390:513:1"
														}
													]
												}
											}
										]
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16136:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16189:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "16181:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16181:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16215:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "16207:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16237:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "16229:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16229:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16266:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "16249:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16249:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "16249:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16296:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "16279:24:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1183,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16279:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1184,
													"nodeType": "ArrayTypeName",
													"src": "16279:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16326:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "16313:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16313:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:165:1"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16345:0:1"
									},
									"scope": 1267,
									"src": "16127:792:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "17009:109:1",
										"statements": [
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17036:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "17019:22:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1248,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17019:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1249,
															"nodeType": "ArrayTypeName",
															"src": "17019:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1256,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17058:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17044:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1251,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17048:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1252,
															"nodeType": "ArrayTypeName",
															"src": "17048:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17044:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17019:41:1"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1257,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "17070:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1259,
														"indexExpression": {
															"hexValue": "30",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17076:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17070:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1260,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "17081:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17070:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "17070:18:1"
											},
											{
												"expression": {
													"id": 1263,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1250,
													"src": "17106:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1245,
												"id": 1264,
												"nodeType": "Return",
												"src": "17099:12:1"
											}
										]
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "16934:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "16960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "16952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16951:17:1"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "16991:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1242,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16991:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1243,
													"nodeType": "ArrayTypeName",
													"src": "16991:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16990:18:1"
									},
									"scope": 1267,
									"src": "16925:193:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1268,
							"src": "570:16550:1",
							"usedErrors": []
						}
					],
					"src": "109:17012:1"
				},
				"id": 1
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1389
						],
						"IERC165": [
							1955
						]
					},
					"id": 1390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1269,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:2"
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1390,
							"sourceUnit": 1956,
							"src": "120:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1272,
										"name": "IERC165",
										"nameLocations": [
											"357:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1955,
										"src": "357:7:2"
									},
									"id": 1273,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1271,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1389,
							"linearizedBaseContracts": [
								1389,
								1955
							],
							"name": "IERC1155",
							"nameLocation": "345:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1286,
									"name": "TransferSingle",
									"nameLocation": "503:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "518:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "544:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "566:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "586:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "598:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:2"
									},
									"src": "497:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1301,
									"name": "TransferBatch",
									"nameLocation": "774:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "797:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "831:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "861:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "889:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1294,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1295,
													"nodeType": "ArrayTypeName",
													"src": "889:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "912:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1297,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1298,
													"nodeType": "ArrayTypeName",
													"src": "912:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:2"
									},
									"src": "768:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1310,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1114:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1139:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "1165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:2"
									},
									"src": "1093:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1317,
									"name": "URI",
									"nameLocation": "1540:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1544:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1558:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:2"
									},
									"src": "1534:44:2"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1781:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1798:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:2"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1833:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:2"
									},
									"scope": 1389,
									"src": "1762:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2065:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1329,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1330,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2094:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1332,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1333,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:2"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2165:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1336,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1337,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:2"
									},
									"scope": 1389,
									"src": "2041:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2469:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:2"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:2"
									},
									"scope": 1389,
									"src": "2442:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "2683:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "2700:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:2"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "2741:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:2"
									},
									"scope": 1389,
									"src": "2657:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3352:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3374:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3394:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3414:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "3438:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:2"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:2"
									},
									"scope": 1389,
									"src": "3317:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3914:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3936:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3956:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1378,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1379,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3988:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1381,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1382,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "4024:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:2"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:2"
									},
									"scope": 1389,
									"src": "3874:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1390,
							"src": "335:3726:2",
							"usedErrors": []
						}
					],
					"src": "95:3967:2"
				},
				"id": 2
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1430
						],
						"IERC165": [
							1955
						]
					},
					"id": 1431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:3"
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1431,
							"sourceUnit": 1956,
							"src": "143:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1394,
										"name": "IERC165",
										"nameLocations": [
											"262:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1955,
										"src": "262:7:3"
									},
									"id": 1395,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1393,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1430,
							"linearizedBaseContracts": [
								1430,
								1955
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:3",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1143:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1169:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1191:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1211:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1234:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:3"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1278:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:3"
									},
									"scope": 1430,
									"src": "1107:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:3",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2332:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2358:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2380:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1417,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1418,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2412:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1420,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1421,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2447:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:3"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "2491:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1426,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:3"
									},
									"scope": 1430,
									"src": "2291:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1431,
							"src": "232:2269:3",
							"usedErrors": []
						}
					],
					"src": "118:2384:3"
				},
				"id": 3
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
					"exportedSymbols": {
						"Address": [
							1897
						],
						"Context": [
							1919
						],
						"ERC1155": [
							1267
						],
						"ERC1155Supply": [
							1587
						],
						"ERC165": [
							1943
						],
						"IERC1155": [
							1389
						],
						"IERC1155MetadataURI": [
							1602
						],
						"IERC1155Receiver": [
							1430
						],
						"IERC165": [
							1955
						]
					},
					"id": 1588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "126:23:4"
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1588,
							"sourceUnit": 1268,
							"src": "151:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1435,
										"name": "ERC1155",
										"nameLocations": [
											"557:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1267,
										"src": "557:7:4"
									},
									"id": 1436,
									"nodeType": "InheritanceSpecifier",
									"src": "557:7:4"
								}
							],
							"canonicalName": "ERC1155Supply",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1434,
								"nodeType": "StructuredDocumentation",
								"src": "177:344:4",
								"text": " @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted."
							},
							"fullyImplemented": false,
							"id": 1587,
							"linearizedBaseContracts": [
								1587,
								1267,
								1602,
								1389,
								1943,
								1955,
								1919
							],
							"name": "ERC1155Supply",
							"nameLocation": "540:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1440,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "607:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "571:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1439,
										"keyType": {
											"id": 1437,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "579:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "571:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "590:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "768:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1448,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "785:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1450,
													"indexExpression": {
														"id": 1449,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "798:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "785:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1447,
												"id": 1451,
												"nodeType": "Return",
												"src": "778:23:4"
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "626:66:4",
										"text": " @dev Total amount of tokens in with a given id."
									},
									"functionSelector": "bd85b039",
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "706:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "726:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "718:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:12:4"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "759:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:9:4"
									},
									"scope": 1587,
									"src": "697:111:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "964:57:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1463,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "1007:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1461,
																"name": "ERC1155Supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "981:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC1155Supply_$1587_$",
																	"typeString": "type(contract ERC1155Supply)"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "995:11:4",
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1453,
															"src": "981:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "981:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1013:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "981:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1460,
												"id": 1467,
												"nodeType": "Return",
												"src": "974:40:4"
											}
										]
									},
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "814:82:4",
										"text": " @dev Indicates whether any token exist with a given id, or not."
									},
									"functionSelector": "4f558e79",
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "910:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "925:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "917:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:12:4"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "958:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "958:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:6:4"
									},
									"scope": 1587,
									"src": "901:120:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1091
									],
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "1312:683:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1491,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "1349:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1492,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "1359:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "1365:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1494,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "1369:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1495,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "1374:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1496,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "1383:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1488,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1322:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Supply_$1587_$",
																"typeString": "type(contract super ERC1155Supply)"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1328:20:4",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1091,
														"src": "1322:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1322:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "1322:66:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1499,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "1403:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1419:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1411:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1411:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1411:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1403:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1529,
												"nodeType": "IfStatement",
												"src": "1399:156:4",
												"trueBody": {
													"id": 1528,
													"nodeType": "Block",
													"src": "1423:132:4",
													"statements": [
														{
															"body": {
																"id": 1526,
																"nodeType": "Block",
																"src": "1478:67:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1516,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1440,
																					"src": "1496:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1520,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1517,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1479,
																						"src": "1509:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1519,
																					"indexExpression": {
																						"id": 1518,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1506,
																						"src": "1513:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1509:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1496:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1521,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1482,
																					"src": "1520:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1523,
																				"indexExpression": {
																					"id": 1522,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "1528:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1520:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1496:34:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1525,
																		"nodeType": "ExpressionStatement",
																		"src": "1496:34:4"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1509,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "1457:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1510,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "1461:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1465:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1461:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1457:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1527,
															"initializationExpression": {
																"assignments": [
																	1506
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1506,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1450:1:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 1527,
																		"src": "1442:9:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1505,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1442:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1508,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1454:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1442:13:4"
															},
															"loopExpression": {
																"expression": {
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1473:3:4",
																	"subExpression": {
																		"id": 1513,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "1475:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1515,
																"nodeType": "ExpressionStatement",
																"src": "1473:3:4"
															},
															"nodeType": "ForStatement",
															"src": "1437:108:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1530,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "1569:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1583:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1575:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1531,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1575:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1575:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1569:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "1565:424:4",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "1587:402:4",
													"statements": [
														{
															"body": {
																"id": 1581,
																"nodeType": "Block",
																"src": "1642:337:4",
																"statements": [
																	{
																		"assignments": [
																			1548
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1548,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "1668:2:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1581,
																				"src": "1660:10:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1547,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1660:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1552,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1549,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1479,
																				"src": "1673:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1551,
																			"indexExpression": {
																				"id": 1550,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1537,
																				"src": "1677:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1673:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1660:19:4"
																	},
																	{
																		"assignments": [
																			1554
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1554,
																				"mutability": "mutable",
																				"name": "amount",
																				"nameLocation": "1705:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1581,
																				"src": "1697:14:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1553,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1697:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1558,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1555,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1482,
																				"src": "1714:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1557,
																			"indexExpression": {
																				"id": 1556,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1537,
																				"src": "1722:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1714:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1697:27:4"
																	},
																	{
																		"assignments": [
																			1560
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1560,
																				"mutability": "mutable",
																				"name": "supply",
																				"nameLocation": "1750:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1581,
																				"src": "1742:14:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1559,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1742:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1564,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1561,
																				"name": "_totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1440,
																				"src": "1759:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1563,
																			"indexExpression": {
																				"id": 1562,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1548,
																				"src": "1772:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1759:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1742:33:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1566,
																						"name": "supply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1560,
																						"src": "1801:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 1567,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1554,
																						"src": "1811:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1801:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "455243313135353a206275726e20616d6f756e74206578636565647320746f74616c537570706c79",
																					"id": 1569,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1819:42:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4",
																						"typeString": "literal_string \"ERC1155: burn amount exceeds totalSupply\""
																					},
																					"value": "ERC1155: burn amount exceeds totalSupply"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_9eb0869d69143813ac9f244871191d8f2e530e71a4599ba9db4501f0f6110ee4",
																						"typeString": "literal_string \"ERC1155: burn amount exceeds totalSupply\""
																					}
																				],
																				"id": 1565,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "1793:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1793:69:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1571,
																		"nodeType": "ExpressionStatement",
																		"src": "1793:69:4"
																	},
																	{
																		"id": 1580,
																		"nodeType": "UncheckedBlock",
																		"src": "1880:85:4",
																		"statements": [
																			{
																				"expression": {
																					"id": 1578,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"id": 1572,
																							"name": "_totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1440,
																							"src": "1912:12:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 1574,
																						"indexExpression": {
																							"id": 1573,
																							"name": "id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1548,
																							"src": "1925:2:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "1912:16:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1575,
																							"name": "supply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1560,
																							"src": "1931:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1576,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1554,
																							"src": "1940:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1931:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1912:34:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1579,
																				"nodeType": "ExpressionStatement",
																				"src": "1912:34:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1540,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "1621:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1541,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "1625:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1629:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1625:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1621:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1582,
															"initializationExpression": {
																"assignments": [
																	1537
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1537,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1614:1:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 1582,
																		"src": "1606:9:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1536,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1606:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1539,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1606:13:4"
															},
															"loopExpression": {
																"expression": {
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1637:3:4",
																	"subExpression": {
																		"id": 1544,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "1639:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1546,
																"nodeType": "ExpressionStatement",
																"src": "1637:3:4"
															},
															"nodeType": "ForStatement",
															"src": "1601:378:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "1027:59:4",
										"text": " @dev See {ERC1155-_beforeTokenTransfer}."
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1100:20:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1486,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1303:8:4"
									},
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1138:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1130:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1164:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1156:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1186:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1178:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1215:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1198:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1477,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1198:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1478,
													"nodeType": "ArrayTypeName",
													"src": "1198:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1245:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1228:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1480,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1481,
													"nodeType": "ArrayTypeName",
													"src": "1228:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1275:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1262:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1483,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:165:4"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:4"
									},
									"scope": 1587,
									"src": "1091:904:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1588,
							"src": "522:1475:4",
							"usedErrors": []
						}
					],
					"src": "126:1872:4"
				},
				"id": 4
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1389
						],
						"IERC1155MetadataURI": [
							1602
						],
						"IERC165": [
							1955
						]
					},
					"id": 1603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1589,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:5"
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1603,
							"sourceUnit": 1390,
							"src": "142:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1592,
										"name": "IERC1155",
										"nameLocations": [
											"397:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1389,
										"src": "397:8:5"
									},
									"id": 1593,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1591,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1602,
							"linearizedBaseContracts": [
								1602,
								1389,
								1955
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "622:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:5"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "657:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:5"
									},
									"scope": 1602,
									"src": "609:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1603,
							"src": "364:310:5",
							"usedErrors": []
						}
					],
					"src": "117:558:5"
				},
				"id": 5
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1897
						]
					},
					"id": 1898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1604,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1605,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1897,
							"linearizedBaseContracts": [
								1897
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "1241:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1613,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1608,
																"src": "1465:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1612,
												"id": 1618,
												"nodeType": "Return",
												"src": "1458:30:6"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "1195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:6"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "1235:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1610,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:6"
									},
									"scope": 1897,
									"src": "1175:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "2483:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1631,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1897",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1897",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1629,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1634,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "2526:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1628,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:6"
											},
											{
												"assignments": [
													1640,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1640,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1653,
														"src": "2578:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1639,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1647,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1641,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "2596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1643,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1625,
																"src": "2618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1649,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:6"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2431:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2458:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:6"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:6"
									},
									"scope": 1897,
									"src": "2412:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "3555:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "3585:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "3593:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1664,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1671,
															1691
														],
														"referencedDeclaration": 1691,
														"src": "3572:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1663,
												"id": 1669,
												"nodeType": "Return",
												"src": "3565:67:6"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3504:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1658,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:6"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "3541:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:6"
									},
									"scope": 1897,
									"src": "3466:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "4008:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1684,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "4047:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1685,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "4055:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1687,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "4064:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1683,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1711,
															1761
														],
														"referencedDeclaration": 1761,
														"src": "4025:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1682,
												"id": 1689,
												"nodeType": "Return",
												"src": "4018:59:6"
											}
										]
									},
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3916:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3943:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1677,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:6"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "3994:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:6"
									},
									"scope": 1897,
									"src": "3861:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "4589:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1704,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "4628:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1705,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "4636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1706,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "4642:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1703,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1711,
															1761
														],
														"referencedDeclaration": 1761,
														"src": "4606:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1702,
												"id": 1709,
												"nodeType": "Return",
												"src": "4599:94:6"
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "4486:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "4510:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1695,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "4537:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:6"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "4575:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1700,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:6"
									},
									"scope": 1897,
									"src": "4446:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "5127:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1728,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1897",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1897",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1726,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1731,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "5170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1738,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "5247:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1737,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "5236:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:6"
											},
											{
												"assignments": [
													1744,
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "5300:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1743,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "5314:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1745,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"arguments": [
														{
															"id": 1751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "5367:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1747,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "5341:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1749,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "5360:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1755,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "5406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1756,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "5415:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1757,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "5427:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1754,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "5389:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1759,
												"nodeType": "Return",
												"src": "5382:58:6"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "4988:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "5012:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1715,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "5039:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "5062:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1719,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:6"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "5113:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:6"
									},
									"scope": 1897,
									"src": "4948:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "5724:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1772,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "5760:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1773,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "5768:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1771,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1778,
															1813
														],
														"referencedDeclaration": 1813,
														"src": "5741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1776,
												"nodeType": "Return",
												"src": "5734:80:6"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "5652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "5668:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:6"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "5710:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:6"
									},
									"scope": 1897,
									"src": "5624:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "6163:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1792,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "6192:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1791,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "6181:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:6"
											},
											{
												"assignments": [
													1798,
													1800
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1812,
														"src": "6252:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1797,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1800,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1812,
														"src": "6266:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1799,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1805,
												"initialValue": {
													"arguments": [
														{
															"id": 1803,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "6311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1801,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "6293:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1807,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "6350:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1808,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "6359:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1809,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "6371:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1806,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "6333:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1789,
												"id": 1811,
												"nodeType": "Return",
												"src": "6326:58:6"
											}
										]
									},
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6042:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6066:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6093:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1784,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:6"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "6149:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:6"
									},
									"scope": 1897,
									"src": "6005:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "6667:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1824,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "6705:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1825,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "6713:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1823,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1830,
															1865
														],
														"referencedDeclaration": 1865,
														"src": "6684:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1822,
												"id": 1828,
												"nodeType": "Return",
												"src": "6677:84:6"
											}
										]
									},
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6600:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:6"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "6653:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:6"
									},
									"scope": 1897,
									"src": "6570:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "7109:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1844,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "7138:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1843,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "7127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:6"
											},
											{
												"assignments": [
													1850,
													1852
												],
												"declarations": [
													{
														"constant": false,
														"id": 1850,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "7200:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1849,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1852,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1864,
														"src": "7214:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1851,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1857,
												"initialValue": {
													"arguments": [
														{
															"id": 1855,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "7261:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1853,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "7241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1859,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "7300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1860,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "7309:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1861,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "7321:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1858,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "7283:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1841,
												"id": 1863,
												"nodeType": "Return",
												"src": "7276:58:6"
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "6993:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "7017:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "7044:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:6"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "7095:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:6"
									},
									"scope": 1897,
									"src": "6954:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "7721:532:6",
										"statements": [
											{
												"condition": {
													"id": 1877,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1868,
													"src": "7735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1893,
													"nodeType": "Block",
													"src": "7792:455:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1881,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "7876:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1891,
																"nodeType": "Block",
																"src": "8184:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1888,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1872,
																					"src": "8209:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1887,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1890,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:6"
																	}
																]
															},
															"id": 1892,
															"nodeType": "IfStatement",
															"src": "7872:365:6",
															"trueBody": {
																"id": 1886,
																"nodeType": "Block",
																"src": "7899:279:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:6"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1870,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1870,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1885,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1894,
												"nodeType": "IfStatement",
												"src": "7731:516:6",
												"trueBody": {
													"id": 1880,
													"nodeType": "Block",
													"src": "7744:42:6",
													"statements": [
														{
															"expression": {
																"id": 1878,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "7765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1876,
															"id": 1879,
															"nodeType": "Return",
															"src": "7758:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "7596:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "7618:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "7651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:6"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "7707:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:6"
									},
									"scope": 1897,
									"src": "7561:692:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1898,
							"src": "194:8061:6",
							"usedErrors": []
						}
					],
					"src": "101:8155:6"
				},
				"id": 6
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1919
						]
					},
					"id": 1920,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1900,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1919,
							"linearizedBaseContracts": [
								1919
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1905,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1904,
												"id": 1907,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1919,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1914,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1913,
												"id": 1916,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1919,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1920,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1943
						],
						"IERC165": [
							1955
						]
					},
					"id": 1944,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1921,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1922,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1944,
							"sourceUnit": 1956,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1924,
										"name": "IERC165",
										"nameLocations": [
											"754:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1955,
										"src": "754:7:8"
									},
									"id": 1925,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1923,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1943,
							"linearizedBaseContracts": [
								1943,
								1955
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1954
									],
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1934,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1936,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1955,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1955_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1955_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1935,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1955",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1933,
												"id": 1940,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1930,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1927,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 1943,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1944,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "CupCake_DEX_contracts/openzeppelin-contracts-4.6.0/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1955
						]
					},
					"id": 1956,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1945,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1946,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1955,
							"linearizedBaseContracts": [
								1955
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1955,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1956,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			}
		}
	}
}